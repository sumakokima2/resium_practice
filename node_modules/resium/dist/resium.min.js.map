{"version":3,"file":"resium.min.js","sources":["../node_modules/lodash.pick/index.js","../src/core/context.tsx","../src/core/events.ts","../src/core/CesiumComponent.tsx","../src/core/CameraOperation.ts","../src/core/util.ts","../src/core/EventManager.ts","../src/Billboard.ts","../src/BillboardCollection.ts","../src/BillboardGraphics.ts","../src/BoxGraphics.ts","../src/Camera.ts","../src/CameraFlyHome.ts","../src/CameraFlyTo.ts","../src/CameraFlyToBoundingSphere.ts","../src/Cesium3DTileset.ts","../src/CesiumWidget.tsx","../src/Clock.ts","../src/CorridorGraphics.ts","../src/CustomDataSource.ts","../src/CylinderGraphics.ts","../src/CzmlDataSource.ts","../src/EllipseGraphics.ts","../src/EllipsoidGraphics.ts","../src/Entity.ts","../src/EntityDescription.ts","../src/Fog.ts","../src/GeoJsonDataSource.ts","../src/Globe.ts","../src/ImageryLayer.ts","../src/ImageryLayerCollection.ts","../src/KmlDataSource.ts","../src/Label.ts","../src/LabelCollection.ts","../src/LabelGraphics.ts","../src/Model.ts","../src/ModelGraphics.ts","../src/Moon.ts","../src/ParticleSystem.ts","../src/PathGraphics.ts","../src/PlaneGraphics.ts","../src/PointGraphics.ts","../src/PointPrimitive.ts","../src/PointPrimitiveCollection.ts","../src/PolygonGraphics.ts","../src/Polyline.ts","../src/PolylineCollection.ts","../src/PolylineGraphics.ts","../src/PolylineVolumeGraphics.ts","../src/core/PostProcessStage.ts","../src/PostProcessStage.ts","../src/PostProcessStageComposite.ts","../src/Primitive.ts","../src/RectangleGraphics.ts","../src/Scene.ts","../src/ScreenSpaceCameraController.ts","../src/ScreenSpaceEvent.ts","../src/ScreenSpaceEventHandler.ts","../src/Sun.ts","../src/TimeDynamicPointCloud.ts","../src/Viewer.tsx","../src/WallGraphics.ts"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} props The property identifiers to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, props) {\n  object = Object(object);\n  return basePickBy(object, props, function(value, key) {\n    return key in object;\n  });\n}\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} props The property identifiers to pick from.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, props, predicate) {\n  var index = -1,\n      length = props.length,\n      result = {};\n\n  while (++index < length) {\n    var key = props[index],\n        value = object[key];\n\n    if (predicate(value, key)) {\n      result[key] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [props] The property identifiers to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = baseRest(function(object, props) {\n  return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));\n});\n\nmodule.exports = pick;\n","import React from \"react\";\n\nexport interface Context {\n  [key: string]: unknown | undefined;\n}\n\nexport interface CesiumProp<C> {\n  cesium: C;\n}\n\nexport type WithContextProps<P, C> = P & CesiumProp<C>;\nexport type WithContextType<P, C> = React.ComponentType<WithContextProps<P, C>>;\n\nexport const { Provider, Consumer } = React.createContext<Context>({});\n\nexport const withCesium = <P, C>(Component: WithContextType<P, C>) =>\n  // supports both functional components and class components\n  React.forwardRef<WithContextType<P, C>, P>(\n    (props: P & { children?: React.ReactNode }, ref?: React.Ref<WithContextType<P, C>> | null) => (\n      <Consumer>\n        {(value: any) => <Component {...Object.assign({}, props, { ref })} cesium={value} />}\n      </Consumer>\n    ),\n  );\n","import { Event } from \"cesium\";\n\ntype EventFunc = (...args: any[]) => any;\n\ninterface EventTarget {\n  [key: string]: Event | unknown;\n}\n\nexport interface Events {\n  [key: string]: (...args: any[]) => any;\n}\n\nexport const attachEvents = (target: unknown, events: Events) => {\n  Object.entries(events).forEach(([k, v]) => {\n    const ev = (target as EventTarget)[k];\n    if (ev instanceof Event && v) {\n      ev.addEventListener(v);\n    }\n  });\n};\n\nexport const detachEvents = (target: unknown, events: Events) => {\n  Object.entries(events).forEach(([k, v]) => {\n    const ev = (target as EventTarget)[k];\n    if (ev instanceof Event && v) {\n      ev.removeEventListener(v);\n    }\n  });\n};\n\nexport const updateEvents = (target: unknown, prevEvents: Events, newEvents: Events) => {\n  const pek = Object.keys(prevEvents);\n  const nek = Object.keys(newEvents);\n\n  // removed events\n  const re = pek\n    .map<[string, EventFunc]>(k => [k, prevEvents[k]])\n    .reduce<Events>((e, [k, v]) => {\n      if (nek.indexOf(k) === -1 || v !== newEvents[k]) {\n        e[k] = v;\n      }\n      return e;\n    }, {});\n\n  // new events\n  const ne = nek\n    .map<[string, EventFunc]>(k => [k, newEvents[k]])\n    .reduce<Events>((e, [k, v]) => {\n      if (pek.indexOf(k) === -1 || v !== prevEvents[k]) {\n        e[k] = v;\n      }\n      return e;\n    }, {});\n\n  detachEvents(target, re);\n  attachEvents(target, ne);\n};\n\nexport const getEventProps = (eventNames: string[], props: Events) =>\n  eventNames.reduce<{ [key: string]: EventFunc }>(\n    (a, b) => ({\n      ...a,\n      [b]: props[`on${b[0].toUpperCase()}${b.slice(1).replace(/Event$/, \"\")}`],\n    }),\n    {},\n  );\n","import React from \"react\";\nimport pick from \"lodash.pick\";\n\nimport { withCesium, Provider, WithContextProps } from \"./context\";\nimport { attachEvents, updateEvents, detachEvents } from \"./events\";\n\nexport type EventKeys<T> = { [P in keyof T]: T[P] extends Cesium.Event ? P : never }[keyof T];\nexport type EventkeyMap<T, P> = { [K in EventKeys<T>]?: P };\n\nexport interface CesiumComponentOption<E, P, C, CC = {}, R = {}> {\n  name: string;\n  create: (\n    cesiumProps: Readonly<P>,\n    props: Readonly<P>,\n    context: Readonly<C>,\n    ref?: React.RefObject<R>,\n  ) => E | [E, any];\n  mount?: (element: E, context: Readonly<C>, props: Readonly<P>, ref?: React.RefObject<R>) => void;\n  unmount?: (\n    element: E,\n    context: Readonly<C>,\n    props: Readonly<P>,\n    ref: React.RefObject<R> | undefined,\n    state: any,\n  ) => void;\n  render?: (\n    element: E | undefined,\n    props: Readonly<P> & Readonly<{ children?: React.ReactNode }>,\n    mounted: boolean,\n    ref: React.RefObject<R> | undefined,\n  ) => React.ReactNode;\n  update?: (element: E, props: Readonly<P>, prevProps: Readonly<P>, context: Readonly<C>) => void;\n  provide?: (element: E, props: Readonly<P>, state: any) => CC;\n  cesiumProps?: Array<keyof P>;\n  cesiumReadonlyProps?: Array<keyof P>;\n  cesiumEventProps?: EventkeyMap<E, keyof P>;\n  setCesiumPropsAfterCreate?: boolean;\n  noRender?: boolean;\n  createRef?: boolean;\n  defaultProps?: Partial<P>;\n}\n\nexport interface CesiumElementHolder<E> {\n  readonly cesiumElement: E | undefined;\n}\n\nexport type CesiumComponentType<E, P> = React.ForwardRefExoticComponent<\n  React.PropsWithoutRef<P> & React.RefAttributes<CesiumElementHolder<E>>\n>;\n\nconst createCesiumComponent = <E, P, C, CC = {}, R = {}>(\n  opts: CesiumComponentOption<E, P, C, CC, R>,\n): CesiumComponentType<E, P> => {\n  class CesiumComponent extends React.PureComponent<WithContextProps<P, C>> {\n    public static displayName = opts.name;\n\n    public static defaultProps: Partial<WithContextProps<P, C>> =\n      (opts.defaultProps as Partial<WithContextProps<P, C>>) || {};\n\n    private static getCesiumEventMap(\n      props: Readonly<WithContextProps<P, C>> & Readonly<{ children?: React.ReactNode }>,\n    ) {\n      if (!opts.cesiumEventProps) {\n        return {};\n      }\n      return Object.entries(opts.cesiumEventProps).reduce(\n        (a, [cesiumEventName, eventProp]) => ({\n          ...a,\n          ...(eventProp\n            ? {\n                [cesiumEventName]: (props as any)[eventProp],\n              }\n            : {}),\n        }),\n        {},\n      );\n    }\n\n    private static getCesiumProps(\n      props: Readonly<WithContextProps<P, C>> & Readonly<{ children?: React.ReactNode }>,\n    ) {\n      return pick(props, opts.cesiumProps || []);\n    }\n\n    private static getCesiumReadOnlyProps(\n      props: Readonly<WithContextProps<P, C>> & Readonly<{ children?: React.ReactNode }>,\n    ) {\n      return pick(props, opts.cesiumReadonlyProps || []);\n    }\n\n    private static shouldUpdate(a: { [key: string]: any }, b: { [key: string]: any }) {\n      return Object.keys(a).filter(k => a[k] !== b[k]);\n    }\n\n    public get cesiumElement() {\n      return this._ce;\n    }\n\n    // tslint:disable-next-line:variable-name\n    private _ce?: E;\n    // tslint:disable-next-line:variable-name\n    private _state: any;\n    // tslint:disable-next-line:variable-name\n    private _provided: Partial<CC> = {}; // to avoid extra rendering\n    private mounted: boolean = false;\n    private ref?: React.RefObject<R>;\n\n    constructor(props: WithContextProps<P, C>) {\n      super(props);\n      if (opts.createRef) {\n        this.ref = React.createRef();\n      }\n      if (!opts.createRef) {\n        this.create(props);\n      }\n    }\n\n    public render() {\n      if (opts.noRender) {\n        return null;\n      }\n\n      const render = opts.render\n        ? opts.render(this._ce, this.props, this.mounted, this.ref)\n        : this.props.children || null;\n\n      this.updateProvided();\n\n      return !opts.render && !this.mounted ? null : opts.provide ? (\n        <Provider value={this._provided}>{render}</Provider>\n      ) : (\n        render\n      );\n    }\n\n    public componentDidMount() {\n      if (opts.createRef) {\n        this.create(this.props);\n      }\n      this.mount();\n      this.mounted = true;\n      this.forceUpdate();\n    }\n\n    public componentDidUpdate(prevProps: WithContextProps<P, C>) {\n      // rerender on remount\n      if (!this.mounted) {\n        if (opts.createRef) {\n          this.create(this.props);\n        }\n        this.mount();\n        this.mounted = true;\n        this.forceUpdate();\n        return;\n      }\n\n      // if readonly props is updated, remount this component.\n      const shouldUpdateProps = CesiumComponent.shouldUpdate(\n        CesiumComponent.getCesiumReadOnlyProps(this.props),\n        CesiumComponent.getCesiumReadOnlyProps(prevProps),\n      );\n      if (shouldUpdateProps.length > 0) {\n        if (process.env.NODE_ENV !== \"production\") {\n          console.warn(\n            `Warning: <${\n              opts.name\n            }> is remounted because read only props have been updated: ${shouldUpdateProps.join(\n              \", \",\n            )}`,\n          );\n        }\n\n        this.unmount();\n        if (!opts.createRef) {\n          this.create(this.props);\n        }\n        this.mounted = false;\n        this.forceUpdate();\n        return;\n      }\n\n      this.update(prevProps);\n    }\n\n    public componentWillUnmount() {\n      this.unmount();\n      this._ce = undefined;\n    }\n\n    private create(props: Readonly<WithContextProps<P, C>>) {\n      const cesiumProps = pick(props, [\n        ...(opts.cesiumProps || []),\n        ...(opts.cesiumReadonlyProps || []),\n      ]);\n      const element = opts.create(cesiumProps, props, this.props.cesium, this.ref);\n      if (Array.isArray(element)) {\n        this._ce = element[0];\n        this._state = element[1];\n      } else {\n        this._ce = element;\n      }\n\n      if (opts.setCesiumPropsAfterCreate && this._ce) {\n        Object.entries(CesiumComponent.getCesiumProps(this.props)).forEach(([k, v]) => {\n          if (this._ce) {\n            (this._ce as any)[k] = v;\n          }\n        });\n      }\n\n      attachEvents(this._ce, CesiumComponent.getCesiumEventMap(this.props));\n    }\n\n    private mount() {\n      if (opts.mount && this._ce) {\n        opts.mount(this._ce, this.props.cesium, this.props, this.ref);\n      }\n    }\n\n    private unmount() {\n      if (opts.unmount && this._ce) {\n        opts.unmount(this._ce, this.props.cesium, this.props, this.ref, this._state);\n      }\n\n      if (this._ce) {\n        detachEvents(this._ce, CesiumComponent.getCesiumEventMap(this.props));\n      }\n\n      this._ce = undefined;\n    }\n\n    private update(prevProps: Readonly<WithContextProps<P, C>>) {\n      Object.entries(CesiumComponent.getCesiumProps(this.props))\n        .filter(([k, v]) => (prevProps as any)[k] !== v)\n        .forEach(([k, v]) => {\n          if (this._ce) {\n            (this._ce as any)[k] = v;\n          }\n        });\n\n      updateEvents(\n        this._ce,\n        CesiumComponent.getCesiumEventMap(prevProps),\n        CesiumComponent.getCesiumEventMap(this.props),\n      );\n\n      if (opts.update && this._ce) {\n        opts.update(this._ce, this.props, prevProps, this.props.cesium);\n      }\n    }\n\n    private updateProvided() {\n      if (!opts.provide) {\n        return;\n      }\n      // clear provided object\n      for (const key of Object.keys(this._provided)) {\n        delete this._provided[key as keyof CC];\n      }\n      // update provided object\n      Object.assign(\n        this._provided,\n        this.props.cesium,\n        this._ce ? opts.provide(this._ce, this.props, this._state) : {},\n      );\n    }\n  }\n\n  return withCesium(CesiumComponent);\n};\n\nexport default createCesiumComponent;\n","import React from \"react\";\nimport { Camera } from \"cesium\";\nimport { withCesium } from \"./context\";\n\nexport interface CameraOperationProps {\n  cancelCameraFlight?: boolean;\n}\n\nconst createCameraOperation = <P>(opts: {\n  name: string;\n  cameraOperationStart: (camera: Camera, props: Readonly<P>, prevProps?: Readonly<P>) => void;\n}) =>\n  withCesium<P & CameraOperationProps, { camera?: Cesium.Camera }>(\n    class CameraOperation extends React.PureComponent<\n      CameraOperationProps & { cesium: { camera?: Cesium.Camera } } & P\n    > {\n      public static displayName = name;\n\n      public componentDidMount() {\n        if (this.props.cesium.camera) {\n          opts.cameraOperationStart(this.props.cesium.camera, this.props);\n        }\n      }\n\n      public componentDidUpdate(prevProps: Readonly<P>) {\n        if (this.props.cesium.camera) {\n          this.props.cesium.camera.cancelFlight();\n          opts.cameraOperationStart(this.props.cesium.camera, this.props, prevProps);\n        }\n      }\n\n      public componentWillUnmount() {\n        const {\n          cancelCameraFlight,\n          cesium: { camera },\n        } = this.props;\n        if (cancelCameraFlight && camera) {\n          camera.cancelFlight();\n        }\n      }\n\n      public render() {\n        return null;\n      }\n    },\n  );\n\nexport default createCameraOperation;\n","import { Polyline, DistanceDisplayCondition } from \"cesium\";\n\nexport const polylineEquals = (a: any, b: any) =>\n  !!a &&\n  !!b &&\n  a instanceof Polyline &&\n  b instanceof Polyline &&\n  a.show === b.show &&\n  a.width === b.width &&\n  a.loop === b.loop &&\n  a.material === b.material &&\n  a.positions === b.positions &&\n  a.id === b.id &&\n  DistanceDisplayCondition.equals(\n    (a as any).distanceDisplayCondition,\n    (b as any).distanceDisplayCondition,\n  );\n\nexport const pickedObjectEquals = (picked: any, element: any) =>\n  !!picked &&\n  (picked === element ||\n    (!!picked.id && picked.id === element) ||\n    (!!picked.primitive &&\n      (picked.primitive === element ||\n        (!!picked.primitive.equals && picked.primitive.equals(element)) ||\n        polylineEquals(picked.primitive, element))));\n","import Cesium, { ScreenSpaceEventType, ScreenSpaceEventHandler } from \"cesium\";\n\nimport { pickedObjectEquals } from \"./util\";\n\nexport type EventType =\n  | \"onClick\"\n  | \"onDoubleClick\"\n  | \"onMouseDown\"\n  | \"onMouseUp\"\n  | \"onMiddleClick\"\n  | \"onMiddleDown\"\n  | \"onMiddleUp\"\n  | \"onMouseMove\"\n  | \"onPinchEnd\"\n  | \"onPinchMove\"\n  | \"onPinchStart\"\n  | \"onRightClick\"\n  | \"onRightDown\"\n  | \"onRightUp\"\n  | \"onWheel\"\n  | \"onMouseEnter\"\n  | \"onMouseLeave\";\n\nexport interface EventProps<T> {\n  onClick?: (movement: CesiumMovementEvent, target: T) => void;\n  onDoubleClick?: (movement: CesiumMovementEvent, target: T) => void;\n  onMouseDown?: (movement: CesiumMovementEvent, target: T) => void;\n  onMouseUp?: (movement: CesiumMovementEvent, target: T) => void;\n  onMiddleClick?: (movement: CesiumMovementEvent, target: T) => void;\n  onMiddleDown?: (movement: CesiumMovementEvent, target: T) => void;\n  onMiddleUp?: (movement: CesiumMovementEvent, target: T) => void;\n  onMouseMove?: (movement: CesiumMovementEvent, target: T) => void;\n  onPinchEnd?: (movement: CesiumMovementEvent, target: T) => void;\n  onPinchMove?: (movement: CesiumMovementEvent, target: T) => void;\n  onPinchStart?: (movement: CesiumMovementEvent, target: T) => void;\n  onRightClick?: (movement: CesiumMovementEvent, target: T) => void;\n  onRightDown?: (movement: CesiumMovementEvent, target: T) => void;\n  onRightUp?: (movement: CesiumMovementEvent, target: T) => void;\n  onWheel?: (movement: CesiumMovementEvent, target: T) => void;\n  onMouseEnter?: (movement: CesiumMovementEvent, target: T) => void;\n  onMouseLeave?: (movement: CesiumMovementEvent, target: T) => void;\n}\n\ntype EventMap<T> = { [k in EventType]: T };\n\nexport interface CesiumMovementEvent {\n  position?: Cesium.Cartesian2;\n  startPositon?: Cesium.Cartesian2;\n  endPosition?: Cesium.Cartesian2;\n}\n\nexport type Callback<T = any> = (e: CesiumMovementEvent, source: T) => void;\n\nexport const eventNames: EventType[] = [\n  \"onClick\",\n  \"onDoubleClick\",\n  \"onMouseDown\",\n  \"onMouseUp\",\n  \"onMiddleClick\",\n  \"onMiddleDown\",\n  \"onMiddleUp\",\n  \"onMouseMove\",\n  \"onPinchEnd\",\n  \"onPinchMove\",\n  \"onPinchStart\",\n  \"onRightClick\",\n  \"onRightDown\",\n  \"onRightUp\",\n  \"onWheel\",\n  \"onMouseEnter\",\n  \"onMouseLeave\",\n];\n\nexport default class EventManager {\n  private static eventTypeMap: EventMap<ScreenSpaceEventType> = {\n    onClick: ScreenSpaceEventType.LEFT_CLICK,\n    onDoubleClick: ScreenSpaceEventType.LEFT_DOUBLE_CLICK,\n    onMouseDown: ScreenSpaceEventType.LEFT_DOWN,\n    onMouseUp: ScreenSpaceEventType.LEFT_UP,\n    onMiddleClick: ScreenSpaceEventType.MIDDLE_CLICK,\n    onMiddleDown: ScreenSpaceEventType.MIDDLE_DOWN,\n    onMiddleUp: ScreenSpaceEventType.MIDDLE_UP,\n    onMouseMove: ScreenSpaceEventType.MOUSE_MOVE,\n    onPinchEnd: ScreenSpaceEventType.PINCH_END,\n    onPinchMove: ScreenSpaceEventType.PINCH_MOVE,\n    onPinchStart: ScreenSpaceEventType.PINCH_START,\n    onRightClick: ScreenSpaceEventType.RIGHT_CLICK,\n    onRightDown: ScreenSpaceEventType.RIGHT_DOWN,\n    onRightUp: ScreenSpaceEventType.RIGHT_UP,\n    onWheel: ScreenSpaceEventType.WHEEL,\n    onMouseEnter: ScreenSpaceEventType.MOUSE_MOVE,\n    onMouseLeave: ScreenSpaceEventType.MOUSE_MOVE,\n  };\n\n  private scene: Cesium.Scene;\n  private sshe: ScreenSpaceEventHandler;\n  private events: EventMap<Map<any, Callback>> = {\n    onClick: new Map(),\n    onDoubleClick: new Map(),\n    onMouseDown: new Map(),\n    onMouseUp: new Map(),\n    onMiddleClick: new Map(),\n    onMiddleDown: new Map(),\n    onMiddleUp: new Map(),\n    onMouseMove: new Map(),\n    onPinchEnd: new Map(),\n    onPinchMove: new Map(),\n    onPinchStart: new Map(),\n    onRightClick: new Map(),\n    onRightDown: new Map(),\n    onRightUp: new Map(),\n    onWheel: new Map(),\n    onMouseEnter: new Map(),\n    onMouseLeave: new Map(),\n  };\n  private hovered = new Map<any, boolean>();\n  private changed = new Map<any, boolean>();\n\n  constructor(scene: Cesium.Scene, canvas: HTMLCanvasElement) {\n    this.scene = scene;\n    this.sshe = new ScreenSpaceEventHandler(canvas);\n  }\n\n  public destroy() {\n    if (!this.sshe.isDestroyed()) {\n      this.sshe.destroy();\n    }\n  }\n\n  public isDestroyed() {\n    return this.sshe.isDestroyed();\n  }\n\n  public on(element: any, type: EventType, cb: Callback) {\n    this.events[type].set(element, cb);\n  }\n\n  public off(element: any, type: EventType) {\n    this.events[type].delete(element);\n  }\n\n  public setEvents(element: any, props: object) {\n    Object.entries(props).forEach(([k, v]) => {\n      const et = k as EventType;\n      if (eventNames.includes(et)) {\n        if (v) {\n          this.on(element, et, v);\n        } else {\n          this.off(element, et);\n        }\n      }\n    });\n    this.commit();\n  }\n\n  public clearEvents(element: any) {\n    eventNames.forEach(et => {\n      this.off(element, et);\n    });\n    this.commit();\n  }\n\n  public commit() {\n    const sshe = this.sshe;\n    const destroyed = this.sshe.isDestroyed();\n    const elements = new Set(this.hovered.keys());\n    const elements2 = new Set<any>();\n\n    if (!destroyed) {\n      if (\n        this.events.onMouseEnter.size === 0 &&\n        this.events.onMouseLeave.size === 0 &&\n        this.events.onMouseMove.size === 0\n      ) {\n        this.sshe.removeInputAction(ScreenSpaceEventType.MOUSE_MOVE);\n      } else if (!this.sshe.getInputAction(ScreenSpaceEventType.MOUSE_MOVE)) {\n        this.sshe.setInputAction(this.onMouseMove as any, ScreenSpaceEventType.MOUSE_MOVE);\n      }\n    }\n\n    Object.entries(this.events).forEach(([et, m]) => {\n      const eventType = et as EventType;\n\n      m.forEach((v, k) => {\n        if (!this.hovered.has(k)) {\n          this.hovered.set(k, false);\n        }\n        elements2.add(k);\n      });\n\n      if (et === \"onMouseEnter\" || et === \"onMouseLeave\" || et === \"onMouseMove\") {\n        return;\n      }\n\n      const cesiumEventType = EventManager.eventTypeMap[eventType];\n\n      if (!destroyed) {\n        if (m.size === 0) {\n          sshe.removeInputAction(cesiumEventType);\n        } else if (!sshe.getInputAction(cesiumEventType)) {\n          sshe.setInputAction(this.eventCallback(eventType) as any, cesiumEventType);\n        }\n      }\n    });\n\n    elements.forEach(e => {\n      if (!elements2.has(e)) {\n        this.hovered.delete(e);\n      }\n    });\n  }\n\n  public getScreenSpaceEventHandler() {\n    return this.sshe;\n  }\n\n  private onMouseMove = (e: CesiumMovementEvent) => {\n    const picked = this.pick(e.endPosition);\n    this.changed.clear();\n\n    this.hovered.forEach((h, element) => {\n      const p = pickedObjectEquals(picked, element);\n      this.hovered.set(element, p);\n      if (p !== h) {\n        this.changed.set(element, p);\n      }\n    });\n\n    if (picked) {\n      this.events.onMouseMove.forEach((cb, element) => {\n        if (this.hovered.get(element)) {\n          cb(e, element);\n        }\n      });\n    }\n\n    this.changed.forEach((hovered, element) => {\n      if (hovered) {\n        const onMouseEnter = this.events.onMouseEnter.get(element);\n        if (onMouseEnter) {\n          onMouseEnter(e, element);\n        }\n      } else {\n        const onMouseLeave = this.events.onMouseLeave.get(element);\n        if (onMouseLeave) {\n          onMouseLeave(e, element);\n        }\n      }\n    });\n  };\n\n  private eventCallback = (et: EventType) => (e: CesiumMovementEvent) => {\n    const picked = this.pick(e.position);\n    if (picked) {\n      this.events[et].forEach((cb, element) => {\n        if (pickedObjectEquals(picked, element)) {\n          cb(e, element);\n        }\n      });\n    }\n  };\n\n  private pick(pos?: Cesium.Cartesian2): any | undefined {\n    if (!pos) {\n      return undefined;\n    }\n    const picked = this.scene.pick(pos);\n    if (picked) {\n      // Entity\n      if (picked.id instanceof Cesium.Entity) {\n        return picked.id;\n      }\n      // Other\n      return picked;\n    }\n    return undefined;\n  }\n}\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent from \"./core/CesiumComponent\";\nimport EventManager, { EventProps } from \"./core/EventManager\";\n\n/*\n@summary\n`Billboard` is a billboard primitive in the `BillboardCollection`.\n\nPrimitive is a low layer API for geographical visualization.\n[Entity](/components/entity) is more recommended unless performance issues.\n*/\n\n/*\n@scope\nOnly inside [BillboardCollection](/components/BillboardCollection) components.\nA billboard object will be attached to the parent BillboardCollection.\n*/\n\nexport interface BillboardCesiumProps {\n  alignAxis?: Cesium.Cartesian3;\n  color?: Cesium.Color;\n  disableDepthTestDistance?: number;\n  distanceDisplayCondition?: Cesium.DistanceDisplayCondition;\n  height?: number;\n  heightReference?: Cesium.HeightReference;\n  horizontalOrigin?: Cesium.HorizontalOrigin;\n  id?: any;\n  image?: string;\n  pixelOffset?: Cesium.Cartesian2;\n  pixelOffsetScaleByDistance?: Cesium.NearFarScalar;\n  position?: Cesium.Cartesian3;\n  rotation?: number;\n  scale?: number;\n  scaleByDistance?: Cesium.NearFarScalar;\n  show?: boolean;\n  sizeInMeters?: boolean;\n  translucencyByDistance?: Cesium.NearFarScalar;\n  verticalOrigin?: Cesium.VerticalOrigin;\n  width?: number;\n}\n\nexport interface BillboardProps extends BillboardCesiumProps, EventProps<Cesium.Billboard> {}\n\nexport interface BillboardContext {\n  billboardCollection?: Cesium.BillboardCollection;\n  __RESIUM_EVENT_MANAGER?: EventManager;\n}\n\nconst cesiumProps: Array<keyof BillboardCesiumProps> = [\n  \"alignAxis\",\n  \"color\",\n  \"disableDepthTestDistance\",\n  \"distanceDisplayCondition\",\n  \"height\",\n  \"heightReference\",\n  \"horizontalOrigin\",\n  \"id\",\n  \"image\",\n  \"pixelOffset\",\n  \"pixelOffsetScaleByDistance\",\n  \"position\",\n  \"rotation\",\n  \"scale\",\n  \"scaleByDistance\",\n  \"show\",\n  \"sizeInMeters\",\n  \"translucencyByDistance\",\n  \"verticalOrigin\",\n  \"width\",\n];\n\nconst Billboard = createCesiumComponent<Cesium.Billboard, BillboardProps, BillboardContext>({\n  name: \"Billboard\",\n  create(cprops, props, context) {\n    return new (Cesium.Billboard as any)(cprops, context.billboardCollection);\n  },\n  mount(element, context) {\n    if (context.billboardCollection) {\n      context.billboardCollection.add(element);\n    }\n  },\n  unmount(element, context) {\n    if (context.__RESIUM_EVENT_MANAGER) {\n      context.__RESIUM_EVENT_MANAGER.clearEvents(element);\n    }\n    if (context.billboardCollection && !context.billboardCollection.isDestroyed()) {\n      context.billboardCollection.remove(element);\n    }\n  },\n  update(element, props, prevProps, context) {\n    if (context.__RESIUM_EVENT_MANAGER) {\n      context.__RESIUM_EVENT_MANAGER.setEvents(element, props);\n    }\n  },\n  cesiumProps,\n  setCesiumPropsAfterCreate: true,\n});\n\nexport default Billboard;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent from \"./core/CesiumComponent\";\n\n/*\n@summary\n`BillboardCollection` is a collection of billboard primitives.\nIt can have some `Billboard` components as children.\n\nPrimitive is a low layer API for geographical visualization.\n[Entity](/components/entity) is more recommended unless performance issues.\n*/\n\n/*\n@scope\nInside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) components.\nA BillboardColleciton object will be attached to the PrimitiveCollection of the Viewer or CesiumWidget.\n*/\n\nexport interface BillboardCollectionCesiumProps {\n  blendOption?: Cesium.BlendOption;\n  debugShowBoundingVolume?: boolean;\n  length?: number;\n  modelMatrix?: Cesium.Matrix4;\n}\n\nexport interface BillboardCollectionProps extends BillboardCollectionCesiumProps {\n  children?: React.ReactNode;\n}\n\nexport interface BillboardCollectionContext {\n  primitiveCollection?: Cesium.PrimitiveCollection;\n  scene?: Cesium.Scene;\n}\n\nconst cesiumProps: Array<keyof BillboardCollectionCesiumProps> = [\n  \"blendOption\",\n  \"debugShowBoundingVolume\",\n  \"length\",\n  \"modelMatrix\",\n];\n\nconst BillboardCollection = createCesiumComponent<\n  Cesium.BillboardCollection,\n  BillboardCollectionProps,\n  BillboardCollectionContext\n>({\n  name: \"BillboardCollection\",\n  create(cprops, props, context) {\n    return new Cesium.BillboardCollection({\n      modelMatrix: cprops.modelMatrix,\n      debugShowBoundingVolume: cprops.debugShowBoundingVolume,\n      scene: context.scene,\n      blendOption: cprops.blendOption,\n    } as any);\n  },\n  mount(element, context) {\n    if (context.primitiveCollection) {\n      context.primitiveCollection.add(element);\n    }\n  },\n  unmount(element, context) {\n    if (context.primitiveCollection && !context.primitiveCollection.isDestroyed()) {\n      context.primitiveCollection.remove(element);\n    }\n    if (!element.isDestroyed()) {\n      element.destroy();\n    }\n  },\n  provide(element) {\n    return {\n      billboardCollection: element,\n    };\n  },\n  cesiumProps,\n});\n\nexport default BillboardCollection;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`BillboardGraphics` is a billboard visualization for the entity.\n*/\n\n/*\n@scope\nBillboardGraphics is only inside [Entity](/components/Entity) components,\nand can not be used more than once for each entity.\n*/\n\nexport interface BillboardGraphicsCesiumProps {\n  image?: Cesium.Property | ImageData | string | HTMLCanvasElement;\n  show?: Cesium.Property | boolean;\n  scale?: Cesium.Property | number;\n  horizontalOrigin?: Cesium.Property | Cesium.HorizontalOrigin;\n  verticalOrigin?: Cesium.Property | Cesium.VerticalOrigin;\n  eyeOffset?: Cesium.Property | Cesium.Cartesian3;\n  pixelOffset?: Cesium.Property | Cesium.Cartesian2;\n  rotation?: Cesium.Property | number;\n  alignedAxis?: Cesium.Property | Cesium.Cartesian3;\n  width?: Cesium.Property | number;\n  height?: Cesium.Property | number;\n  color?: Cesium.Property | Cesium.Color;\n  scaleByDistance?: Cesium.Property | Cesium.NearFarScalar;\n  translucencyByDistance?: Cesium.Property | Cesium.NearFarScalar;\n  pixelOffsetScaleByDistance?: Cesium.Property | Cesium.NearFarScalar;\n  imageSubRegion?: Cesium.Property | Cesium.BoundingRectangle;\n  sizeInMeters?: Cesium.Property | boolean;\n  heightReference?: Cesium.Property | Cesium.HeightReference;\n  distanceDisplayCondition?: Cesium.Property | Cesium.DistanceDisplayCondition;\n  disableDepthTestDistance?: Cesium.Property | number;\n}\n\nexport interface BillboardGraphicsCesiumEvents {\n  onDefinitionChange?: () => void;\n}\n\nexport interface BillboardGraphicsProps\n  extends BillboardGraphicsCesiumProps,\n    BillboardGraphicsCesiumEvents {}\n\nexport interface BillboardGraphicsContext {\n  entity?: Cesium.Entity;\n}\n\nconst cesiumProps: Array<keyof BillboardGraphicsCesiumProps> = [\n  \"image\",\n  \"show\",\n  \"scale\",\n  \"horizontalOrigin\",\n  \"verticalOrigin\",\n  \"eyeOffset\",\n  \"pixelOffset\",\n  \"rotation\",\n  \"alignedAxis\",\n  \"width\",\n  \"height\",\n  \"color\",\n  \"scaleByDistance\",\n  \"translucencyByDistance\",\n  \"pixelOffsetScaleByDistance\",\n  \"imageSubRegion\",\n  \"sizeInMeters\",\n  \"heightReference\",\n  \"distanceDisplayCondition\",\n  \"disableDepthTestDistance\",\n];\n\nconst cesiumEventProps: EventkeyMap<\n  Cesium.BillboardGraphics,\n  keyof BillboardGraphicsCesiumEvents\n> = {\n  definitionChanged: \"onDefinitionChange\",\n};\n\nconst BillboardGraphics = createCesiumComponent<\n  Cesium.BillboardGraphics,\n  BillboardGraphicsProps,\n  BillboardGraphicsContext\n>({\n  name: \"BillboardGraphics\",\n  create(cprops) {\n    // workaround: type of \"image\" prop\n    return new Cesium.BillboardGraphics(cprops as any);\n  },\n  mount(element, context) {\n    if (context.entity) {\n      context.entity.billboard = element;\n    }\n  },\n  unmount(element, context) {\n    if (context.entity) {\n      context.entity.billboard = undefined as any;\n    }\n  },\n  cesiumProps,\n  cesiumEventProps,\n});\n\nexport default BillboardGraphics;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`BoxGraphics` is a box visualization for the entity.\n*/\n\n/*\n@scope\nBoxGraphic is only inside [Entity](/components/Entity) components,\nand can not be used more than once for each entity.\n*/\n\nexport interface BoxGraphicsCesiumProps {\n  heightReference?: Cesium.Property | Cesium.HeightReference;\n  dimensions?: Cesium.Property | Cesium.Cartesian3;\n  show?: Cesium.Property | boolean;\n  fill?: Cesium.Property | boolean;\n  material?: Cesium.MaterialProperty | Cesium.Color | string;\n  outline?: Cesium.Property | boolean;\n  outlineColor?: Cesium.Property | number;\n  outlineWidth?: Cesium.Property | number;\n  shadows?: Cesium.Property | Cesium.ShadowMode;\n  distanceDisplayCondition?: Cesium.Property | Cesium.DistanceDisplayCondition;\n}\n\nexport interface BoxGraphicsCesiumEvents {\n  onDefinitionChange?: () => void;\n}\n\nexport interface BoxGraphicsProps extends BoxGraphicsCesiumProps, BoxGraphicsCesiumEvents {}\n\nexport interface BoxGraphicsContext {\n  entity?: Cesium.Entity;\n}\n\nconst cesiumProps: Array<keyof BoxGraphicsCesiumProps> = [\n  \"heightReference\",\n  \"dimensions\",\n  \"show\",\n  \"fill\",\n  \"material\",\n  \"outline\",\n  \"outlineColor\",\n  \"outlineWidth\",\n  \"shadows\",\n  \"distanceDisplayCondition\",\n];\n\nconst cesiumEventProps: EventkeyMap<Cesium.BoxGraphics, keyof BoxGraphicsCesiumEvents> = {\n  definitionChanged: \"onDefinitionChange\",\n};\n\nconst BoxGraphics = createCesiumComponent<Cesium.BoxGraphics, BoxGraphicsProps, BoxGraphicsContext>(\n  {\n    name: \"BoxGraphics\",\n    create(cprops) {\n      return new Cesium.BoxGraphics(cprops as any);\n    },\n    mount(element, context) {\n      if (context.entity) {\n        context.entity.box = element;\n      }\n    },\n    unmount(element, context) {\n      if (context.entity) {\n        context.entity.box = undefined as any;\n      }\n    },\n    cesiumProps,\n    cesiumEventProps,\n  },\n);\n\nexport default BoxGraphics;\n","import createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`Camera` can operate the camera of the scene.\nAll properties are applied to single camera of the scene.\n*/\n\n/*\n@scope\nCamera is available inside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) components.\nIt can not be used more than once for each Viewer or CesiumWidget.\n*/\n\nexport interface CameraCesiumProps {\n  position?: Cesium.Cartesian3;\n  direction?: Cesium.Cartesian3;\n  up?: Cesium.Cartesian3;\n  right?: Cesium.Cartesian3;\n  frustum?: Cesium.Frustum;\n  defaultMoveAmount?: number;\n  defaultLookAmount?: number;\n  defaultRotateAmount?: number;\n  defaultZoomAmount?: number;\n  constrainedAxis?: Cesium.Cartesian3;\n  maximumTranslateFactor?: number;\n  maximumZoomFactor?: number;\n  percentageChanged?: number;\n}\n\nexport interface CameraCesiumEvents {\n  onChange?: (areaPercentage: number) => void;\n  onMoveEnd?: () => void;\n  onMoveStart?: () => void;\n}\n\nexport interface CameraProps extends CameraCesiumProps, CameraCesiumEvents {}\n\nexport interface CameraContext {\n  scene: Cesium.Scene;\n}\n\nconst cesiumProps: Array<keyof CameraCesiumProps> = [\n  \"position\",\n  \"direction\",\n  \"up\",\n  \"right\",\n  \"frustum\",\n  \"defaultMoveAmount\",\n  \"defaultLookAmount\",\n  \"defaultRotateAmount\",\n  \"defaultZoomAmount\",\n  \"constrainedAxis\",\n  \"maximumTranslateFactor\",\n  \"maximumZoomFactor\",\n  \"percentageChanged\",\n];\n\nconst cesiumEventProps: EventkeyMap<Cesium.Camera, keyof CameraCesiumEvents> = {\n  changed: \"onChange\",\n  moveEnd: \"onMoveEnd\",\n  moveStart: \"onMoveStart\",\n};\n\nconst Camera = createCesiumComponent<Cesium.Camera, CameraProps, CameraContext>({\n  name: \"camera\",\n  create(cprops, props, context) {\n    return context.scene.camera;\n  },\n  cesiumProps,\n  cesiumEventProps,\n  setCesiumPropsAfterCreate: true,\n});\n\nexport default Camera;\n","import { Camera } from \"cesium\";\n\nimport createCameraOperation from \"./core/CameraOperation\";\n\n// @noCesiumElement\n\n/*\n@summary\n`CameraFlyHome` is a kind of operation of the camera.\n\nWhen it is mounted, `camera.flyHome(duration)` will be execute.\n\nIf any property is changed, the current camera flight will be canceled and a new one is executed.\n\nSee also: [Camera#flyHome](https://cesiumjs.org/Cesium/Build/Documentation/Camera.html?classFilter=camer#flyHome)\n*/\n\n/*\n@scope\nInside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) components.\n*/\n\nexport interface CameraFlyHomeProps {\n  // Duration of camera flight (second)\n  duration: number;\n  // If true, cancel camera flight if this component is unmounted. Default value is false.\n  cancelCameraFlight?: boolean;\n}\n\nconst CameraFlyHome = createCameraOperation({\n  name: \"CameraFlyHome\",\n  cameraOperationStart(camera: Camera, props: CameraFlyHomeProps) {\n    camera.flyHome(props.duration);\n  },\n});\n\nexport default CameraFlyHome;\n","import Cesium from \"cesium\";\n\nimport createCameraOperation from \"./core/CameraOperation\";\n\n// @noCesiumElement\n\n/*\n@summary\n`CameraFlyTo` is a kind of operation of the camera.\n\nWhen it is mounted, `camera.flyTo(options)` will be execute.\n\nIf any property is changed, the current camera flight will be canceled and a new one is executed.\n\nSee also: [Camera#flyTo](https://cesiumjs.org/Cesium/Build/Documentation/Camera.html?classFilter=camer#flyTo)\n*/\n\n/*\n@scope\nInside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) components.\n*/\n\nexport interface CameraFlyToProps {\n  destination: Cesium.Cartesian3 | Cesium.Rectangle;\n  orientation?: any;\n  duration?: number;\n  onComplete?: Cesium.Camera.FlightCompleteCallback;\n  onCancel?: Cesium.Camera.FlightCancelledCallback;\n  endTransform?: Cesium.Matrix4;\n  maximumHeight?: number;\n  pitchAdjustHeight?: number;\n  flyOverLongitude?: number;\n  flyOverLongitudeWeight?: number;\n  easingFunction?: Cesium.EasingFunction;\n  // If true, cancel camera flight if this component is unmounted. Default value is false.\n  cancelCameraFlight?: boolean;\n}\n\nconst CameraFlyTo = createCameraOperation({\n  name: \"CameraFlyTo\",\n  cameraOperationStart(camera: Cesium.Camera, props: CameraFlyToProps) {\n    const {\n      destination,\n      orientation,\n      duration,\n      onComplete,\n      onCancel,\n      endTransform,\n      maximumHeight,\n      pitchAdjustHeight,\n      flyOverLongitude,\n      flyOverLongitudeWeight,\n      easingFunction,\n    } = props;\n\n    camera.flyTo({\n      destination,\n      orientation,\n      duration,\n      complete: onComplete,\n      cancel: onCancel,\n      endTransform,\n      maximumHeight,\n      pitchAdjustHeight,\n      flyOverLongitude,\n      flyOverLongitudeWeight,\n      easingFunction,\n    });\n  },\n});\n\nexport default CameraFlyTo;\n","import Cesium from \"cesium\";\n\nimport createCameraOperation from \"./core/CameraOperation\";\n\n// @noCesiumElement\n\n/*\n@summary\n`CameraFlyToBoundingSphere` is a kind of operation of the camera.\n\nWhen it is mounted, `camera.flyToBoundingSphere(boundingSphere, options)` will be execute.\n\nIf any property is changed, the current camera flight will be canceled and a new one is executed.\n\nSee also: [Camera#flyToBoundingSphere](https://cesiumjs.org/Cesium/Build/Documentation/Camera.html?classFilter=camer#flyToBoundingSphere)\n*/\n\n/*\n@scope\nInside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) components.\n*/\n\nexport interface CameraFlyToBoundingSphereProps {\n  boundingSphere: Cesium.BoundingSphere;\n  duration?: number;\n  offset?: Cesium.HeadingPitchRange;\n  onComplete?: Cesium.Camera.FlightCompleteCallback;\n  onCancel?: Cesium.Camera.FlightCancelledCallback;\n  endTransform?: Cesium.Matrix4;\n  maximumHeight?: number;\n  pitchAdjustHeight?: number;\n  flyOverLongitude?: number;\n  flyOverLongitudeWeight?: number;\n  easingFunction?: Cesium.EasingFunction;\n  // If true, cancel camera flight if this component is unmounted. Default value is false.\n  cancelCameraFlight?: boolean;\n}\n\nconst CameraFlyToBoundingSphere = createCameraOperation({\n  name: \"CameraFlyToBoundingSphere\",\n  cameraOperationStart(camera: Cesium.Camera, props: CameraFlyToBoundingSphereProps) {\n    const {\n      boundingSphere,\n      offset,\n      duration,\n      onComplete,\n      onCancel,\n      endTransform,\n      maximumHeight,\n      pitchAdjustHeight,\n      flyOverLongitude,\n      flyOverLongitudeWeight,\n      easingFunction,\n    } = props;\n\n    camera.flyToBoundingSphere(boundingSphere, {\n      offset,\n      duration,\n      complete: onComplete,\n      cancel: onCancel,\n      endTransform,\n      maximumHeight,\n      pitchAdjustHeight,\n      flyOverLongitude,\n      flyOverLongitudeWeight,\n      easingFunction,\n    });\n  },\n});\n\nexport default CameraFlyToBoundingSphere;\n","import Cesium from \"cesium\";\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`Cesium3DTileset` is a 3D tile set.\n*/\n\n/*\n@scope\nInside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) component.\nA Cesium3DTileset object will be attached to the PrimitiveCollection of the Viewer or CesiumWidget.\n*/\n\nexport interface Cesium3DTilesetCesiumProps {\n  url: Cesium.Resource | string | Promise<Cesium.Resource> | Promise<string>;\n  show?: boolean;\n  modelMatrix?: Cesium.Matrix4;\n  shadows?: Cesium.ShadowMode;\n  maximumScreenSpaceError?: number;\n  maximumMemoryUsage?: number;\n  cullWithChildrenBounds?: boolean;\n  dynamicScreenSpaceError?: boolean;\n  dynamicScreenSpaceErrorDensity?: number;\n  dynamicScreenSpaceErrorFactor?: number;\n  dynamicScreenSpaceErrorHeightFalloff?: number;\n  skipLevelOfDetail?: boolean;\n  baseScreenSpaceError?: number;\n  skipScreenSpaceErrorFactor?: number;\n  skipLevels?: number;\n  immediatelyLoadDesiredLevelOfDetail?: boolean;\n  loadSiblings?: boolean;\n  // @type Cesium.ClippingPlaneCollection\n  clippingPlanes?: any;\n  // @type Cesium.ClassificationType\n  classificationType?: any;\n  ellipsoid?: Cesium.Ellipsoid;\n  imageBasedLightingFactor?: Cesium.Cartesian2;\n  lightColor?: Cesium.Cartesian3;\n  debugFreezeFrame?: boolean;\n  debugColorizeTiles?: boolean;\n  debugWireframe?: boolean;\n  debugShowBoundingVolume?: boolean;\n  debugShowContentBoundingVolume?: boolean;\n  debugShowViewerRequestVolume?: boolean;\n  debugShowGeometricError?: boolean;\n  debugShowRenderingStatistics?: boolean;\n  debugShowMemoryUsage?: boolean;\n  debugShowUrl?: boolean;\n  colorBlendAmount?: number;\n  // @type Cesium.Cesium3DTileColorBlendMode\n  colorBlendMode?: any;\n  luminanceAtZenith?: number;\n  sphericalHarmonicCoefficients?: Cesium.Cartesian3[];\n  specularEnvironmentMaps?: string;\n}\n\nexport interface Cesium3DTilesetCesiumReadonlyProps {\n  pointCloudShading?: {\n    attenuation?: boolean;\n    geometricErrorScale?: number;\n    maximumAttenuation?: number;\n    baseResolution?: number;\n    eyeDomeLighting?: boolean;\n    eyeDomeLightingStrength?: number;\n    eyeDomeLightingRadius?: number;\n  };\n}\n\nexport interface Cesium3DTilesetCesiumEvents {\n  onAllTilesLoad?: () => void;\n  onInitialTilesLoad?: () => void;\n  onLoadProgress?: (numberOfPendingRequests: number, numberOfTilesProcessing: number) => void;\n  onTileFailed?: () => void;\n  onTileLoad?: (tile: any /* Cesium.3DTileset */) => void;\n  onTileUnload?: () => void;\n  onTileVisible?: (tile: any /* Cesium.3DTileset */) => void;\n}\n\nexport interface Cesium3DTilesetProps\n  extends Cesium3DTilesetCesiumProps,\n    Cesium3DTilesetCesiumReadonlyProps,\n    Cesium3DTilesetCesiumEvents {\n  // Calls when the tile set is completely loaded.\n  onReady?: (tileset: any /* Cesium.3DTileset */) => void;\n}\n\nexport interface Cesium3DTilesetContext {\n  primitiveCollection?: Cesium.PrimitiveCollection;\n}\n\nconst cesiumProps: Array<keyof Cesium3DTilesetCesiumProps> = [\n  \"url\",\n  \"show\",\n  \"modelMatrix\",\n  \"shadows\",\n  \"maximumScreenSpaceError\",\n  \"maximumMemoryUsage\",\n  \"cullWithChildrenBounds\",\n  \"dynamicScreenSpaceError\",\n  \"dynamicScreenSpaceErrorDensity\",\n  \"dynamicScreenSpaceErrorFactor\",\n  \"dynamicScreenSpaceErrorHeightFalloff\",\n  \"skipLevelOfDetail\",\n  \"baseScreenSpaceError\",\n  \"skipScreenSpaceErrorFactor\",\n  \"skipLevels\",\n  \"immediatelyLoadDesiredLevelOfDetail\",\n  \"loadSiblings\",\n  \"clippingPlanes\",\n  \"classificationType\",\n  \"ellipsoid\",\n  \"imageBasedLightingFactor\",\n  \"lightColor\",\n  \"debugFreezeFrame\",\n  \"debugColorizeTiles\",\n  \"debugWireframe\",\n  \"debugShowBoundingVolume\",\n  \"debugShowContentBoundingVolume\",\n  \"debugShowViewerRequestVolume\",\n  \"debugShowGeometricError\",\n  \"debugShowRenderingStatistics\",\n  \"debugShowMemoryUsage\",\n  \"debugShowUrl\",\n  \"colorBlendAmount\",\n  \"colorBlendMode\",\n  \"luminanceAtZenith\",\n  \"sphericalHarmonicCoefficients\",\n  \"specularEnvironmentMaps\",\n];\n\nconst cesiumReadonlyProps: Array<keyof Cesium3DTilesetCesiumReadonlyProps> = [\"pointCloudShading\"];\n\nconst cesiumEventProps: EventkeyMap<any, keyof Cesium3DTilesetCesiumEvents> = {\n  allTilesLoaded: \"onAllTilesLoad\",\n  initialTilesLoaded: \"onInitialTilesLoad\",\n  loadProgress: \"onLoadProgress\",\n  tileFailed: \"onTileFailed\",\n  tileLoad: \"onTileLoad\",\n  tileUnload: \"onTileUnload\",\n  tileVisible: \"onTileVisible\",\n};\n\n// workaround: any => Cesium.3DTileset\nconst Cesium3DTileset = createCesiumComponent<any, Cesium3DTilesetProps, Cesium3DTilesetContext>({\n  name: \"Cesium3DTileset\",\n  create(cprops, props) {\n    const c3ts = new (Cesium as any).Cesium3DTileset(cprops);\n    c3ts.colorBlendAmount = cprops.colorBlendAmount;\n    c3ts.colorBlendMode = cprops.colorBlendMode;\n    if (props.onReady) {\n      c3ts.readyPromise.then(props.onReady);\n    }\n    return c3ts;\n  },\n  mount(element, context) {\n    if (context.primitiveCollection) {\n      context.primitiveCollection.add(element);\n    }\n  },\n  unmount(element, context) {\n    if (context.primitiveCollection && !context.primitiveCollection.isDestroyed()) {\n      context.primitiveCollection.remove(element);\n    }\n    if (!element.isDestroyed()) {\n      element.destroy();\n    }\n  },\n  cesiumProps,\n  cesiumReadonlyProps,\n  cesiumEventProps,\n});\n\nexport default Cesium3DTileset;\n","import React from \"react\";\n\nimport createCesiumComponent from \"./core/CesiumComponent\";\nimport Cesium, { CesiumWidget as CesiumCesiumWidget } from \"cesium\";\n\n/*\n@summary\n`CesiumWidget` is the simplest root component of resium. All components of resium except the root components have to be mounted inside it.\n\n`Viewer` is also a root component. It is a component with some widgets (info box, timeline, and so on) added to `CesiumWidget`.\n*/\n\n/*\n@example\n<CesiumWidget full />\n*/\n\n/*\n@scope\nEverywhere. `CesiumWidget` is a root component. \n*/\n\nexport interface CesiumWidgetCesiumProps {\n  resolutionScale?: number;\n  useDefaultRenderLoop?: boolean;\n  targetFrameRate?: number;\n}\n\nexport interface CesiumWidgetCesiumReadonlyProps {\n  clock?: Cesium.Clock;\n  imageryProvider?: Cesium.ImageryProvider;\n  terrainProvider?: Cesium.TerrainProvider;\n  skyBox?: Cesium.SkyBox;\n  skyAtmosphere?: Cesium.SkyAtmosphere;\n  sceneMode?: Cesium.SceneMode;\n  scene3DOnly?: boolean;\n  orderIndependentTranslucency?: boolean;\n  mapMode2D?: Cesium.MapMode2D;\n  mapProjection?: Cesium.MapProjection;\n  globe?: Cesium.Globe;\n  showRenderLoopErrors?: boolean;\n  contextOptions?: WebGLContextAttributes;\n  creditContainer?: Element | string;\n  creditViewport?: Element | string;\n  terrainExaggeration?: number;\n  shadows?: boolean;\n  terrainShadows?: Cesium.ShadowMode;\n  requestRenderMode?: boolean;\n  maximumRenderTimeChange?: number;\n}\n\nconst cesiumProps: Array<keyof CesiumWidgetCesiumProps> = [\n  \"resolutionScale\",\n  \"useDefaultRenderLoop\",\n  \"targetFrameRate\",\n];\n\nconst cesiumReadonlyProps: Array<keyof CesiumWidgetCesiumReadonlyProps> = [\n  \"clock\",\n  \"imageryProvider\",\n  \"terrainProvider\",\n  \"skyBox\",\n  \"skyAtmosphere\",\n  \"sceneMode\",\n  \"scene3DOnly\",\n  \"orderIndependentTranslucency\",\n  \"mapMode2D\",\n  \"mapProjection\",\n  \"globe\",\n  \"showRenderLoopErrors\",\n  \"contextOptions\",\n  \"creditContainer\",\n  \"creditViewport\",\n  \"terrainExaggeration\",\n  \"shadows\",\n  \"terrainShadows\",\n  \"requestRenderMode\",\n  \"maximumRenderTimeChange\",\n];\n\nexport interface CesiumWidgetProps\n  extends CesiumWidgetCesiumProps,\n    CesiumWidgetCesiumReadonlyProps {\n  // Applied to outer `div` element\n  className?: string;\n  // Applied to outer `div` element\n  id?: string;\n  // Applied to outer `div` element\n  style?: React.CSSProperties;\n  // Same as `style={{ position: \"absolute\", top: 0, left: 0, right: 0, bottom: 0 }}` if it is true.\n  full?: boolean;\n  // All props applied to outer `div` element\n  containerProps?: any;\n  children?: React.ReactNode;\n}\n\nexport interface CesiumWidgetContext {\n  cesiumWidget: Cesium.CesiumWidget;\n  dataSourceCollection: Cesium.DataSourceCollection;\n  entityCollection: Cesium.EntityCollection;\n  scene: Cesium.Scene;\n  globe: Cesium.Globe;\n  camera: Cesium.Camera;\n}\n\nconst CesiumWidget = createCesiumComponent<\n  Cesium.CesiumWidget,\n  CesiumWidgetProps,\n  {},\n  CesiumWidgetContext | {},\n  HTMLDivElement\n>({\n  name: \"Viewer\",\n  createRef: true,\n  create(cprops, props, context, ref) {\n    // ref is not always undefined\n    const v = new CesiumCesiumWidget(\n      (ref as React.RefObject<HTMLDivElement>).current as any,\n      cprops,\n    );\n\n    if (v && typeof props.resolutionScale === \"number\") {\n      v.resolutionScale = props.resolutionScale;\n    }\n\n    // common ScreenSpaceEventHandler for events of Entity and Primitives\n    let state: any;\n    if (v) {\n      state = new Cesium.ScreenSpaceEventHandler(v.canvas);\n    }\n\n    return [v, state];\n  },\n  render(element, props, mounted, ref) {\n    return (\n      <div\n        className={props.className}\n        id={props.id}\n        ref={ref}\n        style={{\n          ...(props.full\n            ? {\n                position: \"absolute\",\n                bottom: \"0\",\n                left: \"0\",\n                right: \"0\",\n                top: \"0\",\n              }\n            : {}),\n          ...props.style,\n        }}\n        {...props.containerProps}>\n        {element ? props.children : null}\n      </div>\n    );\n  },\n  unmount(element, cprops, props, ref, state) {\n    if (element && state) {\n      const sshe = state as Cesium.ScreenSpaceEventHandler;\n      if (!sshe.isDestroyed()) {\n        sshe.destroy();\n      }\n    }\n    if (element && !element.isDestroyed()) {\n      element.destroy();\n    }\n  },\n  provide(element, props, state) {\n    if (!element) {\n      return {};\n    }\n    return {\n      cesiumWidget: element,\n      scene: element.scene,\n      camera: element.scene.camera,\n      imageryLayerCollection: element.scene.globe.imageryLayers,\n      primitiveCollection: element.scene.primitives,\n      globe: element.scene.globe,\n      __RESIUM_SSEH: state, // ScreenSpaceEventHandler\n    };\n  },\n  cesiumProps,\n  cesiumReadonlyProps,\n});\n\nexport default CesiumWidget;\n","import createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\nimport Cesium, { CesiumWidget } from \"cesium\";\n\n/*\n@summary\n`Clock` can operate the clock of the Viewer or CesiumWidget.\nAll properties are applied to single clock.\n*/\n\n/*\n@scope\nClock is available inside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) components.\nClock can not be used more than once for each Viewer or CesiumWidget.\n*/\n\nexport interface ClockCesiumProps {\n  canAnimate?: boolean;\n  clockRange?: Cesium.ClockRange;\n  clockStep?: Cesium.ClockStep;\n  currentTime?: Cesium.JulianDate;\n  multiplier?: number;\n  shouldAnimate?: boolean;\n  startTime?: Cesium.JulianDate;\n  stopTime?: Cesium.JulianDate;\n}\n\nexport interface ClockCesiumEvents {\n  onStop?: (clock: Cesium.Clock) => void;\n  onTick?: (clock: Cesium.Clock) => void;\n}\n\nconst cesiumEventProps: EventkeyMap<Cesium.Globe, keyof ClockCesiumEvents> = {\n  onStop: \"onStop\",\n  onTick: \"onTick\",\n};\n\nexport interface ClockProps extends ClockCesiumProps, ClockCesiumEvents {}\n\nexport interface ClockContext {\n  cesiumWidget: CesiumWidget;\n}\n\nconst cesiumProps: Array<keyof ClockCesiumProps> = [\n  \"canAnimate\",\n  \"clockRange\",\n  \"clockStep\",\n  \"currentTime\",\n  \"multiplier\",\n  \"shouldAnimate\",\n  \"startTime\",\n  \"stopTime\",\n];\n\nconst Clock = createCesiumComponent<Cesium.Clock, ClockProps, ClockContext>({\n  name: \"clock\",\n  create(cprops, props, context) {\n    return context.cesiumWidget.clock;\n  },\n  cesiumProps,\n  cesiumEventProps,\n  setCesiumPropsAfterCreate: true,\n});\n\nexport default Clock;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`CorriderGraphics` is a corrider visualization for the entity.\n*/\n\n/*\n@scope\nCorriderGraphics is only inside [Entity](/components/Entity) components,\nand can not be used more than once for each entity.\n*/\n\nexport interface CorridorGraphicsCesiumProps {\n  positions?: Cesium.Property | Cesium.Cartesian3[];\n  width?: Cesium.Property | number;\n  cornerType?: Cesium.Property | Cesium.CornerType;\n  height?: Cesium.Property | number;\n  heightReference?: Cesium.Property | Cesium.HeightReference;\n  extrudedHeight?: Cesium.Property | number;\n  extrudedHeightReference?: Cesium.Property | Cesium.HeightReference;\n  show?: Cesium.Property | boolean;\n  fill?: Cesium.Property | boolean;\n  material?: Cesium.MaterialProperty | Cesium.Color | string;\n  outline?: Cesium.Property | boolean;\n  outlineColor?: Cesium.Property | Cesium.Color;\n  outlineWidth?: Cesium.Property | number;\n  granularity?: Cesium.Property | number;\n  shadows?: Cesium.Property | boolean;\n  distanceDisplayCondition?: Cesium.Property | Cesium.DistanceDisplayCondition;\n  zIndex?: Cesium.ConstantProperty | number;\n  // @type Cesium.Property | Cesium.ClassificationType\n  classificationType?: Cesium.Property | any;\n}\n\nexport interface CorridorCesiumEvents {\n  onDefinitionChange?: () => void;\n}\n\nexport interface CorridorGraphicsProps extends CorridorGraphicsCesiumProps, CorridorCesiumEvents {}\n\nexport interface CorridorGraphicsContext {\n  entity?: Cesium.Entity;\n}\n\nconst cesiumProps: Array<keyof CorridorGraphicsCesiumProps> = [\n  \"positions\",\n  \"width\",\n  \"cornerType\",\n  \"height\",\n  \"heightReference\",\n  \"extrudedHeight\",\n  \"extrudedHeightReference\",\n  \"show\",\n  \"fill\",\n  \"material\",\n  \"outline\",\n  \"outlineColor\",\n  \"outlineWidth\",\n  \"granularity\",\n  \"shadows\",\n  \"distanceDisplayCondition\",\n  \"zIndex\",\n  \"classificationType\",\n];\n\nconst cesiumEventProps: EventkeyMap<Cesium.CorridorGraphics, keyof CorridorCesiumEvents> = {\n  definitionChanged: \"onDefinitionChange\",\n};\n\nconst CorridorGraphics = createCesiumComponent<\n  Cesium.CorridorGraphics,\n  CorridorGraphicsProps,\n  CorridorGraphicsContext\n>({\n  name: \"CorridorGraphics\",\n  create(cprops) {\n    const cg = new Cesium.CorridorGraphics(cprops as any);\n    if (cprops.classificationType) {\n      (cg as any).classificationType = cprops.classificationType;\n    }\n    return cg;\n  },\n  mount(element, context) {\n    if (context.entity) {\n      context.entity.corridor = element;\n    }\n  },\n  unmount(element, context) {\n    if (context.entity) {\n      context.entity.corridor = undefined as any;\n    }\n  },\n  cesiumProps,\n  cesiumEventProps,\n});\n\nexport default CorridorGraphics;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`CustomDataSource` is a kind of data sources, but empty.\nIt can be thought of as a collection of entities in a sense.\nIt can have some Entity components as children.\n*/\n\n/*\n@scope\nInside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) components.\n*/\n\nexport interface CustomDataSourceCesiumProps {\n  clustering?: Cesium.EntityCluster;\n  name?: string;\n  show?: boolean;\n  clock?: Cesium.DataSourceClock;\n}\n\nexport interface CustomDataSourceCesiumEvents {\n  onChange?: (customDataSource: Cesium.CustomDataSource) => void;\n  onError?: (customDataSource: Cesium.CustomDataSource, error: any) => void;\n  onLoading?: (customDataSource: Cesium.CustomDataSource, isLoaded: boolean) => void;\n}\n\nexport interface CustomDataSourceProps\n  extends CustomDataSourceCesiumProps,\n    CustomDataSourceCesiumEvents {\n  children?: React.ReactNode;\n}\n\nexport interface CustomDataSourceContext {\n  dataSourceCollection?: Cesium.DataSourceCollection;\n}\n\nconst cesiumProps: Array<keyof CustomDataSourceCesiumProps> = [\n  \"clustering\",\n  \"name\",\n  \"show\",\n  \"clock\",\n];\n\nconst cesiumEventProps: EventkeyMap<Cesium.CustomDataSource, keyof CustomDataSourceCesiumEvents> = {\n  changedEvent: \"onChange\",\n  errorEvent: \"onError\",\n  loadingEvent: \"onLoading\",\n};\n\nconst CustomDataSource = createCesiumComponent<\n  Cesium.CustomDataSource,\n  CustomDataSourceProps,\n  CustomDataSourceContext\n>({\n  name: \"CustomDataSource\",\n  create(cprops) {\n    const ds = new Cesium.CustomDataSource(cprops.name);\n    if (cprops.clustering) {\n      ds.clustering = cprops.clustering;\n    }\n    if (typeof cprops.show === \"boolean\") {\n      ds.show = cprops.show;\n    }\n    if (typeof cprops.clock !== \"undefined\") {\n      ds.clock = cprops.clock;\n    }\n    return ds;\n  },\n  mount(element, context) {\n    if (context.dataSourceCollection) {\n      context.dataSourceCollection.add(element);\n    }\n  },\n  unmount(element, context) {\n    if (context.dataSourceCollection && !context.dataSourceCollection.isDestroyed()) {\n      context.dataSourceCollection.remove(element);\n    }\n  },\n  provide(element) {\n    return {\n      entityCollection: element.entities,\n      dataSource: element,\n    };\n  },\n  cesiumProps,\n  cesiumEventProps,\n});\n\nexport default CustomDataSource;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`CylinderGraphics` is a cylinder visualization for the entity.\n*/\n\n/*\n@scope\nCylinderGraphics is only inside [Entity](/components/Entity) components,\nand can not be used more than once for each entity.\n*/\n\nexport interface CylinderGraphicsCesiumProps {\n  heightReference?: Cesium.Property | Cesium.HeightReference;\n  length?: Cesium.Property | number;\n  topRadius?: Cesium.Property | number;\n  bottomRadius?: Cesium.Property | number;\n  show?: Cesium.Property | boolean;\n  fill?: Cesium.Property | boolean;\n  material?: Cesium.MaterialProperty | Cesium.Color | string;\n  outline?: Cesium.Property | boolean;\n  outlineColor?: Cesium.Property | Cesium.Color;\n  outlineWidth?: Cesium.Property | number;\n  numberOfVerticalLines?: Cesium.Property | number;\n  slices?: Cesium.Property | number;\n  shadowMode?: Cesium.Property | Cesium.ShadowMode;\n  distanceDisplayCondition?: Cesium.Property | Cesium.DistanceDisplayCondition;\n}\n\nexport interface CylinderCesiumEvents {\n  onDefinitionChange?: () => void;\n}\n\nexport interface CylinderGraphicsProps extends CylinderGraphicsCesiumProps, CylinderCesiumEvents {}\n\nexport interface CylinderGraphicsContext {\n  entity?: Cesium.Entity;\n}\n\nconst cesiumProps: Array<keyof CylinderGraphicsCesiumProps> = [\n  \"heightReference\",\n  \"length\",\n  \"topRadius\",\n  \"bottomRadius\",\n  \"show\",\n  \"fill\",\n  \"material\",\n  \"outline\",\n  \"outlineColor\",\n  \"outlineWidth\",\n  \"numberOfVerticalLines\",\n  \"slices\",\n  \"shadowMode\",\n  \"distanceDisplayCondition\",\n];\n\nconst cesiumEventProps: EventkeyMap<Cesium.CorridorGraphics, keyof CylinderCesiumEvents> = {\n  definitionChanged: \"onDefinitionChange\",\n};\n\nconst CylinderGraphics = createCesiumComponent<\n  Cesium.CylinderGraphics,\n  CylinderGraphicsProps,\n  CylinderGraphicsContext\n>({\n  name: \"CylinderGraphics\",\n  create(cprops) {\n    return new Cesium.CylinderGraphics(cprops as any);\n  },\n  mount(element, context) {\n    if (context.entity) {\n      context.entity.cylinder = element;\n    }\n  },\n  unmount(element, context) {\n    if (context.entity) {\n      context.entity.cylinder = undefined as any;\n    }\n  },\n  cesiumProps,\n  cesiumEventProps,\n});\n\nexport default CylinderGraphics;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`CzmlDataSource` provides the way to load and show CZML data into the scene.\nCZML data can be loaded from a URL, string or raw object.\n*/\n\n/*\n@scope\nInside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) components.\n*/\n\nexport interface CzmlDataSourceCesiumProps {\n  clustering?: Cesium.EntityCluster;\n}\n\nexport interface CzmlDataSourceCesiumReadonlyProps {\n  name?: string;\n}\n\nexport interface CzmlDataSourceCesiumEvents {\n  onChange?: (CzmlDataSource: Cesium.CzmlDataSource) => void;\n  onError?: (CzmlDataSource: Cesium.CzmlDataSource, error: any) => void;\n  onLoading?: (CzmlDataSource: Cesium.CzmlDataSource, isLoaded: boolean) => void;\n}\n\nexport interface CzmlDataSourceProps\n  extends CzmlDataSourceCesiumProps,\n    CzmlDataSourceCesiumReadonlyProps,\n    CzmlDataSourceCesiumEvents {\n  // @CesiumReadonlyProp\n  data?: Cesium.Resource | string | object;\n  // @CesiumReadonlyProp\n  sourceUri?: string;\n  // @CesiumProp\n  show?: boolean;\n  // Calls when the Promise for loading data is fullfilled.\n  onLoad?: (CzmlDataSouce: Cesium.CzmlDataSource) => void;\n}\n\nexport interface CzmlDataSourceContext {\n  dataSourceCollection?: Cesium.DataSourceCollection;\n}\n\nconst cesiumProps: Array<keyof CzmlDataSourceCesiumProps> = [\"clustering\"];\n\nconst cesiumReadonlyProps: Array<keyof CzmlDataSourceCesiumReadonlyProps> = [\"name\"];\n\nconst cesiumEventProps: EventkeyMap<Cesium.CzmlDataSource, keyof CzmlDataSourceCesiumEvents> = {\n  changedEvent: \"onChange\",\n  errorEvent: \"onError\",\n  loadingEvent: \"onLoading\",\n};\n\nconst load = ({\n  element,\n  data,\n  onLoad,\n  sourceUri,\n}: {\n  element: Cesium.CzmlDataSource;\n  dataSources: Cesium.DataSourceCollection;\n  data: Cesium.Resource | string | object;\n  onLoad?: (CzmlDataSource: Cesium.CzmlDataSource) => void;\n  sourceUri?: string;\n}) => {\n  element\n    .load(data, {\n      sourceUri,\n    })\n    .then(value => {\n      if (onLoad) {\n        try {\n          onLoad(value);\n        } catch (e) {\n          throw e;\n        }\n      }\n    });\n};\n\nconst CzmlDataSource = createCesiumComponent<\n  Cesium.CzmlDataSource,\n  CzmlDataSourceProps,\n  CzmlDataSourceContext\n>({\n  name: \"CzmlDataSource\",\n  create(cprops, props) {\n    const ds = new Cesium.CzmlDataSource(props.name);\n    if (cprops.clustering) {\n      ds.clustering = cprops.clustering;\n    }\n    if (typeof cprops.show === \"boolean\") {\n      ds.show = cprops.show;\n    }\n    return ds;\n  },\n  mount(element, context, props) {\n    if (context.dataSourceCollection) {\n      context.dataSourceCollection.add(element);\n      if (props.data) {\n        load({\n          element,\n          dataSources: context.dataSourceCollection,\n          data: props.data,\n          onLoad: props.onLoad,\n          sourceUri: props.sourceUri,\n        });\n      }\n    }\n  },\n  update(element, props, prevProps, context) {\n    if (prevProps.show !== props.show || !props.data) {\n      element.show = !!props.data && (typeof props.show === \"boolean\" ? props.show : true);\n    }\n    if (\n      context.dataSourceCollection &&\n      props.data &&\n      (prevProps.data !== props.data || prevProps.sourceUri !== props.sourceUri)\n    ) {\n      load({\n        element,\n        dataSources: context.dataSourceCollection,\n        data: props.data,\n        onLoad: props.onLoad,\n        sourceUri: props.sourceUri,\n      });\n    }\n  },\n  unmount(element, context) {\n    if (context.dataSourceCollection && !context.dataSourceCollection.isDestroyed()) {\n      context.dataSourceCollection.remove(element);\n    }\n  },\n  provide(element) {\n    return {\n      dataSource: element,\n    };\n  },\n  cesiumProps,\n  cesiumReadonlyProps,\n  cesiumEventProps,\n});\n\nexport default CzmlDataSource;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`EllipseGraphics` is a ellipse visualization for the entity.\n*/\n\n/*\n@scope\nEllipseGraphics is only inside [Entity](/components/Entity) components,\nand can not be used more than once for each entity.\n*/\n\nexport interface EllipseGraphicsCesiumProps {\n  semiMajorAxis?: Cesium.Property | number;\n  semiMinorAxis?: Cesium.Property | number;\n  height?: Cesium.Property | number;\n  heightReference?: Cesium.Property | Cesium.HeightReference;\n  extrudedHeight?: Cesium.Property | number;\n  show?: Cesium.Property | boolean;\n  fill?: Cesium.Property | boolean;\n  material?: Cesium.MaterialProperty | Cesium.Color | string;\n  outline?: Cesium.Property | boolean;\n  outlineColor?: Cesium.Property | Cesium.Color;\n  outlineWidth?: Cesium.Property | number;\n  numberOfVerticalLines?: Cesium.Property | number;\n  rotation?: Cesium.Property | number;\n  stRotation?: Cesium.Property | number;\n  granularity?: Cesium.Property | number;\n  shadows?: Cesium.Property | Cesium.ShadowMode;\n  distanceDisplayCondition?: Cesium.Property | Cesium.DistanceDisplayCondition;\n  zIndex?: Cesium.Property | number;\n  // @type Cesium.ClassificationType\n  classificationType?: Cesium.Property | any;\n}\n\nexport interface EllipseGraphicsCesiumEvents {\n  onDefinitionChange?: () => void;\n}\n\nexport interface EllipseGraphicsProps\n  extends EllipseGraphicsCesiumProps,\n    EllipseGraphicsCesiumEvents {}\n\nexport interface EllipseGraphicsContext {\n  entity?: Cesium.Entity;\n}\n\nconst cesiumProps: Array<keyof EllipseGraphicsCesiumProps> = [\n  \"semiMajorAxis\",\n  \"semiMinorAxis\",\n  \"height\",\n  \"heightReference\",\n  \"extrudedHeight\",\n  \"show\",\n  \"fill\",\n  \"material\",\n  \"outline\",\n  \"outlineColor\",\n  \"outlineWidth\",\n  \"numberOfVerticalLines\",\n  \"rotation\",\n  \"stRotation\",\n  \"granularity\",\n  \"shadows\",\n  \"distanceDisplayCondition\",\n  \"zIndex\",\n  \"classificationType\",\n];\n\nconst cesiumEventProps: EventkeyMap<Cesium.EllipseGraphics, keyof EllipseGraphicsCesiumEvents> = {\n  definitionChanged: \"onDefinitionChange\",\n};\n\nconst EllipseGraphics = createCesiumComponent<\n  Cesium.EllipseGraphics,\n  EllipseGraphicsProps,\n  EllipseGraphicsContext\n>({\n  name: \"EllipseGraphics\",\n  create(cprops) {\n    const eg = new Cesium.EllipseGraphics(cprops as any);\n    if (cprops.classificationType) {\n      (eg as any).classificationType = cprops.classificationType;\n    }\n    return eg;\n  },\n  mount(element, context) {\n    if (context.entity) {\n      context.entity.ellipse = element;\n    }\n  },\n  unmount(element, context) {\n    if (context.entity) {\n      context.entity.ellipse = undefined as any;\n    }\n  },\n  cesiumProps,\n  cesiumEventProps,\n});\n\nexport default EllipseGraphics;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`EllipsoidGraphics` is a ellipsoid visualization for the entity.\n*/\n\n/*\n@scope\nEllipsoidGraphics is only inside [Entity](/components/Entity) components,\nand can not be used more than once for each entity.\n*/\n\nexport interface EllipsoidGraphicsCesiumProps {\n  heightReference?: Cesium.Property | Cesium.HeightReference;\n  radii?: Cesium.Property | Cesium.Cartesian3;\n  show?: Cesium.Property | boolean;\n  fill?: Cesium.Property | boolean;\n  material?: Cesium.MaterialProperty | Cesium.Color | string;\n  outline?: Cesium.Property | boolean;\n  outlineColor?: Cesium.Property | Cesium.Color;\n  outlineWidth?: Cesium.Property | number;\n  subdivisions?: Cesium.Property | number;\n  stackPartitions?: Cesium.Property | number;\n  slicePartitions?: Cesium.Property | number;\n  shadows?: Cesium.Property | Cesium.ShadowMode;\n  distanceDisplayCondition?: Cesium.Property | Cesium.DistanceDisplayCondition;\n}\n\nexport interface EllipsoidGraphicsCesiumEvents {\n  onDefinitionChange?: () => void;\n}\n\nexport interface EllipsoidGraphicsProps\n  extends EllipsoidGraphicsCesiumProps,\n    EllipsoidGraphicsCesiumEvents {}\n\nexport interface EllipsoidGraphicsContext {\n  entity?: Cesium.Entity;\n}\n\nconst cesiumProps: Array<keyof EllipsoidGraphicsCesiumProps> = [\n  \"heightReference\",\n  \"radii\",\n  \"show\",\n  \"fill\",\n  \"material\",\n  \"outline\",\n  \"outlineColor\",\n  \"outlineWidth\",\n  \"subdivisions\",\n  \"stackPartitions\",\n  \"slicePartitions\",\n  \"shadows\",\n  \"distanceDisplayCondition\",\n];\n\nconst cesiumEventProps: EventkeyMap<\n  Cesium.EllipsoidGraphics,\n  keyof EllipsoidGraphicsCesiumEvents\n> = {\n  definitionChanged: \"onDefinitionChange\",\n};\n\nconst EllipsoidGraphics = createCesiumComponent<\n  Cesium.EllipsoidGraphics,\n  EllipsoidGraphicsProps,\n  EllipsoidGraphicsContext\n>({\n  name: \"EllipsoidGraphics\",\n  create(cprops) {\n    return new Cesium.EllipsoidGraphics(cprops as any);\n  },\n  mount(element, context) {\n    if (context.entity) {\n      context.entity.ellipsoid = element;\n    }\n  },\n  unmount(element, context) {\n    if (context.entity) {\n      context.entity.ellipsoid = undefined as any;\n    }\n  },\n  cesiumProps,\n  cesiumEventProps,\n});\n\nexport default EllipsoidGraphics;\n","import Cesium, { Entity as CesiumEntity, CorridorGraphics } from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\nimport EventManager, { EventProps } from \"./core/EventManager\";\nimport { BillboardGraphicsCesiumProps } from \"./BillboardGraphics\";\nimport { BoxGraphicsCesiumProps } from \"./BoxGraphics\";\nimport { CorridorGraphicsCesiumProps } from \"./CorridorGraphics\";\nimport { CylinderGraphicsCesiumProps } from \"./CylinderGraphics\";\nimport { EllipseGraphicsCesiumProps } from \"./EllipseGraphics\";\nimport { EllipsoidGraphicsCesiumProps } from \"./EllipsoidGraphics\";\nimport { LabelGraphicsCesiumProps } from \"./LabelGraphics\";\nimport { ModelGraphicsCesiumProps } from \"./ModelGraphics\";\nimport { PathGraphicsCesiumProps } from \"./PathGraphics\";\nimport { PlaneGraphicsCesiumProps } from \"./PlaneGraphics\";\nimport { PointGraphicsCesiumProps } from \"./PointGraphics\";\nimport { PolygonGraphicsCesiumProps } from \"./PolygonGraphics\";\nimport { PolylineGraphicsCesiumProps } from \"./PolylineGraphics\";\nimport { PolylineVolumeGraphicsCesiumProps } from \"./PolylineVolumeGraphics\";\nimport { RectangleGraphicsCesiumProps } from \"./RectangleGraphics\";\nimport { WallGraphicsCesiumProps } from \"./WallGraphics\";\n\n/*\n@summary\n`Entity` is a basic component for geographical data visualization.\n\nEntity can have one each, with the following components as children:\n\n- [`EntityDescription`](/components/EntityDescription): renders description with React\n- [`BillboardGraphics`](/components/BillboardGraphics): a billboard visualization\n- [`BoxGraphics`](/components/BoxGraphics): a box visualization\n- [`CorriderGraphics`](/components/BillboardGraphics): a corrider visualization\n- [`CylinderGraphics`](/components/BillboardGraphics): a cylinder visualization\n- [`EllipseGraphics`](/components/BillboardGraphics): a ellipse visualization\n- [`EllipsoidGraphics`](/components/BillboardGraphics): a ellipsoid visualization\n- [`LabelGraphics`](/components/BillboardGraphics): a label visualization\n- [`ModelGraphics`](/components/BillboardGraphics): a model visualization\n- [`PathGraphics`](/components/BillboardGraphics): a path visualization\n- [`PlaneGraphics`](/components/BillboardGraphics): a plane visualization\n- [`PointGraphics`](/components/BillboardGraphics): a point visualization\n- [`PolygonGraphics`](/components/BillboardGraphics): a polygon visualization\n- [`PolylineGraphics`](/components/BillboardGraphics): a polyline visualization\n- [`PolylineVolumeGraphics`](/components/BillboardGraphics): a polyline visualization with volume\n- [`RectangleGraphics`](/components/BillboardGraphics): a rectangle visualization\n- [`WallGraphics`](/components/BillboardGraphics): a wall visualization\n\n### Graphics components vs graphics properties\n\nConclusion: `Graphics` components are mostly recommended.\n\nFor example, Entity component has `point` property for point visualization. But PointGraphics component is also available. What is the differene?\n\n```jsx\n<Entity point={{ pixelSize: 10 }} />\n\n<Entity>\n  <BillboardGraphics pixelSize={10} />\n</Entity>\n```\n\nThat is same. However as changing only `pixelSize` property, situations will change. If you change `point` property, It happens recreating a PointGraphics object. It is equivalent to:\n\n```js\nconst entity = new Entity({ point: { pixelSize: 10 } });\n\n// change pixelSize property in point property of Entity\nentity.point = new PointGraphics({ pixelSize: 20 });\n// change pixelSize property of PointGraphics\nentity.point.pixelSize = 20;\n```\n\nUpdating pixelSize of PointGraphics is more simple and fast.\n*/\n\n/*\n@scope\nEither:\n- Inside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) component: the entity will be attached to the EntityCollection of the Viewer or CesiumWidget.\n- Inside [CustomDataSource](/components/CustomDataSource) component: the entity will be attached to the EntityCollection of the CustomDataSource.\n*/\n\nexport interface EntityCesiumProps {\n  availability?: Cesium.TimeIntervalCollection;\n  billboard?: Cesium.BillboardGraphics | BillboardGraphicsCesiumProps;\n  box?: Cesium.BoxGraphics | BoxGraphicsCesiumProps;\n  corridor?: Cesium.CorridorGraphics | CorridorGraphicsCesiumProps;\n  cylinder?: Cesium.CylinderGraphics | CylinderGraphicsCesiumProps;\n  description?: Cesium.Property | any;\n  ellipse?: Cesium.EllipseGraphics | EllipseGraphicsCesiumProps;\n  ellipsoid?: Cesium.EllipsoidGraphics | EllipsoidGraphicsCesiumProps;\n  label?: Cesium.LabelGraphics | LabelGraphicsCesiumProps;\n  model?: Cesium.ModelGraphics | ModelGraphicsCesiumProps;\n  name?: string;\n  orientation?: Cesium.Property | Cesium.Matrix4;\n  path?: Cesium.PathGraphics | PathGraphicsCesiumProps;\n  // @type Cesium.PlaneGraphics | PlaneGraphicsCesiumProps\n  plane?:\n    | {\n        plane: Cesium.Property;\n        dimensions: Cesium.Property | Cesium.Cartesian2;\n        show: Cesium.Property | boolean;\n        fill: Cesium.Property | boolean;\n        material: Cesium.MaterialProperty | Cesium.Color | string;\n        outline: Cesium.Property | boolean;\n        outlineColor?: Cesium.Property | Cesium.Color;\n        outlineWidth?: Cesium.Property | number;\n        shadows?: Cesium.Property | Cesium.ShadowMode;\n        distanceDisplayCondition?: Cesium.Property | Cesium.DistanceDisplayCondition;\n      }\n    | PlaneGraphicsCesiumProps;\n  point?: Cesium.PointGraphics | PointGraphicsCesiumProps;\n  polygon?: Cesium.PolygonGraphics | PolygonGraphicsCesiumProps;\n  polyline?: Cesium.PolylineGraphics | PolylineGraphicsCesiumProps;\n  polylineVolume?: Cesium.PolylineVolumeGraphics | PolylineVolumeGraphicsCesiumProps;\n  position?: Cesium.PositionProperty | Cesium.Cartesian3;\n  // @type Cesium.PropertyBag\n  properties?: any;\n  rectangle?: Cesium.RectangleGraphics | RectangleGraphicsCesiumProps;\n  show?: boolean;\n  viewFrom?: Cesium.Property | Cesium.Cartesian3;\n  wall?: Cesium.WallGraphics | WallGraphicsCesiumProps;\n}\n\nexport interface EntityCesiumReadonlyProps {\n  id?: string;\n}\n\nexport interface EntityCesiumEvents {\n  onDefinitionChange?: () => void;\n}\n\nexport interface EntityProps\n  extends EntityCesiumProps,\n    EntityCesiumReadonlyProps,\n    EntityCesiumEvents,\n    EventProps<Cesium.Entity> {\n  children?: React.ReactNode;\n  // If true, the entity will be selected. It works only inside Viewer not CesiumWidget.\n  selected?: boolean;\n  // If true, the entity will be tracked by the camera. It works only inside Viewer not CesiumWidget.\n  tracked?: boolean;\n}\n\nexport interface EntityContext {\n  entityCollection?: Cesium.EntityCollection;\n  viewer?: Cesium.Viewer;\n  __RESIUM_EVENT_MANAGER?: EventManager;\n}\n\nconst cesiumProps: Array<keyof EntityCesiumProps> = [\n  \"availability\",\n  \"billboard\",\n  \"box\",\n  \"corridor\",\n  \"cylinder\",\n  \"description\",\n  \"ellipse\",\n  \"ellipsoid\",\n  \"label\",\n  \"model\",\n  \"name\",\n  \"orientation\",\n  \"path\",\n  \"plane\",\n  \"point\",\n  \"polygon\",\n  \"polyline\",\n  \"polylineVolume\",\n  \"position\",\n  \"properties\",\n  \"rectangle\",\n  \"show\",\n  \"viewFrom\",\n  \"wall\",\n];\n\nconst cesiumReadonlyProps: Array<keyof EntityCesiumReadonlyProps> = [\"id\"];\n\nconst cesiumEventProps: EventkeyMap<Cesium.Entity, keyof EntityCesiumEvents> = {\n  definitionChanged: \"onDefinitionChange\",\n};\n\nconst Entity = createCesiumComponent<Cesium.Entity, EntityProps, EntityContext>({\n  name: \"Entity\",\n  create(cprops) {\n    return new CesiumEntity(cprops as any);\n  },\n  mount(element, context, props) {\n    if (context.__RESIUM_EVENT_MANAGER) {\n      context.__RESIUM_EVENT_MANAGER.setEvents(element, props);\n    }\n    if (context.entityCollection) {\n      context.entityCollection.add(element);\n    }\n    if (context.viewer && props.selected) {\n      context.viewer.selectedEntity = element;\n    }\n    if (context.viewer && props.tracked) {\n      context.viewer.trackedEntity = element;\n    }\n  },\n  unmount(element, context) {\n    if (context.__RESIUM_EVENT_MANAGER) {\n      context.__RESIUM_EVENT_MANAGER.clearEvents(element);\n    }\n    if (context.entityCollection) {\n      context.entityCollection.remove(element);\n    }\n  },\n  update(element, props, prevProps, context) {\n    if (context.__RESIUM_EVENT_MANAGER) {\n      context.__RESIUM_EVENT_MANAGER.setEvents(element, props);\n    }\n\n    if (context.viewer) {\n      if (props.selected !== prevProps.selected) {\n        if (props.selected) {\n          context.viewer.selectedEntity = element;\n        } else if (context.viewer.selectedEntity === element) {\n          (context.viewer as any).selectedEntity = undefined;\n        }\n      }\n\n      if (props.tracked !== prevProps.tracked) {\n        if (props.tracked) {\n          context.viewer.trackedEntity = element;\n        } else if (context.viewer.trackedEntity === element) {\n          (context.viewer as any).trackedEntity = undefined;\n        }\n      }\n    }\n  },\n  provide(element) {\n    return {\n      entity: element,\n    };\n  },\n  cesiumProps,\n  cesiumReadonlyProps,\n  cesiumEventProps,\n});\n\nexport default Entity;\n","import React from \"react\";\nimport { ConstantProperty } from \"cesium\";\n// tslint:disable-next-line:no-var-requires\nconst { renderToStaticMarkup } = require(\"react-dom/server.browser\");\n// WORKAROUND: import { renderToStaticMarkup } from \"react-dom/server.browser\";\n\nimport { withCesium } from \"./core/context\";\nimport { Entity } from \"cesium\";\n\n/*\n@summary\n`EntityDescription` provides a way to render description of the entity with React.\n\nIts children will be rendered with `ReactDOM.renderToStaticMarkup` as HTML string of the description.\n\nNote: This component depends on `react-dom/server.browser` module.\n*/\n\n/*\n@scope\nEntityDescription is only inside [Entity](/components/Entity) components,\nand can not be used more than once for each entity.\n*/\n\nexport interface Props {\n  cesium: { entity?: Entity };\n}\n\nclass EntityDescription extends React.PureComponent<Props> {\n  public constructor(props: Readonly<Props> & { children?: React.ReactNode }) {\n    super(props);\n    this.update(props);\n  }\n\n  public componentDidMount() {\n    this.update();\n  }\n\n  public componentDidUpdate(prevProps: Readonly<Props> & { children?: React.ReactNode }) {\n    if (this.props.children !== prevProps.children) {\n      this.update();\n    }\n  }\n\n  public render() {\n    return null;\n  }\n\n  private update(props: Readonly<Props> & { children?: React.ReactNode } = this.props) {\n    if (props.cesium && props.cesium.entity && props.children) {\n      props.cesium.entity.description = new ConstantProperty(\n        renderToStaticMarkup(props.children as React.ReactElement<any>),\n      );\n    }\n  }\n}\n\nexport default withCesium<{ children?: React.ReactNode }, { entity?: Entity }>(EntityDescription);\n","import createCesiumComponent from \"./core/CesiumComponent\";\nimport Cesium from \"cesium\";\n\n/*\n@summary\n`Fog` can operate the fog of the scene.\nAll properties are applied to single fog of the scene.\n*/\n\n/*\n@scope\nFog is available inside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) components.\nIt can not be used more than once for each Viewer or CesiumWidget.\n*/\n\nexport interface FogCesiumProps {\n  density?: number;\n  enabled?: boolean;\n  minimumBrightness?: number;\n  screenSpaceErrorFactor?: number;\n}\n\n/* tslint:disable-next-line: no-empty-interface */\nexport interface FogProps extends FogCesiumProps {}\n\n/* tslint:disable-next-line: no-empty-interface */\nexport interface FogContext {\n  scene?: Cesium.Scene;\n}\n\nconst cesiumProps: Array<keyof FogCesiumProps> = [\n  \"density\",\n  \"enabled\",\n  \"minimumBrightness\",\n  \"screenSpaceErrorFactor\",\n];\n\nconst Fog = createCesiumComponent<Cesium.Fog, FogProps, FogContext>({\n  name: \"fog\",\n  create(cprops, props, context) {\n    return new Cesium.Fog();\n  },\n  mount(element, context) {\n    if (context.scene) {\n      context.scene.fog = element;\n    }\n  },\n  unmount(element, context) {\n    if (context.scene && !context.scene.isDestroyed()) {\n      context.scene.fog = new Cesium.Fog();\n    }\n  },\n  cesiumProps,\n  setCesiumPropsAfterCreate: true,\n});\n\nexport default Fog;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`GeoJsonDataSource` provides the way to load and show GeoJSON data into the scene.\nBoth GeoJSON and TopoJSON are supported, and can be loaded from a URL, string or raw object.\n*/\n\n/*\n@scope\nInside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) components.\n*/\n\nexport interface GeoJsonDataSourceCesiumProps {\n  clustering?: Cesium.EntityCluster;\n  name?: string;\n}\n\nexport interface GeoJsonDataSourceCesiumEvents {\n  onChange?: (GeoJsonDataSource: Cesium.GeoJsonDataSource) => void;\n  onError?: (GeoJsonDataSource: Cesium.GeoJsonDataSource, error: any) => void;\n  onLoading?: (GeoJsonDataSource: Cesium.GeoJsonDataSource, isLoaded: boolean) => void;\n}\n\nexport interface GeoJsonDataSourceProps\n  extends GeoJsonDataSourceCesiumProps,\n    GeoJsonDataSourceCesiumEvents {\n  // @CesiumReadonlyProp\n  data?: Cesium.Resource | string | object;\n  // @CesiumReadonlyProp\n  clampToGround?: boolean;\n  // @CesiumReadonlyProp\n  sourceUri?: string;\n  // @CesiumProp\n  show?: boolean;\n  // @CesiumReadonlyProp\n  markerSize?: number;\n  // @CesiumReadonlyProp\n  markerSymbol?: string;\n  // @CesiumReadonlyProp\n  markerColor?: Cesium.Color;\n  // @CesiumReadonlyProp\n  stroke?: Cesium.Color;\n  // @CesiumReadonlyProp\n  strokeWidth?: number;\n  // @CesiumReadonlyProp\n  fill?: Cesium.Color;\n  // @CesiumReadonlyProp\n  describe?: (properties: { [key: string]: any }, nameProperty: string) => Cesium.Property | string;\n  // Calls when the Promise for loading data is fullfilled.\n  onLoad?: (GeoJsonDataSouce: Cesium.GeoJsonDataSource) => void;\n}\n\nexport interface GeoJsonDataSourceContext {\n  dataSourceCollection?: Cesium.DataSourceCollection;\n}\n\nconst cesiumProps: Array<keyof GeoJsonDataSourceCesiumProps> = [\"clustering\", \"name\"];\n\nconst cesiumEventProps: EventkeyMap<\n  Cesium.GeoJsonDataSource,\n  keyof GeoJsonDataSourceCesiumEvents\n> = {\n  changedEvent: \"onChange\",\n  errorEvent: \"onError\",\n  loadingEvent: \"onLoading\",\n};\n\nconst load = ({\n  element,\n  data,\n  onLoad,\n  clampToGround,\n  sourceUri,\n  markerSize,\n  markerSymbol,\n  markerColor,\n  stroke,\n  strokeWidth,\n  fill,\n  describe,\n}: {\n  element: Cesium.GeoJsonDataSource;\n  dataSources: Cesium.DataSourceCollection;\n  data: Cesium.Resource | string | object;\n  onLoad?: (GeoJsonDataSource: Cesium.GeoJsonDataSource) => void;\n  clampToGround?: boolean;\n  sourceUri?: string;\n  markerSize?: number;\n  markerSymbol?: string;\n  markerColor?: Cesium.Color;\n  stroke?: Cesium.Color;\n  strokeWidth?: number;\n  fill?: Cesium.Color;\n  describe?: GeoJsonDataSourceProps[\"describe\"];\n}) => {\n  element\n    .load(data, {\n      clampToGround,\n      markerSize,\n      markerSymbol,\n      markerColor,\n      stroke,\n      strokeWidth,\n      fill,\n      sourceUri,\n      describe,\n    } as any)\n    .then(value => {\n      if (onLoad) {\n        try {\n          onLoad(value);\n        } catch (e) {\n          throw e;\n        }\n      }\n    });\n};\n\nconst GeoJsonDataSource = createCesiumComponent<\n  Cesium.GeoJsonDataSource,\n  GeoJsonDataSourceProps,\n  GeoJsonDataSourceContext\n>({\n  name: \"GeoJsonDataSource\",\n  create(cprops, props, context) {\n    const ds = new Cesium.GeoJsonDataSource(props.name);\n    if (cprops.clustering) {\n      ds.clustering = cprops.clustering;\n    }\n    if (typeof cprops.show === \"boolean\") {\n      ds.show = cprops.show;\n    }\n    return ds;\n  },\n  mount(element, context, props) {\n    if (context.dataSourceCollection) {\n      context.dataSourceCollection.add(element);\n      if (props.data) {\n        load({\n          element,\n          dataSources: context.dataSourceCollection,\n          data: props.data,\n          onLoad: props.onLoad,\n          clampToGround: props.clampToGround,\n          sourceUri: props.sourceUri,\n          markerSize: props.markerSize,\n          markerSymbol: props.markerSymbol,\n          markerColor: props.markerColor,\n          stroke: props.stroke,\n          strokeWidth: props.strokeWidth,\n          fill: props.fill,\n          describe: props.describe,\n        });\n      }\n    }\n  },\n  update(element, props, prevProps, context) {\n    if (prevProps.show !== props.show || !props.data) {\n      element.show = !!props.data && (typeof props.show === \"boolean\" ? props.show : true);\n    }\n    if (\n      context.dataSourceCollection &&\n      props.data &&\n      (prevProps.data !== props.data ||\n        prevProps.clampToGround !== props.clampToGround ||\n        prevProps.sourceUri !== props.sourceUri ||\n        prevProps.markerSize !== props.markerSize ||\n        prevProps.markerSymbol !== props.markerSymbol ||\n        prevProps.markerColor !== props.markerColor ||\n        prevProps.stroke !== props.stroke ||\n        prevProps.strokeWidth !== props.strokeWidth ||\n        prevProps.fill !== props.fill)\n    ) {\n      load({\n        element,\n        dataSources: context.dataSourceCollection,\n        data: props.data,\n        onLoad: props.onLoad,\n        clampToGround: props.clampToGround,\n        sourceUri: props.sourceUri,\n        markerSize: props.markerSize,\n        markerSymbol: props.markerSymbol,\n        markerColor: props.markerColor,\n        stroke: props.stroke,\n        strokeWidth: props.strokeWidth,\n        fill: props.fill,\n        describe: props.describe,\n      });\n    }\n  },\n  unmount(element, context) {\n    if (context.dataSourceCollection && !context.dataSourceCollection.isDestroyed()) {\n      context.dataSourceCollection.remove(element);\n    }\n  },\n  provide(element) {\n    return {\n      dataSource: element,\n    };\n  },\n  cesiumProps,\n  cesiumEventProps,\n});\n\nexport default GeoJsonDataSource;\n","import createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\nimport Cesium from \"cesium\";\n\n/*\n@summary\n`Globe` can operate the globe of the scene.\nAll properties are applied to single globe of the scene.\n*/\n\n/*\n@scope\nGlobe is available inside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) components.\nIt can not be used more than once for each Viewer or CesiumWidget.\n*/\n\nexport interface GlobeCesiumProps {\n  atmosphereBrightnessShift?: number;\n  atmosphereHueShift?: number;\n  atmosphereSaturationShift?: number;\n  baseColor?: Cesium.Color;\n  // @type Cesium.ClippingPlaneCollection\n  clippingPlanes?: any;\n  depthTestAgainstTerrain?: boolean;\n  enableLighting?: boolean;\n  lightingFadeInDistance?: number;\n  lightingFadeOutDistance?: number;\n  material?: Cesium.Material;\n  maximumScreenSpaceError?: number;\n  nightFadeInDistance?: number;\n  nightFadeOutDistance?: number;\n  oceanNormalMapUrl?: string;\n  shadows?: Cesium.ShadowMode;\n  show?: boolean;\n  showGroundAtmosphere?: boolean;\n  showWaterEffect?: boolean;\n  terrainProvider?: Cesium.TerrainProvider;\n  tileCacheSize?: number;\n}\n\nexport interface GlobeCesiumEvents {\n  onImageryLayersUpdate?: () => void;\n  onTerrainProviderChange?: (terrainProvider: Cesium.TerrainProvider) => void;\n  onTileLoad?: () => void;\n  onTileLoadProgress?: (currentLoadQueueLength: number) => void;\n}\n\nconst cesiumEventProps: EventkeyMap<Cesium.Globe, keyof GlobeCesiumEvents> = {\n  imageryLayersUpdatedEvent: \"onImageryLayersUpdate\",\n  terrainProviderChanged: \"onTerrainProviderChange\",\n  tileLoadedEvent: \"onTileLoad\",\n  tileLoadProgressEvent: \"onTileLoadProgress\",\n};\n\nexport interface GlobeProps extends GlobeCesiumProps, GlobeCesiumEvents {}\n\nexport interface GlobeContext {\n  scene: Cesium.Scene;\n}\n\nconst cesiumProps: Array<keyof GlobeCesiumProps> = [\n  \"atmosphereBrightnessShift\",\n  \"atmosphereHueShift\",\n  \"atmosphereSaturationShift\",\n  \"baseColor\",\n  \"clippingPlanes\",\n  \"depthTestAgainstTerrain\",\n  \"enableLighting\",\n  \"lightingFadeInDistance\",\n  \"lightingFadeOutDistance\",\n  \"material\",\n  \"maximumScreenSpaceError\",\n  \"nightFadeInDistance\",\n  \"nightFadeOutDistance\",\n  \"oceanNormalMapUrl\",\n  \"shadows\",\n  \"show\",\n  \"showGroundAtmosphere\",\n  \"showWaterEffect\",\n  \"terrainProvider\",\n  \"tileCacheSize\",\n];\n\nconst Globe = createCesiumComponent<Cesium.Globe, GlobeProps, GlobeContext>({\n  name: \"globe\",\n  create(cprops, props, context) {\n    return context.scene.globe;\n  },\n  cesiumProps,\n  cesiumEventProps,\n  setCesiumPropsAfterCreate: true,\n});\n\nexport default Globe;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent from \"./core/CesiumComponent\";\n\n/*\n@summary\n`ImageryLayer` is a imargery layer on the globe.\n\nLayers are added in order of JSX from the top.\n\n```jsx\n// Back layer\n<ImageryLayer imageryProvider={provider1} />\n<ImageryLayer imageryProvider={provider2} />\n<ImageryLayer imageryProvider={provider3} />\n// Front layer\n```\n\nis equivalent to:\n\n```js\nviewer.imageryLayers.add(provider1);\nviewer.imageryLayers.add(provider2);\nviewer.imageryLayers.add(provider3);\n```\n\nAs a result, the layer added at the very end is the frontmost when actually displayed.\n\nNote: `imageryProvider` property is read only. See also [guide](/guide#cesium-read-only-properties).\n*/\n\n/*\n@scope\nEither:\n- Inside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) component: the imargery layer will be attached to the ImageryLayerCollection of the Viewer or CesiumWidget.\n- Inside [ImageryLayerCollection](/components/ImageryLayerCollection) component: same as above\n*/\n\nexport interface ImageryLayerCesiumProps {\n  alpha?:\n    | ((\n        frameState: any /* Cesium.FrameState */,\n        layer: Cesium.ImageryLayer,\n        x: number,\n        y: number,\n        level: number,\n      ) => number)\n    | number;\n  brightness?:\n    | ((\n        frameState: any /* Cesium.FrameState */,\n        layer: Cesium.ImageryLayer,\n        x: number,\n        y: number,\n        level: number,\n      ) => number)\n    | number;\n  contrast?:\n    | ((\n        frameState: any /* Cesium.FrameState */,\n        layer: Cesium.ImageryLayer,\n        x: number,\n        y: number,\n        level: number,\n      ) => number)\n    | number;\n  hue?:\n    | ((\n        frameState: any /* Cesium.FrameState */,\n        layer: Cesium.ImageryLayer,\n        x: number,\n        y: number,\n        level: number,\n      ) => number)\n    | number;\n  saturation?:\n    | ((\n        frameState: any /* Cesium.FrameState */,\n        layer: Cesium.ImageryLayer,\n        x: number,\n        y: number,\n        level: number,\n      ) => number)\n    | number;\n  gamma?:\n    | ((\n        frameState: any /* Cesium.FrameState */,\n        layer: Cesium.ImageryLayer,\n        x: number,\n        y: number,\n        level: number,\n      ) => number)\n    | number;\n  splitDirection?:\n    | ((\n        frameState: any /* Cesium.FrameState */,\n        layer: Cesium.ImageryLayer,\n        x: number,\n        y: number,\n        level: number,\n      ) => any)\n    | any /* Cesium.SplitDirection */;\n  minificationFilter?: any /* Cesium.TextureMinificationFilter */;\n  magnificationFilter?: any /* Cesium.TextureMagnificationFilter */;\n  cutoutRectangle?: Cesium.Rectangle;\n  show?: boolean;\n}\n\nexport interface ImageryLayerCesiumReadonlyProps {\n  imageryProvider: Cesium.ImageryProvider;\n  rectangle?: Cesium.Rectangle;\n  maximumAnisotropy?: number;\n  minimumTerrainLevel?: number;\n  maximumTerrainLevel?: number;\n}\n\nexport interface ImageryLayerProps\n  extends ImageryLayerCesiumProps,\n    ImageryLayerCesiumReadonlyProps {}\n\nexport interface ImageryLayerContext {\n  imageryLayerCollection?: Cesium.ImageryLayerCollection;\n}\n\nconst cesiumProps: Array<keyof ImageryLayerCesiumProps> = [\n  \"alpha\",\n  \"brightness\",\n  \"contrast\",\n  \"hue\",\n  \"saturation\",\n  \"gamma\",\n  \"splitDirection\",\n  \"minificationFilter\",\n  \"magnificationFilter\",\n  \"cutoutRectangle\",\n  \"show\",\n];\n\nconst cesiumReadonlyProps: Array<keyof ImageryLayerCesiumReadonlyProps> = [\n  \"imageryProvider\",\n  \"rectangle\",\n  \"maximumAnisotropy\",\n  \"minimumTerrainLevel\",\n  \"maximumTerrainLevel\",\n];\n\nconst ImageryLayer = createCesiumComponent<\n  Cesium.ImageryLayer,\n  ImageryLayerProps,\n  ImageryLayerContext\n>({\n  name: \"ImageryLayer\",\n  create(cprops) {\n    return new Cesium.ImageryLayer(\n      cprops.imageryProvider,\n      {\n        rectangle: cprops.rectangle,\n        alpha: cprops.alpha,\n        brightness: cprops.brightness,\n        contrast: cprops.contrast,\n        hue: cprops.hue,\n        saturation: cprops.saturation,\n        gamma: cprops.gamma,\n        splitDirection: cprops.splitDirection,\n        minificationFilter: cprops.minificationFilter,\n        magnificationFilter: cprops.magnificationFilter,\n        show: cprops.show,\n        maximumAnisotropy: cprops.maximumAnisotropy,\n        minimumTerrainLevel: cprops.minimumTerrainLevel,\n        maximumTerrainLevel: cprops.maximumTerrainLevel,\n        cutoutRectangle: cprops.cutoutRectangle,\n      } as any /* workaround for splitDirection */,\n    );\n  },\n  mount(element, context) {\n    if (context.imageryLayerCollection) {\n      context.imageryLayerCollection.add(element);\n      console.log(\"added\", element);\n    }\n  },\n  unmount(element, context) {\n    if (context.imageryLayerCollection) {\n      context.imageryLayerCollection.remove(element);\n    }\n  },\n  cesiumProps,\n  cesiumReadonlyProps,\n});\n\nexport default ImageryLayer;\n","import Cesium from \"cesium\";\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`ImageryLayerCollection` is a collection of imagery layers of the globe.\nIt can have some `ImageryLayer` components as children.\n*/\n\n/*\n@scope\nAvailable inside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) components.\nThis component refers to the single ImageryLayerCollection of them, so can not be used more than once for each Viewer or CesiumWidget.\n*/\n\nexport interface ImageryLayerCollectionCesiumEvents {\n  onLayerAdd?: (layer: Cesium.ImageryLayer, index: number) => void;\n  onLayerMove?: (layer: Cesium.ImageryLayer, index: number) => void;\n  onLayerRemove?: (layer: Cesium.ImageryLayer, index: number) => void;\n  onLayerShowOrHide?: (layer: Cesium.ImageryLayer, index: number) => void;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface ImageryLayerCollectionProps extends ImageryLayerCollectionCesiumEvents {}\n\nexport interface ImageryLayerCollectionContext {\n  globe: Cesium.Globe;\n}\n\nconst cesiumEventProps: EventkeyMap<\n  Cesium.ImageryLayerCollection,\n  keyof ImageryLayerCollectionCesiumEvents\n> = {\n  layerAdded: \"onLayerAdd\",\n  layerMoved: \"onLayerMove\",\n  layerRemoved: \"onLayerRemove\",\n  layerShownOrHidden: \"onLayerShowOrHide\",\n};\n\nconst ImageryLayerCollection = createCesiumComponent<\n  Cesium.ImageryLayerCollection,\n  ImageryLayerCollectionProps,\n  ImageryLayerCollectionContext\n>({\n  name: \"ImageryLayerCollection\",\n  create(cprops, props, context) {\n    return context.globe.imageryLayers;\n  },\n  cesiumEventProps,\n});\n\nexport default ImageryLayerCollection;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`KmlDataSource` provides the way to load and show KML data into the scene.\nBoth KML and KMZ are supported, and can be loaded from a URL, string or raw object.\n*/\n\n/*\n@scope\nInside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) components.\n*/\n\nexport interface KmlDataSourceCesiumProps {\n  clustering?: Cesium.EntityCluster;\n  name?: string;\n}\n\nexport interface KmlDataSourceCesiumReadonlyProps {\n  camera?: Cesium.Camera;\n  canvas?: HTMLCanvasElement;\n  ellipsoid?: Cesium.Ellipsoid;\n}\n\nexport interface KmlDataSourceCesiumEvents {\n  onChange?: (kmlDataSource: Cesium.KmlDataSource) => void;\n  onError?: (kmlDataSource: Cesium.KmlDataSource, error: any) => void;\n  onLoading?: (kmlDataSource: Cesium.KmlDataSource, isLoaded: boolean) => void;\n  onReferesh?: (kmlDataSource: Cesium.KmlDataSource, urlComponent: string) => void;\n  onUnsupportedNode?: (kmlDataSource: Cesium.KmlDataSource) => void;\n}\n\nexport interface KmlDataSourceProps\n  extends KmlDataSourceCesiumProps,\n    KmlDataSourceCesiumReadonlyProps,\n    KmlDataSourceCesiumEvents {\n  // @CesiumReadonlyProp\n  data?: Cesium.Resource | string | Document | Blob;\n  // @CesiumReadonlyProp\n  clampToGround?: boolean;\n  // @CesiumReadonlyProp\n  sourceUri?: string;\n  // @CesiumProp\n  show?: boolean;\n  // Calls when the Promise for loading data is fullfilled.\n  onLoad?: (kmlDataSouce: Cesium.KmlDataSource) => void;\n}\n\nexport interface KmlDataSourceContext {\n  dataSourceCollection?: Cesium.DataSourceCollection;\n  scene: Cesium.Scene;\n}\n\nconst cesiumProps: Array<keyof KmlDataSourceCesiumProps> = [\"clustering\", \"name\"];\n\nconst cesiumReadonlyProps: Array<keyof KmlDataSourceCesiumReadonlyProps> = [\n  \"camera\",\n  \"canvas\",\n  \"ellipsoid\",\n];\n\nconst cesiumEventProps: EventkeyMap<Cesium.KmlDataSource, keyof KmlDataSourceCesiumEvents> = {\n  changedEvent: \"onChange\",\n  errorEvent: \"onError\",\n  loadingEvent: \"onLoading\",\n  refreshEvent: \"onReferesh\",\n  unsupportedNodeEvent: \"onUnsupportedNode\",\n};\n\nconst load = ({\n  element,\n  data,\n  onLoad,\n  clampToGround,\n  ellipsoid,\n  sourceUri,\n}: {\n  element: Cesium.KmlDataSource;\n  dataSources: Cesium.DataSourceCollection;\n  data: Cesium.Resource | string | Document | Blob;\n  onLoad?: (kmlDataSource: Cesium.KmlDataSource) => void;\n  clampToGround?: boolean;\n  ellipsoid?: Cesium.Ellipsoid;\n  sourceUri?: string;\n}) => {\n  element.load(data, { clampToGround, ellipsoid, sourceUri }).then(value => {\n    if (onLoad) {\n      try {\n        onLoad(value);\n      } catch (e) {\n        throw e;\n      }\n    }\n  });\n};\n\nconst KmlDataSource = createCesiumComponent<\n  Cesium.KmlDataSource,\n  KmlDataSourceProps,\n  KmlDataSourceContext\n>({\n  name: \"KmlDataSource\",\n  create(cprops, props, context) {\n    const ds = new Cesium.KmlDataSource({\n      camera: cprops.camera || context.scene.camera,\n      canvas: cprops.canvas || (context.scene.canvas as HTMLCanvasElement),\n      ellipsoid: cprops.ellipsoid,\n    });\n    if (cprops.clustering) {\n      ds.clustering = cprops.clustering;\n    }\n    if (typeof cprops.show === \"boolean\") {\n      ds.show = cprops.show;\n    }\n    if (typeof cprops.name !== \"undefined\") {\n      ds.name = cprops.name;\n    }\n    return ds;\n  },\n  mount(element, context, props) {\n    if (context.dataSourceCollection) {\n      context.dataSourceCollection.add(element);\n      if (props.data) {\n        load({\n          element,\n          dataSources: context.dataSourceCollection,\n          data: props.data,\n          onLoad: props.onLoad,\n          clampToGround: props.clampToGround,\n          ellipsoid: props.ellipsoid,\n          sourceUri: props.sourceUri,\n        });\n      }\n    }\n  },\n  update(element, props, prevProps, context) {\n    if (prevProps.show !== props.show || !props.data) {\n      element.show = !!props.data && (typeof props.show === \"boolean\" ? props.show : true);\n    }\n    if (\n      context.dataSourceCollection &&\n      props.data &&\n      (prevProps.data !== props.data ||\n        prevProps.clampToGround !== props.clampToGround ||\n        prevProps.ellipsoid !== props.ellipsoid ||\n        prevProps.sourceUri !== props.sourceUri)\n    ) {\n      load({\n        element,\n        dataSources: context.dataSourceCollection,\n        data: props.data,\n        onLoad: props.onLoad,\n        clampToGround: props.clampToGround,\n        ellipsoid: props.ellipsoid,\n        sourceUri: props.sourceUri,\n      });\n    }\n  },\n  unmount(element, context) {\n    if (context.dataSourceCollection && !context.dataSourceCollection.isDestroyed()) {\n      context.dataSourceCollection.remove(element);\n    }\n  },\n  provide(element) {\n    return {\n      dataSource: element,\n    };\n  },\n  cesiumProps,\n  cesiumReadonlyProps,\n  cesiumEventProps,\n});\n\nexport default KmlDataSource;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent from \"./core/CesiumComponent\";\nimport EventManager, { EventProps } from \"./core/EventManager\";\n\n/*\n@summary\n`Lavbel` is a label primitive in the `LabelCollection`.\n\nPrimitive is a low layer API for geographical visualization.\n[Entity](/components/entity) is more recommended unless performance issues.\n*/\n\n/*\n@scope\nOnly inside [LabelCollection](/components/LabelCollection) component.\nA label object will be attached to the parent LabelCollection.\n*/\n\nexport interface LabelCesiumProps {\n  backgroundColor?: Cesium.Color;\n  backgroundPadding?: Cesium.Cartesian2;\n  disableDepthTestDistance?: number;\n  distanceDisplayCondition?: Cesium.DistanceDisplayCondition;\n  eyeOffset?: Cesium.Cartesian3;\n  fillColor?: Cesium.Color;\n  font?: string;\n  heightReference?: Cesium.HeightReference;\n  horizontalOrigin?: Cesium.HorizontalOrigin;\n  id?: any;\n  outlineColor?: Cesium.Color;\n  outlineWidth?: number;\n  pixelOffset?: Cesium.Cartesian2;\n  pixelOffsetScaleByDistance?: Cesium.NearFarScalar;\n  position?: Cesium.Cartesian3;\n  scale?: number;\n  scaleByDistance?: Cesium.NearFarScalar;\n  show?: boolean;\n  showBackground?: boolean;\n  style?: Cesium.LabelStyle;\n  text?: string;\n  translucencyByDistance?: Cesium.NearFarScalar;\n  verticalOrigin?: Cesium.VerticalOrigin;\n}\n\nexport interface LabelProps extends LabelCesiumProps, EventProps<Cesium.Label> {}\n\nexport interface LabelContext {\n  labelCollection?: Cesium.LabelCollection;\n  __RESIUM_EVENT_MANAGER?: EventManager;\n}\n\nconst cesiumProps: Array<keyof LabelCesiumProps> = [\n  \"backgroundColor\",\n  \"backgroundPadding\",\n  \"disableDepthTestDistance\",\n  \"distanceDisplayCondition\",\n  \"eyeOffset\",\n  \"fillColor\",\n  \"font\",\n  \"heightReference\",\n  \"horizontalOrigin\",\n  \"id\",\n  \"outlineColor\",\n  \"outlineWidth\",\n  \"pixelOffset\",\n  \"pixelOffsetScaleByDistance\",\n  \"position\",\n  \"scale\",\n  \"scaleByDistance\",\n  \"show\",\n  \"showBackground\",\n  \"style\",\n  \"text\",\n  \"translucencyByDistance\",\n  \"verticalOrigin\",\n];\n\nconst Label = createCesiumComponent<Cesium.Label, LabelProps, LabelContext>({\n  name: \"Label\",\n  create(cprops, props, context) {\n    return new (Cesium.Label as any)(cprops, context.labelCollection);\n  },\n  mount(element, context, props) {\n    if (context.__RESIUM_EVENT_MANAGER) {\n      context.__RESIUM_EVENT_MANAGER.setEvents(element, props);\n    }\n    if (context.labelCollection) {\n      context.labelCollection.add(element);\n    }\n  },\n  unmount(element, context) {\n    if (context.__RESIUM_EVENT_MANAGER) {\n      context.__RESIUM_EVENT_MANAGER.clearEvents(element);\n    }\n    if (context.labelCollection && !context.labelCollection.isDestroyed()) {\n      context.labelCollection.remove(element);\n    }\n  },\n  update(element, props, prevProps, context) {\n    if (context.__RESIUM_EVENT_MANAGER) {\n      context.__RESIUM_EVENT_MANAGER.setEvents(element, props);\n    }\n  },\n  cesiumProps,\n});\n\nexport default Label;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent from \"./core/CesiumComponent\";\n\n/*\n@summary\n`LabelCollection` is a collection of label primitives.\nIt can have some `Label` components as children.\n\nPrimitive is a low layer API for geographical visualization.\n[Entity](/components/entity) is more recommended unless performance issues.\n*/\n\n/*\n@scope\nInside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) component.\nA LabelCollection object will be attached to the PrimitiveCollection of the Viewer or CesiumWidget.\n*/\n\nexport interface LabelCollectionCesiumProps {\n  blendOption?: Cesium.BlendOption;\n  debugShowBoundingVolume?: boolean;\n  modelMatrix?: Cesium.Matrix4;\n}\n\nexport interface LabelCollectionProps extends LabelCollectionCesiumProps {\n  children?: React.ReactNode;\n}\n\nexport interface LabelCollectionContext {\n  primitiveCollection?: Cesium.PrimitiveCollection;\n  scene: Cesium.Scene;\n}\n\nconst cesiumProps: Array<keyof LabelCollectionCesiumProps> = [\n  \"blendOption\",\n  \"debugShowBoundingVolume\",\n  \"modelMatrix\",\n];\n\nconst LabelCollection = createCesiumComponent<\n  Cesium.LabelCollection,\n  LabelCollectionProps,\n  LabelCollectionContext\n>({\n  name: \"LabelCollection\",\n  create(cprops, props, context) {\n    return new Cesium.LabelCollection({\n      scene: context.scene,\n      modelMatrix: cprops.modelMatrix,\n      blendOption: cprops.blendOption,\n      debugShowBoundingVolume: cprops.debugShowBoundingVolume,\n    } as any);\n  },\n  mount(element, context) {\n    if (context.primitiveCollection) {\n      context.primitiveCollection.add(element);\n    }\n  },\n  unmount(element, context) {\n    if (context.primitiveCollection && !context.primitiveCollection.isDestroyed()) {\n      context.primitiveCollection.remove(element);\n    }\n    if (!element.isDestroyed()) {\n      element.destroy();\n    }\n  },\n  provide(element) {\n    return {\n      labelCollection: element,\n    };\n  },\n  cesiumProps,\n});\n\nexport default LabelCollection;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`LabelGraphics` is a label visualization for the entity.\n*/\n\n/*\n@scope\nLabelGraphics is only inside [Entity](/components/Entity) components,\nand can not be used more than once for each entity.\n*/\n\nexport interface LabelGraphicsCesiumProps {\n  text?: Cesium.Property | string;\n  font?: Cesium.Property | string;\n  style?: Cesium.Property | Cesium.LabelStyle;\n  fillColor?: Cesium.Property | Cesium.Color;\n  outlineColor?: Cesium.Property | Cesium.Color;\n  outlineWidth?: Cesium.Property | number;\n  show?: Cesium.Property | boolean;\n  showBackground?: Cesium.Property | boolean;\n  backgroundColor?: Cesium.Property | Cesium.Color;\n  backgroundPadding?: Cesium.Property | number;\n  scale?: Cesium.Property | number;\n  horizontalOrigin?: Cesium.Property | Cesium.HorizontalOrigin;\n  verticalOrigin?: Cesium.Property | Cesium.VerticalOrigin;\n  eyeOffset?: Cesium.Property | Cesium.Cartesian3;\n  pixelOffset?: Cesium.Property | Cesium.Cartesian2;\n  translucencyByDistance?: Cesium.Property | Cesium.NearFarScalar;\n  pixelOffsetScaleByDistance?: Cesium.Property | Cesium.NearFarScalar;\n  scaleByDistance?: Cesium.Property | Cesium.NearFarScalar;\n  heightReference?: Cesium.Property | Cesium.HeightReference;\n  distanceDisplayCondition?: Cesium.Property | Cesium.DistanceDisplayCondition;\n  disableDepthTestDistance?: Cesium.Property | number;\n}\n\nexport interface LabelGraphicsCesiumEvents {\n  onDefinitionChange?: () => void;\n}\n\nexport interface LabelGraphicsProps extends LabelGraphicsCesiumProps, LabelGraphicsCesiumEvents {}\n\nexport interface LabelGraphicsContext {\n  entity?: Cesium.Entity;\n}\n\nconst cesiumProps: Array<keyof LabelGraphicsCesiumProps> = [\n  \"text\",\n  \"font\",\n  \"style\",\n  \"fillColor\",\n  \"outlineColor\",\n  \"outlineWidth\",\n  \"show\",\n  \"showBackground\",\n  \"backgroundColor\",\n  \"backgroundPadding\",\n  \"scale\",\n  \"horizontalOrigin\",\n  \"verticalOrigin\",\n  \"eyeOffset\",\n  \"pixelOffset\",\n  \"translucencyByDistance\",\n  \"pixelOffsetScaleByDistance\",\n  \"scaleByDistance\",\n  \"heightReference\",\n  \"distanceDisplayCondition\",\n  \"disableDepthTestDistance\",\n];\n\nconst cesiumEventProps: EventkeyMap<Cesium.LabelGraphics, keyof LabelGraphicsCesiumEvents> = {\n  definitionChanged: \"onDefinitionChange\",\n};\n\nconst LabelGraphics = createCesiumComponent<\n  Cesium.LabelGraphics,\n  LabelGraphicsProps,\n  LabelGraphicsContext\n>({\n  name: \"LabelGraphics\",\n  create(cprops) {\n    return new Cesium.LabelGraphics(cprops as any);\n  },\n  mount(element, context) {\n    if (context.entity) {\n      context.entity.label = element;\n    }\n  },\n  unmount(element, context) {\n    if (context.entity) {\n      context.entity.label = undefined as any;\n    }\n  },\n  cesiumProps,\n  cesiumEventProps,\n});\n\nexport default LabelGraphics;\n","import Cesium from \"cesium\";\n\nimport createCesiumElement from \"./core/CesiumComponent\";\n\nexport interface ModelCesiumProps {\n  basePath?: Cesium.Resource | string;\n  show?: boolean;\n  modelMatrix?: Cesium.Matrix4;\n  scale?: number;\n  minimumPixelSize?: number;\n  maximumScale?: number;\n  id?: any;\n  clampAnimations?: boolean;\n  shadows?: Cesium.ShadowMode;\n  debugShowBoundingVolume?: boolean;\n  debugWireframe?: boolean;\n  scene?: Cesium.Scene;\n  distanceDisplayCondition?: Cesium.DistanceDisplayCondition;\n  color?: Cesium.Color;\n  // @type Cesium.ColorBlendMode\n  colorBlendMode?: any;\n  colorBlendAmount?: number;\n  silhouetteColor?: Cesium.Color;\n  silhouetteSize?: number;\n  // @type Cesium.ClippingPlaneCollection\n  clippingPlanes?: any;\n  dequantizeInShader?: boolean;\n  imageBasedLightingFactor?: Cesium.Cartesian2;\n  lightColor?: Cesium.Cartesian3;\n  luminanceAtZenith?: number;\n  sphericalHarmonicCoefficients?: Cesium.Cartesian3[];\n  specularEnvironmentMaps?: string;\n}\n\nexport interface ModelCesiumReadonlyProps {\n  allowPicking?: boolean;\n  asynchronous?: boolean;\n  gltf?: object | ArrayBuffer | Uint8Array;\n  incrementallyLoadTextures?: boolean;\n  url?: Cesium.Resource | string;\n}\n\nexport interface ModelProps extends ModelCesiumProps, ModelCesiumReadonlyProps {\n  // Calls when the model is completely loaded.\n  onReady?: (model: Cesium.Model) => void;\n}\n\nexport interface ModelContext {\n  primitiveCollection: Cesium.PrimitiveCollection;\n}\n\nconst cesiumProps: Array<keyof ModelCesiumProps> = [\n  \"basePath\",\n  \"clampAnimations\",\n  \"clippingPlanes\",\n  \"color\",\n  \"colorBlendAmount\",\n  \"colorBlendMode\",\n  \"debugShowBoundingVolume\",\n  \"debugWireframe\",\n  \"dequantizeInShader\",\n  \"distanceDisplayCondition\",\n  \"id\",\n  \"imageBasedLightingFactor\",\n  \"lightColor\",\n  \"maximumScale\",\n  \"minimumPixelSize\",\n  \"modelMatrix\",\n  \"scale\",\n  \"scene\",\n  \"shadows\",\n  \"show\",\n  \"silhouetteColor\",\n  \"silhouetteSize\",\n  \"luminanceAtZenith\",\n  \"sphericalHarmonicCoefficients\",\n  \"specularEnvironmentMaps\",\n];\n\nconst cesiumReadonlyProps: Array<keyof ModelCesiumReadonlyProps> = [\n  \"allowPicking\",\n  \"asynchronous\",\n  \"gltf\",\n  \"incrementallyLoadTextures\",\n  \"url\",\n];\n\nconst Model = createCesiumElement<Cesium.Model, ModelProps, ModelContext>({\n  name: \"Model\",\n  create(cprops, props) {\n    // Workaround: basePath?: Cesium.Resource | string;\n    const model = props.url\n      ? Cesium.Model.fromGltf(cprops as any)\n      : new Cesium.Model(cprops as any);\n\n    if (props.onReady) {\n      model.readyPromise.then(props.onReady);\n    }\n\n    return model;\n  },\n  mount(element, context) {\n    context.primitiveCollection.add(element);\n  },\n  unmount(element, context) {\n    context.primitiveCollection.remove(element);\n    if (!element.isDestroyed()) {\n      element.destroy();\n    }\n  },\n  cesiumProps,\n  cesiumReadonlyProps,\n});\n\nexport default Model;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`ModelGraphics` is a 3D model visualization for the entity.\n*/\n\n/*\n@scope\nModelGraphics is only inside [Entity](/components/Entity) components,\nand can not be used more than once for each entity.\n*/\n\nexport interface ModelGraphicsCesiumProps {\n  uri?: Cesium.Property | string;\n  show?: Cesium.Property | boolean;\n  scale?: Cesium.Property | number;\n  minimumPixelSize?: Cesium.Property | number;\n  maximumScale?: Cesium.Property | number;\n  incrementallyLoadTextures?: Cesium.Property | boolean;\n  runAnimations?: Cesium.Property | boolean;\n  clampAnimations?: Cesium.Property | boolean;\n  // @type Cesium.Property | { [name: string]: Cesium.TranslationRotationScale }\n  nodeTransformations?: Cesium.Property;\n  shadows?: Cesium.Property | Cesium.ShadowMode;\n  heightReference?: Cesium.Property | Cesium.HeightReference;\n  distanceDisplayCondition?: Cesium.Property | Cesium.DistanceDisplayCondition;\n  silhouetteColor?: Cesium.Property | Cesium.Color;\n  silhouetteSize?: Cesium.Property | number;\n  color?: Cesium.Property | Cesium.Color;\n  // @type Cesium.Property | Cesium.ColorBlendMode\n  colorBlendMode?: Cesium.Property | any;\n  colorBlendAmount?: Cesium.Property | number;\n  // @type Cesium.Propert | Cesium.ClippingPlaneCollection\n  clippingPlanes?: Cesium.Property | any;\n  imageBasedLightingFactor?: Cesium.Property | Cesium.Cartesian2;\n  lightColor?: Cesium.Property | Cesium.Color;\n}\n\nexport interface ModelGraphicsCesiumEvents {\n  onDefinitionChange?: () => void;\n}\n\nexport interface ModelGraphicsProps extends ModelGraphicsCesiumProps, ModelGraphicsCesiumEvents {}\n\nexport interface ModelGraphicsContext {\n  entity?: Cesium.Entity;\n}\n\nconst cesiumProps: Array<keyof ModelGraphicsCesiumProps> = [\n  \"uri\",\n  \"show\",\n  \"scale\",\n  \"minimumPixelSize\",\n  \"maximumScale\",\n  \"incrementallyLoadTextures\",\n  \"runAnimations\",\n  \"clampAnimations\",\n  \"nodeTransformations\",\n  \"shadows\",\n  \"heightReference\",\n  \"distanceDisplayCondition\",\n  \"silhouetteColor\",\n  \"silhouetteSize\",\n  \"color\",\n  \"colorBlendMode\",\n  \"colorBlendAmount\",\n  \"clippingPlanes\",\n  \"imageBasedLightingFactor\",\n  \"lightColor\",\n];\n\nconst cesiumEventProps: EventkeyMap<Cesium.ModelGraphics, keyof ModelGraphicsCesiumEvents> = {\n  definitionChanged: \"onDefinitionChange\",\n};\n\nconst ModelGraphics = createCesiumComponent<\n  Cesium.ModelGraphics,\n  ModelGraphicsProps,\n  ModelGraphicsContext\n>({\n  name: \"ModelGraphics\",\n  create(cprops) {\n    return new Cesium.ModelGraphics(cprops as any);\n  },\n  mount(element, context) {\n    if (context.entity) {\n      context.entity.model = element;\n    }\n  },\n  unmount(element, context) {\n    if (context.entity) {\n      context.entity.model = undefined as any;\n    }\n  },\n  cesiumProps,\n  cesiumEventProps,\n});\n\nexport default ModelGraphics;\n","import Cesium from \"cesium\";\nimport createCesiumComponent from \"./core/CesiumComponent\";\n\n/*\n@summary\n`Moon` can operate the moon of the scene.\nAll properties are applied to single moon of the scene.\n*/\n\n/*\n@scope\nMoon is available inside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) components.\nIt can not be used more than once for each Viewer or CesiumWidget.\n*/\n\nexport interface MoonCesiumProps {\n  onlySunLighting?: boolean;\n  show?: boolean;\n  textureUrl?: string;\n}\n\nexport interface MoonCesiumReadonlyProps {\n  ellipsoid?: Cesium.Ellipsoid;\n}\n\nexport interface MoonProps extends MoonCesiumProps, MoonCesiumReadonlyProps {}\n\nexport interface MoonContext {\n  scene?: Cesium.Scene;\n}\n\nconst cesiumProps: Array<keyof MoonCesiumProps> = [\"onlySunLighting\", \"show\", \"textureUrl\"];\n\nconst cesiumReadonlyProps: Array<keyof MoonCesiumReadonlyProps> = [\"ellipsoid\"];\n\nconst Moon = createCesiumComponent<Cesium.Moon, MoonProps, MoonContext>({\n  name: \"moon\",\n  create(cprops, props, context) {\n    return new Cesium.Moon(cprops);\n  },\n  mount(element, context) {\n    if (context.scene) {\n      context.scene.moon = element;\n    }\n  },\n  unmount(element, context) {\n    if (context.scene && !context.scene.isDestroyed()) {\n      context.scene.moon = new Cesium.Moon();\n    }\n    // if (!element.isDestroyed()) {\n    //   element.destroy();\n    // }\n  },\n  cesiumProps,\n  cesiumReadonlyProps,\n});\n\nexport default Moon;\n","import Cesium from \"cesium\";\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`ParticleSystem` is 3D particles.\n*/\n\n/*\n@scope\nInside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) component.\nA ParticleSystem object will be attached to the PrimitiveCollection of the Viewer or CesiumWidget.\n*/\n\nexport interface ParticleSystemCesiumProps {\n  show?: boolean;\n  // @type Cesium.ParticleEmitter\n  emitter?: any;\n  modelMatrix?: Cesium.Matrix4;\n  emitterModelMatrix?: Cesium.Matrix4;\n  emissionRate?: number;\n  // @type Cesium.ParticleBurst[]\n  bursts?: any[];\n  loop?: boolean;\n  scale?: number;\n  startScale?: number;\n  endScale?: number;\n  color?: Cesium.Color;\n  startColor?: Cesium.Color;\n  endColor?: Cesium.Color;\n  image?: string | ImageData | HTMLImageElement | HTMLCanvasElement;\n  imageSize?: Cesium.Cartesian2;\n  minimumImageSize?: Cesium.Cartesian2;\n  maximumImageSize?: Cesium.Cartesian2;\n  speed?: number;\n  minimumSpeed?: number;\n  maximumSpeed?: number;\n  lifetime?: number;\n  particleLife?: number;\n  minimumParticleLife?: number;\n  maximumParticleLife?: number;\n  mass?: number;\n  minimumMass?: number;\n  maximumMass?: number;\n}\n\nexport interface ParticleSystemCesiumEvents {\n  onComplete?: () => void;\n}\n\nexport interface ParticleSystemProps extends ParticleSystemCesiumProps, ParticleSystemCesiumEvents {\n  // @CesiumEvent\n  // Correspond to [ParticleSystem#updateCallback](https://cesiumjs.org/Cesium/Build/Documentation/ParticleSystem.html#updateCallback)\n  onUpdate?: (particle: any /* Cesium.Particle */, dt: number) => void;\n}\n\nexport interface ParticleSystemContext {\n  primitiveCollection: Cesium.PrimitiveCollection;\n}\n\nconst cesiumProps: Array<keyof ParticleSystemCesiumProps> = [\n  \"show\",\n  \"emitter\",\n  \"modelMatrix\",\n  \"emitterModelMatrix\",\n  \"emissionRate\",\n  \"bursts\",\n  \"loop\",\n  \"scale\",\n  \"startScale\",\n  \"endScale\",\n  \"color\",\n  \"startColor\",\n  \"endColor\",\n  \"image\",\n  \"imageSize\",\n  \"minimumImageSize\",\n  \"maximumImageSize\",\n  \"speed\",\n  \"minimumSpeed\",\n  \"maximumSpeed\",\n  \"lifetime\",\n  \"particleLife\",\n  \"minimumParticleLife\",\n  \"maximumParticleLife\",\n  \"mass\",\n  \"minimumMass\",\n  \"maximumMass\",\n];\n\nconst cesiumEventProps: EventkeyMap<any, keyof ParticleSystemCesiumEvents> = {\n  complete: \"onComplete\",\n};\n\nconst ParticleSystem = createCesiumComponent<\n  any,\n  ParticleSystemProps,\n  ParticleSystemContext /* Cesium.ParticleSystem */\n>({\n  name: \"ParticleSystem\",\n  create(cprops, props) {\n    return new (Cesium as any).ParticleSystem({ ...cprops, updateCallback: props.onUpdate });\n  },\n  update(element, props, prevProps) {\n    if (props.onUpdate !== prevProps.onUpdate) {\n      element.updateCallback = props.onUpdate;\n    }\n  },\n  mount(element, context) {\n    context.primitiveCollection.add(element);\n  },\n  unmount(element, context) {\n    if (!context.primitiveCollection.isDestroyed) {\n      context.primitiveCollection.remove(element);\n    }\n  },\n  cesiumProps,\n  cesiumEventProps,\n});\n\nexport default ParticleSystem;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`PathGraphics` is a path visualization for the entity.\n*/\n\n/*\n@scope\nPathGraphics is only inside [Entity](/components/Entity) components,\nand can not be used more than once for each entity.\n*/\n\nexport interface PathGraphicsCesiumProps {\n  leadTime?: Cesium.Property | number;\n  trailTime?: Cesium.Property | number;\n  show?: Cesium.Property | boolean;\n  width?: Cesium.Property | number;\n  material?: Cesium.MaterialProperty | Cesium.Color | string;\n  resolution?: Cesium.Property | number;\n  distanceDisplayCondition?: Cesium.Property | Cesium.DistanceDisplayCondition;\n}\n\nexport interface PathGraphicsCesiumEvents {\n  onDefinitionChange?: () => void;\n}\n\nexport interface PathGraphicsProps extends PathGraphicsCesiumProps, PathGraphicsCesiumEvents {}\n\nexport interface PathGraphicsContext {\n  entity?: Cesium.Entity;\n}\n\nconst cesiumProps: Array<keyof PathGraphicsCesiumProps> = [\n  \"leadTime\",\n  \"trailTime\",\n  \"show\",\n  \"width\",\n  \"material\",\n  \"resolution\",\n  \"distanceDisplayCondition\",\n];\n\nconst cesiumEventProps: EventkeyMap<Cesium.PathGraphics, keyof PathGraphicsCesiumEvents> = {\n  definitionChanged: \"onDefinitionChange\",\n};\n\nconst PathGraphics = createCesiumComponent<\n  Cesium.PathGraphics,\n  PathGraphicsProps,\n  PathGraphicsContext\n>({\n  name: \"PathGraphics\",\n  create(cprops) {\n    return new Cesium.PathGraphics(cprops as any);\n  },\n  mount(element, context) {\n    if (context.entity) {\n      context.entity.path = element;\n    }\n  },\n  unmount(element, context) {\n    if (context.entity) {\n      context.entity.path = undefined as any;\n    }\n  },\n  cesiumProps,\n  cesiumEventProps,\n});\n\nexport default PathGraphics;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`PlaneGraphics` is a plane visualization for the entity.\n*/\n\n/*\n@scope\nPlaneGraphics is only inside [Entity](/components/Entity) components,\nand can not be used more than once for each entity.\n*/\n\nexport interface PlaneGraphicsCesiumProps {\n  plane?: Cesium.Property | any;\n  dimensions?: Cesium.Property | Cesium.Cartesian2;\n  show?: Cesium.Property | boolean;\n  fill?: Cesium.Property | boolean;\n  material?: Cesium.MaterialProperty | Cesium.Color | string;\n  outline?: Cesium.Property | boolean;\n  outlineColor?: Cesium.Property | Cesium.Color;\n  outlineWidth?: Cesium.Property | number;\n  shadows?: Cesium.Property | Cesium.ShadowMode;\n  distanceDisplayCondition?: Cesium.Property | Cesium.DistanceDisplayCondition;\n}\n\nexport interface PlaneGraphicsCesiumEvents {\n  onDefinitionChange?: () => void;\n}\n\nexport interface PlaneGraphicsProps extends PlaneGraphicsCesiumProps, PlaneGraphicsCesiumEvents {}\n\nexport interface PlaneGraphicsContext {\n  entity?: Cesium.Entity;\n}\n\nconst cesiumProps: Array<keyof PlaneGraphicsCesiumProps> = [\n  \"plane\",\n  \"dimensions\",\n  \"show\",\n  \"fill\",\n  \"material\",\n  \"outline\",\n  \"outlineColor\",\n  \"outlineWidth\",\n  \"shadows\",\n  \"distanceDisplayCondition\",\n];\n\n// Cesium.PlaneGraphics\nconst cesiumEventProps: EventkeyMap<any, keyof PlaneGraphicsCesiumEvents> = {\n  definitionChanged: \"onDefinitionChange\",\n};\n\nconst PlaneGraphics = createCesiumComponent<\n  any, // Cesium.PlaneGraphics\n  PlaneGraphicsProps,\n  PlaneGraphicsContext\n>({\n  name: \"PlaneGraphics\",\n  create(cprops) {\n    return new (Cesium as any).PlaneGraphics(cprops as any);\n  },\n  mount(element, context) {\n    if (context.entity) {\n      context.entity.plane = element;\n    }\n  },\n  unmount(element, context) {\n    if (context.entity) {\n      context.entity.plane = undefined as any;\n    }\n  },\n  cesiumProps,\n  cesiumEventProps,\n});\n\nexport default PlaneGraphics;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`PointGraphics` is a point visualization for the entity.\n*/\n\n/*\n@scope\nPointGraphics is only inside [Entity](/components/Entity) components,\nand can not be used more than once for each entity.\n*/\n\nexport interface PointGraphicsCesiumProps {\n  color?: Cesium.Property | Cesium.Color;\n  pixelSize?: Cesium.Property | number;\n  outlineColor?: Cesium.Property | Cesium.Color;\n  outlineWidth?: Cesium.Property | number;\n  show?: Cesium.Property | boolean;\n  scaleByDistance?: Cesium.Property | Cesium.NearFarScalar;\n  translucencyByDistance?: Cesium.Property | Cesium.NearFarScalar;\n  heightReference?: Cesium.Property | Cesium.HeightReference;\n  distanceDisplayCondition?: Cesium.Property | Cesium.DistanceDisplayCondition;\n  disableDepthTestDistance?: Cesium.Property | number;\n}\n\nexport interface PointGraphicsCesiumEvents {\n  onDefinitionChange?: () => void;\n}\n\nexport interface PointGraphicsProps extends PointGraphicsCesiumProps, PointGraphicsCesiumEvents {}\n\nexport interface PointGraphicsContext {\n  entity?: Cesium.Entity;\n}\n\nconst cesiumProps: Array<keyof PointGraphicsCesiumProps> = [\n  \"color\",\n  \"pixelSize\",\n  \"outlineColor\",\n  \"outlineWidth\",\n  \"show\",\n  \"scaleByDistance\",\n  \"translucencyByDistance\",\n  \"heightReference\",\n  \"distanceDisplayCondition\",\n  \"disableDepthTestDistance\",\n];\n\nconst cesiumEventProps: EventkeyMap<Cesium.PointGraphics, keyof PointGraphicsCesiumEvents> = {\n  definitionChanged: \"onDefinitionChange\",\n};\n\nconst PointGraphics = createCesiumComponent<\n  Cesium.PointGraphics,\n  PointGraphicsProps,\n  PointGraphicsContext\n>({\n  name: \"PointGraphics\",\n  create(cprops) {\n    return new Cesium.PointGraphics(cprops as any);\n  },\n  mount(element, context) {\n    if (context.entity) {\n      context.entity.point = element;\n    }\n  },\n  unmount(element, context) {\n    if (context.entity) {\n      context.entity.point = undefined as any;\n    }\n  },\n  cesiumProps,\n  cesiumEventProps,\n});\n\nexport default PointGraphics;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent from \"./core/CesiumComponent\";\nimport EventManager, { EventProps } from \"./core/EventManager\";\n\n/*\n@summary\n`PointPrimitive` is a point primitive in the `PointPrimitiveCollection`.\n\nPrimitive is a low layer API for geographical visualization.\n[Entity](/components/entity) is more recommended unless performance issues.\n*/\n\n/*\n@scope\nOnly inside [PointPrimitiveCollection](/components/PointPrimitiveCollection) component.\nA point object will be attached to the parent PointPrimitiveCollection.\n*/\n\nexport interface PointPrimitiveCesiumProps {\n  color?: Cesium.Color;\n  disableDepthTestDistance?: number;\n  distanceDisplayCondition?: Cesium.DistanceDisplayCondition;\n  id?: any;\n  outlineColor?: Cesium.Color;\n  outlineWidth?: number;\n  pixelSize?: number;\n  position?: Cesium.Cartesian3;\n  scaleByDistance?: Cesium.NearFarScalar;\n  show?: boolean;\n  translucencyByDistance?: Cesium.NearFarScalar;\n}\n\nexport interface PointPrimitiveProps\n  extends PointPrimitiveCesiumProps,\n    EventProps<Cesium.PointPrimitive> {}\n\nexport interface PointPrimitiveContext {\n  pointPrimitiveCollection?: Cesium.PointPrimitiveCollection;\n  __RESIUM_EVENT_MANAGER?: EventManager;\n}\n\nconst cesiumProps: Array<keyof PointPrimitiveCesiumProps> = [\n  \"color\",\n  \"disableDepthTestDistance\",\n  \"distanceDisplayCondition\",\n  \"id\",\n  \"outlineColor\",\n  \"outlineWidth\",\n  \"pixelSize\",\n  \"position\",\n  \"scaleByDistance\",\n  \"show\",\n  \"translucencyByDistance\",\n];\n\nconst PointPrimitive = createCesiumComponent<\n  Cesium.PointPrimitive,\n  PointPrimitiveProps,\n  PointPrimitiveContext\n>({\n  name: \"PointPrimitive\",\n  create() {\n    return new Cesium.PointPrimitive();\n  },\n  mount(element, context, props) {\n    if (context.__RESIUM_EVENT_MANAGER) {\n      context.__RESIUM_EVENT_MANAGER.setEvents(element, props);\n    }\n    if (context.pointPrimitiveCollection) {\n      context.pointPrimitiveCollection.add(element);\n    }\n  },\n  update(element, props, prevProps, context) {\n    if (context.__RESIUM_EVENT_MANAGER) {\n      context.__RESIUM_EVENT_MANAGER.setEvents(element, props);\n    }\n  },\n  unmount(element, context) {\n    if (context.__RESIUM_EVENT_MANAGER) {\n      context.__RESIUM_EVENT_MANAGER.clearEvents(element);\n    }\n    if (context.pointPrimitiveCollection && !context.pointPrimitiveCollection.isDestroyed()) {\n      context.pointPrimitiveCollection.remove(element);\n    }\n  },\n  cesiumProps,\n  setCesiumPropsAfterCreate: true,\n});\n\nexport default PointPrimitive;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent from \"./core/CesiumComponent\";\n\n/*\n@summary\n`PointPrimitiveCollection` is a collection of point primitives.\nIt can have some `PointPrimitive` components as children.\n\nPrimitive is a low layer API for geographical visualization.\n[Entity](/components/entity) is more recommended unless performance issues.\n*/\n\n/*\n@scope\nInside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) component.\nA PointPrimitiveCollection object will be attached to the PrimitiveCollection of the Viewer or CesiumWidget.\n*/\n\nexport interface PointPrimitiveCollectionCesiumProps {\n  blendOption?: Cesium.BlendOption;\n  debugShowBoundingVolume?: boolean;\n  modelMatrix?: Cesium.Matrix4;\n}\n\nexport interface PointPrimitiveCollectionProps extends PointPrimitiveCollectionCesiumProps {\n  children?: React.ReactNode;\n}\n\nexport interface PointPrimitiveCollectionContext {\n  primitiveCollection?: Cesium.PrimitiveCollection;\n}\n\nconst cesiumProps: Array<keyof PointPrimitiveCollectionCesiumProps> = [\n  \"blendOption\",\n  \"debugShowBoundingVolume\",\n  \"modelMatrix\",\n];\n\nconst PointPrimitiveCollection = createCesiumComponent<\n  Cesium.PointPrimitiveCollection,\n  PointPrimitiveCollectionProps,\n  PointPrimitiveCollectionContext\n>({\n  name: \"PointPrimitveCollection\",\n  create(cprops) {\n    return new Cesium.PointPrimitiveCollection(cprops);\n  },\n  mount(element, context) {\n    if (context.primitiveCollection) {\n      context.primitiveCollection.add(element);\n    }\n  },\n  unmount(element, context) {\n    if (context.primitiveCollection && !context.primitiveCollection.isDestroyed()) {\n      context.primitiveCollection.remove(element);\n    }\n    if (!element.isDestroyed()) {\n      element.destroy();\n    }\n  },\n  provide(element) {\n    return {\n      pointPrimitiveCollection: element,\n    };\n  },\n  cesiumProps,\n});\n\nexport default PointPrimitiveCollection;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`PolygonGraphics` is a polygon visualization for the entity.\n*/\n\n/*\n@scope\nPolygonGraphics is only inside [Entity](/components/Entity) components,\nand can not be used more than once for each entity.\n*/\n\nexport interface PolygonGraphicsCesiumProps {\n  hierarchy?: Cesium.Property | Cesium.PolygonHierarchy | Cesium.Cartesian3[];\n  height?: Cesium.Property | number;\n  heightReference?: Cesium.Property | Cesium.HeightReference;\n  extrudedHeight?: Cesium.Property | number;\n  extrudedHeightReference?: Cesium.Property | Cesium.HeightReference;\n  show?: Cesium.Property | boolean;\n  fill?: Cesium.Property | boolean;\n  material?: Cesium.MaterialProperty | Cesium.Color | string;\n  outline?: Cesium.Property | boolean;\n  outlineColor?: Cesium.Property | Cesium.Color;\n  outlineWidth?: Cesium.Property | number;\n  stRotation?: Cesium.Property | number;\n  granularity?: Cesium.Property | number;\n  perPositionHeight?: Cesium.Property | boolean;\n  closeTop?: boolean;\n  closeBottom?: boolean;\n  shadows?: Cesium.Property | Cesium.ShadowMode;\n  distanceDisplayCondition?: Cesium.Property | Cesium.DistanceDisplayCondition;\n  zIndex?: Cesium.Property | number;\n  // @type Cesium.Property | Cesium.ClassificationType\n  classificationType?: Cesium.Property | any;\n}\n\nexport interface PolygonGraphicsCesiumEvents {\n  onDefinitionChange?: () => void;\n}\n\nexport interface PolygonGraphicsProps\n  extends PolygonGraphicsCesiumProps,\n    PolygonGraphicsCesiumEvents {}\n\nexport interface PolygonGraphicsContext {\n  entity?: Cesium.Entity;\n}\n\nconst cesiumProps: Array<keyof PolygonGraphicsCesiumProps> = [\n  \"hierarchy\",\n  \"height\",\n  \"heightReference\",\n  \"extrudedHeight\",\n  \"extrudedHeightReference\",\n  \"show\",\n  \"fill\",\n  \"material\",\n  \"outline\",\n  \"outlineColor\",\n  \"outlineWidth\",\n  \"stRotation\",\n  \"granularity\",\n  \"perPositionHeight\",\n  \"closeTop\",\n  \"closeBottom\",\n  \"shadows\",\n  \"distanceDisplayCondition\",\n  \"zIndex\",\n  \"classificationType\",\n];\n\nconst cesiumEventProps: EventkeyMap<Cesium.PolygonGraphics, keyof PolygonGraphicsCesiumEvents> = {\n  definitionChanged: \"onDefinitionChange\",\n};\n\nconst PolygonGraphics = createCesiumComponent<\n  Cesium.PolygonGraphics,\n  PolygonGraphicsProps,\n  PolygonGraphicsContext\n>({\n  name: \"PolygonGraphics\",\n  create(cprops) {\n    const pg = new Cesium.PolygonGraphics(cprops as any);\n    if (cprops.classificationType) {\n      (pg as any).classificationType = cprops.classificationType;\n    }\n    return pg;\n  },\n  mount(element, context) {\n    if (context.entity) {\n      context.entity.polygon = element;\n    }\n  },\n  unmount(element, context) {\n    if (context.entity) {\n      context.entity.polygon = undefined as any;\n    }\n  },\n  cesiumProps,\n  cesiumEventProps,\n});\n\nexport default PolygonGraphics;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent from \"./core/CesiumComponent\";\nimport EventManager, { EventProps } from \"./core/EventManager\";\n\n/*\n@summary\n`Polyline` is a polyline primitive in the `PolylineCollection`.\n\nPrimitive is a low layer API for geographical visualization.\n[Entity](/components/entity) is more recommended unless performance issues.\n*/\n\n/*\n@scope\nOnly inside [PolylineCollection](/components/PolylineCollection) component.\nA polyline object will be attached to the parent PolylineCollection.\n*/\n\nexport interface PolylineCesiumProps {\n  distanceDisplayCondition?: Cesium.DistanceDisplayCondition;\n  id?: any;\n  loop?: boolean;\n  material?: Cesium.Material;\n  positions?: Cesium.Cartesian3[];\n  show?: boolean;\n  width?: number;\n}\n\nexport interface PolylineProps extends PolylineCesiumProps, EventProps<Cesium.Polyline> {}\n\nexport interface PolylineContext {\n  polylineCollection?: Cesium.PolylineCollection;\n  __RESIUM_EVENT_MANAGER?: EventManager;\n}\n\nconst cesiumProps: Array<keyof PolylineCesiumProps> = [\n  \"distanceDisplayCondition\",\n  \"id\",\n  \"loop\",\n  \"material\",\n  \"positions\",\n  \"show\",\n  \"width\",\n];\n\nconst Polyline = createCesiumComponent<Cesium.Polyline, PolylineProps, PolylineContext>({\n  name: \"Polyline\",\n  create(cprops, props, context) {\n    return new (Cesium.Polyline as any)(cprops, context.polylineCollection);\n  },\n  mount(element, context) {\n    if (context.polylineCollection) {\n      context.polylineCollection.add(element);\n    }\n  },\n  unmount(element, context) {\n    if (context.__RESIUM_EVENT_MANAGER) {\n      context.__RESIUM_EVENT_MANAGER.clearEvents(element);\n    }\n    if (context.polylineCollection && !context.polylineCollection.isDestroyed()) {\n      context.polylineCollection.remove(element);\n    }\n  },\n  update(element, props, prevProps, context) {\n    if (context.__RESIUM_EVENT_MANAGER) {\n      context.__RESIUM_EVENT_MANAGER.setEvents(element, props);\n    }\n  },\n  cesiumProps,\n});\n\nexport default Polyline;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent from \"./core/CesiumComponent\";\n\n/*\n@summary\n`PolylineCollection` is a collection of polyline primitives.\nIt can have some `Polyline` components as children.\n\nPrimitive is a low layer API for geographical visualization.\n[Entity](/components/entity) is more recommended unless performance issues.\n*/\n\n/*\n@scope\nInside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) component.\nA PolylineCollection object will be attached to the PrimitiveCollection of the Viewer or CesiumWidget.\n*/\n\nexport interface PolylineCollectionCesiumProps {\n  debugShowBoundingVolume?: boolean;\n  length?: number;\n  modelMatrix?: Cesium.Matrix4;\n}\n\nexport interface PolylineCollectionProps extends PolylineCollectionCesiumProps {\n  children?: React.ReactNode;\n}\n\nexport interface PolylineCollectionContext {\n  primitiveCollection?: Cesium.PrimitiveCollection;\n  scene: Cesium.Scene;\n}\n\nconst cesiumProps: Array<keyof PolylineCollectionCesiumProps> = [\n  \"debugShowBoundingVolume\",\n  \"length\",\n  \"modelMatrix\",\n];\n\nconst PolylineCollection = createCesiumComponent<\n  Cesium.PolylineCollection,\n  PolylineCollectionProps,\n  PolylineCollectionContext\n>({\n  name: \"PolylineCollection\",\n  create(cprops, props, context) {\n    return new Cesium.PolylineCollection({\n      modelMatrix: cprops.modelMatrix,\n      debugShowBoundingVolume: cprops.debugShowBoundingVolume,\n      length: cprops.length,\n      scene: context.scene,\n    } as any);\n  },\n  mount(element, context) {\n    if (context.primitiveCollection) {\n      context.primitiveCollection.add(element);\n    }\n  },\n  unmount(element, context) {\n    if (context.primitiveCollection && !context.primitiveCollection.isDestroyed()) {\n      context.primitiveCollection.remove(element);\n    }\n    if (!element.isDestroyed()) {\n      element.destroy();\n    }\n  },\n  provide(element) {\n    return {\n      polylineCollection: element,\n    };\n  },\n  cesiumProps,\n});\n\nexport default PolylineCollection;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`PolylineGraphics` is a polyline visualization for the entity.\n*/\n\n/*\n@scope\nPolylineGraphics is only inside [Entity](/components/Entity) components,\nand can not be used more than once for each entity.\n*/\n\nexport interface PolylineGraphicsCesiumProps {\n  positions?: Cesium.Property | Cesium.Cartesian3[];\n  followSurface?: Cesium.Property | boolean;\n  clampToGround?: Cesium.Property | boolean;\n  width?: Cesium.Property | number;\n  show?: Cesium.Property | boolean;\n  material?: Cesium.MaterialProperty | Cesium.Color | string;\n  depthFailMaterial?: Cesium.MaterialProperty | Cesium.Color | string;\n  granularity?: Cesium.Property | number;\n  shadows?: Cesium.Property | Cesium.ShadowMode;\n  distanceDisplayCondition?: Cesium.Property | Cesium.DistanceDisplayCondition;\n  zIndex?: Cesium.Property | number;\n}\n\nexport interface PolylineGraphicsCesiumEvents {\n  onDefinitionChange?: () => void;\n}\n\nexport interface PolylineGraphicsProps\n  extends PolylineGraphicsCesiumProps,\n    PolylineGraphicsCesiumEvents {}\n\nexport interface PolylineGraphicsContext {\n  entity?: Cesium.Entity;\n}\n\nconst cesiumProps: Array<keyof PolylineGraphicsCesiumProps> = [\n  \"positions\",\n  \"followSurface\",\n  \"clampToGround\",\n  \"width\",\n  \"show\",\n  \"material\",\n  \"depthFailMaterial\",\n  \"granularity\",\n  \"shadows\",\n  \"distanceDisplayCondition\",\n  \"zIndex\",\n];\n\nconst cesiumEventProps: EventkeyMap<Cesium.PolylineGraphics, keyof PolylineGraphicsCesiumEvents> = {\n  definitionChanged: \"onDefinitionChange\",\n};\n\nconst PolylineGraphics = createCesiumComponent<\n  Cesium.PolylineGraphics,\n  PolylineGraphicsProps,\n  PolylineGraphicsContext\n>({\n  name: \"PolylineGraphics\",\n  create(cprops) {\n    return new Cesium.PolylineGraphics(cprops as any);\n  },\n  mount(element, context) {\n    if (context.entity) {\n      context.entity.polyline = element;\n    }\n  },\n  unmount(element, context) {\n    if (context.entity) {\n      context.entity.polyline = undefined as any;\n    }\n  },\n  cesiumProps,\n  cesiumEventProps,\n});\n\nexport default PolylineGraphics;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`PolylineVolumeGraphics` is a polyline visualization with volume for the entity.\n*/\n\n/*\n@scope\nPolylineVolumeGraphics is only inside [Entity](/components/Entity) components,\nand can not be used more than once for each entity.\n*/\n\nexport interface PolylineVolumeGraphicsCesiumProps {\n  positions?: Cesium.Property | Cesium.Cartesian3[];\n  shape?: Cesium.Property | Cesium.Cartesian2[];\n  cornerType?: Cesium.Property | Cesium.CornerType;\n  show?: Cesium.Property | boolean;\n  fill?: Cesium.Property | boolean;\n  material?: Cesium.MaterialProperty | Cesium.Color | string;\n  outline?: Cesium.Property | boolean;\n  outlineColor?: Cesium.Property | Cesium.Color;\n  outlineWidth?: Cesium.Property | number;\n  granularity?: Cesium.Property | number;\n  shadows?: Cesium.Property | Cesium.ShadowMode;\n  distanceDisplayCondition?: Cesium.Property | Cesium.DistanceDisplayCondition;\n}\n\nexport interface PolylineVolumeGraphicsCesiumEvents {\n  onDefinitionChange?: () => void;\n}\n\nexport interface PolylineVolumeGraphicsProps\n  extends PolylineVolumeGraphicsCesiumProps,\n    PolylineVolumeGraphicsCesiumEvents {}\n\nexport interface PolylineVolumeGraphicsContext {\n  entity?: Cesium.Entity;\n}\n\nconst cesiumProps: Array<keyof PolylineVolumeGraphicsCesiumProps> = [\n  \"positions\",\n  \"shape\",\n  \"cornerType\",\n  \"show\",\n  \"fill\",\n  \"material\",\n  \"outline\",\n  \"outlineColor\",\n  \"outlineWidth\",\n  \"granularity\",\n  \"shadows\",\n  \"distanceDisplayCondition\",\n];\n\nconst cesiumEventProps: EventkeyMap<\n  Cesium.PolylineVolumeGraphics,\n  keyof PolylineVolumeGraphicsCesiumEvents\n> = {\n  definitionChanged: \"onDefinitionChange\",\n};\n\nconst PolylineVolumeGraphics = createCesiumComponent<\n  Cesium.PolylineVolumeGraphics,\n  PolylineVolumeGraphicsProps,\n  PolylineVolumeGraphicsContext\n>({\n  name: \"PolylineVolumeGraphics\",\n  create(cprops) {\n    return new Cesium.PolylineVolumeGraphics(cprops as any);\n  },\n  mount(element, context) {\n    if (context.entity) {\n      context.entity.polylineVolume = element;\n    }\n  },\n  unmount(element, context) {\n    if (context.entity) {\n      context.entity.polylineVolume = undefined as any;\n    }\n  },\n  cesiumProps,\n  cesiumEventProps,\n});\n\nexport default PolylineVolumeGraphics;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent from \"./CesiumComponent\";\n\nexport interface PostProcessStageCesiumProps {\n  enabled?: boolean;\n  selected?: any[];\n}\n\nexport interface PostProcessStageContext {\n  scene: Cesium.Scene;\n}\n\nexport interface PostProcessStage {\n  enabled: boolean;\n  uniforms: any;\n  isDestroyed(): boolean;\n  destroy(): void;\n}\n\nconst cesiumProps: Array<keyof PostProcessStageCesiumProps> = [\"enabled\", \"selected\"];\n\nexport const createPostProcessStage = <UniformProps, E extends PostProcessStage = any>(opts: {\n  name: string;\n  props: Array<keyof UniformProps>;\n  readonlyProps?: Array<keyof UniformProps>;\n  noMount?: boolean;\n  create(\n    props: Readonly<UniformProps & PostProcessStageCesiumProps>,\n    postProcessStages: any /* Cesium.PostProcessStageCollection */,\n  ): any;\n}) =>\n  createCesiumComponent<\n    E,\n    PostProcessStageCesiumProps & UniformProps & { stages?: any[] },\n    PostProcessStageContext\n  >({\n    name,\n    create(cprops, props, context) {\n      const ps = opts.create(cprops, (context.scene as any).postProcessStages);\n      if (typeof cprops.enabled === \"boolean\") {\n        ps.enabled = cprops.enabled;\n      }\n      if (cprops.selected) {\n        ps.selected = cprops.selected;\n      }\n      opts.props.forEach(k => {\n        if (\n          (!opts.readonlyProps || !opts.readonlyProps.includes(k)) &&\n          typeof props[k] !== \"undefined\"\n        ) {\n          ps.uniforms[k] = props[k];\n        }\n      });\n      return ps;\n    },\n    mount(element, context) {\n      if (!opts.noMount && context.scene && !context.scene.isDestroyed()) {\n        (context.scene as any).postProcessStages.add(element);\n      }\n    },\n    unmount(element, context) {\n      if (!opts.noMount) {\n        if (context.scene && !context.scene.isDestroyed()) {\n          (context.scene as any).postProcessStages.remove(element);\n        }\n        if (!element.isDestroyed()) {\n          element.destroy();\n        }\n      } else {\n        element.enabled = false;\n      }\n    },\n    update(element, props, prevProps) {\n      opts.props.forEach(k => {\n        if ((!opts.readonlyProps || !opts.readonlyProps.includes(k)) && props[k] !== prevProps[k]) {\n          element.uniforms[k] = props[k];\n        }\n      });\n    },\n    cesiumProps,\n    cesiumReadonlyProps: opts.readonlyProps,\n    defaultProps: {\n      enabled: true,\n    } as any,\n  });\n\nexport default createPostProcessStage;\n","import Cesium from \"cesium\";\n\nimport { createPostProcessStage } from \"./core/PostProcessStage\";\nimport createCesiumComponent from \"./core/CesiumComponent\";\n\n/*\n@summary\n`PostProcessStage` can add a post processing stage to the scene.\n\nBult-in PostProcessStage components are available with additional Cesium properties:\n\n| Component | Property | Type |\n|---|---|---|\n| BlackAndWhiteStage | gradations | number |\n| | delta | number |\n| | sigma | number |\n| | stepSize | number |\n| BrightnessStage | brightness | number |\n| LensFlareStage | dirtTexture | any |\n| | starTexture | any |\n| | intensity | number |\n| | distortion | number |\n| | ghostDispersal | number |\n| | haloWidth | number |\n| | earthRadius | number |\n| | dirtTexture | number |\n| | dirtTexture | number |\n| Fxaa | - | - |\n\nNote: `Fxaa` component can not be used multi time, as it refers to the single post process stage of the scene.\n\nThey can be imported and used normally:\n\n```jsx\nimport { LensFlareStage } from \"resium\";\n\n<Viewer>\n  <LensFlareStage intensity={5} />\n</Viewer>\n```\n*/\n\n/*\n@scope\nInside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) components.\n*/\n\nexport interface PostProcessStageCesiumProps {\n  enabled?: boolean;\n  selected?: any[];\n}\n\nexport interface PostProcessStageCesiumReadonlyProps {\n  fragmentShader: string;\n  uniforms?: any;\n  textureScale?: number;\n  forcePowerOfTwo?: boolean;\n  // @type Cesium.PostProcessStageSampleMode\n  sampleMode?: any;\n  pixelFormat?: Cesium.PixelFormat;\n  // @type Cesium.PixelDatatype\n  pixelDatatype?: any;\n  clearColor?: Cesium.Color;\n  scissorRectangle?: Cesium.BoundingRectangle;\n  name?: string;\n}\n\nexport interface PostProcessStageProps\n  extends PostProcessStageCesiumProps,\n    PostProcessStageCesiumReadonlyProps {}\n\nexport interface PostProcessStageContext {\n  scene: Cesium.Scene;\n}\n\nconst cesiumProps: Array<keyof PostProcessStageCesiumProps> = [\"enabled\", \"selected\"];\n\nconst cesiumReadonlyProps: Array<keyof PostProcessStageCesiumReadonlyProps> = [\n  \"clearColor\",\n  \"forcePowerOfTwo\",\n  \"fragmentShader\",\n  \"name\",\n  \"pixelDatatype\",\n  \"pixelFormat\",\n  \"sampleMode\",\n  \"scissorRectangle\",\n  \"textureScale\",\n  \"uniforms\",\n];\n\nexport const PostProcessStage = createCesiumComponent<\n  any /* PostProcessStage */,\n  PostProcessStageProps,\n  PostProcessStageContext\n>({\n  name: \"PostProcessStage\",\n  create(cprops, props, context) {\n    const ps = new (Cesium as any).PostProcessStage(cprops);\n    if (typeof cprops.enabled === \"boolean\") {\n      ps.enabled = cprops.enabled;\n    }\n    if (cprops.selected) {\n      ps.selected = cprops.selected;\n    }\n    return ps;\n  },\n  mount(element, context) {\n    if (context.scene && !context.scene.isDestroyed()) {\n      (context.scene as any).postProcessStages.add(element);\n    }\n  },\n  unmount(element, context) {\n    if (context.scene && !context.scene.isDestroyed()) {\n      (context.scene as any).postProcessStages.remove(element);\n    }\n    if (!element.isDestroyed()) {\n      element.destroy();\n    }\n  },\n  cesiumProps,\n  cesiumReadonlyProps,\n});\n\nexport const BlackAndWhiteStage = createPostProcessStage<{\n  gradations?: number;\n}>({\n  name: \"BlackAndWhiteStage\",\n  props: [\"gradations\"],\n  create() {\n    return (Cesium as any).PostProcessStageLibrary.createBlackAndWhiteStage();\n  },\n});\n\nexport const BrightnessStage = createPostProcessStage<{\n  brightness?: number;\n}>({\n  name: \"BrightnessStage\",\n  props: [\"brightness\"],\n  create() {\n    return (Cesium as any).PostProcessStageLibrary.createBrightnessStage();\n  },\n});\n\nexport const LensFlareStage = createPostProcessStage<{\n  dirtTexture?: any;\n  starTexture?: any;\n  intensity?: number;\n  distortion?: number;\n  ghostDispersal?: number;\n  haloWidth?: number;\n  earthRadius?: number;\n}>({\n  name: \"LensFlareStage\",\n  props: [\n    \"dirtTexture\",\n    \"starTexture\",\n    \"intensity\",\n    \"distortion\",\n    \"ghostDispersal\",\n    \"haloWidth\",\n    \"earthRadius\",\n  ],\n  create() {\n    return (Cesium as any).PostProcessStageLibrary.createLensFlareStage();\n  },\n});\n\nexport const NightVisionStage = createPostProcessStage<{}>({\n  name: \"NightVisionStage\",\n  props: [],\n  create(props) {\n    return (Cesium as any).PostProcessStageLibrary.createNightVisionStage();\n  },\n});\n\nexport const Fxaa = createPostProcessStage<{}>({\n  name: \"Fxaa\",\n  create(props, collection) {\n    return collection.fxaa;\n  },\n  props: [],\n});\n\nexport default PostProcessStage;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent from \"./core/CesiumComponent\";\nimport { createPostProcessStage } from \"./core/PostProcessStage\";\n\n/*\n@summary\n`PostProcessStagComposite` can add a post processing stages to the scene.\n\nBult-in PostProcessStageComposite components are available with additional Cesium properties:\n\n| Component | Property | Type |\n|---|---|---|\n| AmbientOcclusion | intensity | number |\n| | bias | number |\n| | lengthCap | number |\n| | stepSize | number |\n| | frustumLength | number |\n| | ambientOcclusionOnly | boolean |\n| | delta | number |\n| | sigma | number |\n| Bloom | contrast | number |\n| | brightness | number |\n| | glowOnly | boolean |\n| | delta | number |\n| | sigma | number |\n| | stepSize | number |\n| DepthOfFieldStage | focalDistance | number |\n| | delta | number |\n| | sigma | number |\n| | stepSize | number |\n| EdgeDetectionStage | color | [Cesium.Color](https://cesiumjs.org/Cesium/Build/Documentation/Color.html) |\n| | length | number ||\n| NightVisionStage | - | - |\n| SilhouetteStage | color | [Cesium.Color](https://cesiumjs.org/Cesium/Build/Documentation/Color.html) |\n| | length | number |\n\nNote: `AmbientOcclusion` and `Bloom` components can not be used multi time for each components, as it refers to the single post process stage of the scene.\n\nThey can be imported and used normally:\n\n```jsx\nimport { AmbientOcclusion, Bloom } from \"resium\";\n\n<Viewer>\n  <AmbientOcclusion />\n  <Bloom />\n</Viewer>\n```\n*/\n\n/*\n@scope\nInside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) components.\n*/\n\nexport interface PostProcessStageCompositeCesiumProps {\n  enabled?: boolean;\n  selected?: any[];\n}\n\nexport interface PostProcessStageCompositeCesiumReadonlyProps {\n  // @type Cesium.PostProcessStage\n  stages: any[];\n  inputPreviousStageTexture?: boolean;\n  name?: string;\n  uniforms?: any;\n}\n\nexport interface PostProcessStageCompositeProps\n  extends PostProcessStageCompositeCesiumProps,\n    PostProcessStageCompositeCesiumReadonlyProps {}\n\nexport interface PostProcessStageCompositeContext {\n  scene?: Cesium.Scene;\n}\n\nconst cesiumProps: Array<keyof PostProcessStageCompositeCesiumProps> = [\"enabled\", \"selected\"];\n\nconst cesiumReadonlyProps: Array<keyof PostProcessStageCompositeCesiumReadonlyProps> = [\n  \"inputPreviousStageTexture\",\n  \"name\",\n  \"stages\",\n  \"uniforms\",\n];\n\nexport const PostProcessStageComposite = createCesiumComponent<\n  any /* Cesium.PostProcessStageComposite */,\n  PostProcessStageCompositeProps,\n  PostProcessStageCompositeContext\n>({\n  name: \"PostProcessStageComposite\",\n  create(cprops) {\n    const ps = new (Cesium as any).PostProcessStageComposite(cprops);\n    if (typeof cprops.enabled === \"boolean\") {\n      ps.enabled = cprops.enabled;\n    }\n    if (cprops.selected) {\n      ps.selected = cprops.selected;\n    }\n    return ps;\n  },\n  mount(element, context) {\n    if (context.scene && !context.scene.isDestroyed()) {\n      (context.scene as any).postProcessStages.add(element);\n    }\n  },\n  unmount(element, context) {\n    if (context.scene && !context.scene.isDestroyed()) {\n      (context.scene as any).postProcessStages.remove(element);\n    }\n    if (!element.isDestroyed()) {\n      element.destroy();\n    }\n  },\n  cesiumProps,\n  cesiumReadonlyProps,\n});\n\nexport const AmbientOcclusion = createPostProcessStage<{\n  intensity?: number;\n  bias?: number;\n  lengthCap?: number;\n  stepSize?: number;\n  frustumLength?: number;\n  ambientOcclusionOnly?: boolean;\n  delta?: number;\n  sigma?: number;\n}>({\n  name: \"AmbientOcclusion\",\n  create(props, collection) {\n    return collection.ambientOcclusion;\n  },\n  props: [\n    \"ambientOcclusionOnly\",\n    \"bias\",\n    \"delta\",\n    \"frustumLength\",\n    \"intensity\",\n    \"lengthCap\",\n    \"sigma\",\n    \"stepSize\",\n  ],\n  noMount: true,\n});\n\nexport const Bloom = createPostProcessStage<{\n  contrast?: number;\n  brightness?: number;\n  glowOnly?: boolean;\n  delta?: number;\n  sigma?: number;\n  stepSize?: number;\n}>({\n  name: \"Bloom\",\n  create(props, collection) {\n    return collection.bloom;\n  },\n  props: [\"brightness\", \"contrast\", \"delta\", \"glowOnly\", \"sigma\", \"stepSize\"],\n  noMount: true,\n});\n\nexport const BlurStage = createPostProcessStage<{\n  delta?: number;\n  sigma?: number;\n  stepSize?: number;\n}>({\n  name: \"BlurStage\",\n  props: [\"delta\", \"sigma\", \"stepSize\"],\n  create() {\n    return (Cesium as any).PostProcessStageLibrary.createBlurStage();\n  },\n});\n\nexport const DepthOfFieldStage = createPostProcessStage<{\n  focalDistance?: number;\n  delta?: number;\n  sigma?: number;\n  stepSize?: number;\n}>({\n  name: \"DepthOfFieldStage\",\n  props: [\"delta\", \"focalDistance\", \"sigma\", \"stepSize\"],\n  create() {\n    return (Cesium as any).PostProcessStageLibrary.createDepthOfFieldStage();\n  },\n});\n\nexport const EdgeDetectionStage = createPostProcessStage<{\n  color?: Cesium.Color;\n  length?: number;\n}>({\n  name: \"EdgeDetectionStage\",\n  props: [\"color\", \"length\"],\n  create() {\n    return (Cesium as any).PostProcessStageLibrary.createEdgeDetectionStage();\n  },\n});\n\nexport const SilhouetteStage = createPostProcessStage<{\n  color?: Cesium.Color;\n  length?: number;\n}>({\n  name: \"SilhouetteStage\",\n  props: [\"color\", \"length\"],\n  create(props) {\n    return (Cesium as any).PostProcessStageLibrary.createSilhouetteStage();\n  },\n});\n\nexport default PostProcessStageComposite;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent from \"./core/CesiumComponent\";\nimport EventManager, { EventProps } from \"./core/EventManager\";\n\n/*\n@summary\n`Primitive` is a basic primitive in the `PrimitiveCollection`.\n\nPrimitive is a low layer API for geographical visualization.\n[Entity](/components/entity) is more recommended unless performance issues.\n*/\n\n/*\n@scope\nInside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) component.\nA primitive object will be attached to the PrimitiveCollection of the Viewer or CesiumWidget.\n*/\n\nexport interface PrimitiveCesiumProps {\n  appearance?: Cesium.Appearance;\n  cull?: boolean;\n  debugShowBoundingVolume?: boolean;\n  depthFailAppearance?: Cesium.Appearance;\n  modelMatrix?: Cesium.Matrix4;\n  shadows?: Cesium.ShadowMode;\n  show?: boolean;\n}\n\nexport interface PrimitiveCesiumReadonlyProps {\n  allowPicking?: boolean;\n  asynchronous?: boolean;\n  compressVertices?: boolean;\n  geometryInstances?: Cesium.GeometryInstance[] | Cesium.GeometryInstance;\n  interleave?: boolean;\n  releaseGeometryInstances?: boolean;\n  vertexCacheOptimize?: boolean;\n}\n\nexport interface PrimitiveProps\n  extends PrimitiveCesiumProps,\n    PrimitiveCesiumReadonlyProps,\n    EventProps<Cesium.Primitive> {\n  // Calls when [Primitive#readyPromise](https://cesiumjs.org/Cesium/Build/Documentation/Primitive.html#readyPromise) is fullfilled\n  onReady?: (primitive: Cesium.Primitive) => void;\n}\n\nexport interface PrimitiveContext {\n  primitiveCollection?: Cesium.PrimitiveCollection;\n  __RESIUM_EVENT_MANAGER?: EventManager;\n}\n\nconst cesiumProps: Array<keyof PrimitiveCesiumProps> = [\n  \"appearance\",\n  \"cull\",\n  \"debugShowBoundingVolume\",\n  \"depthFailAppearance\",\n  \"modelMatrix\",\n  \"shadows\",\n  \"show\",\n];\n\nconst cesiumReadonlyProps: Array<keyof PrimitiveCesiumReadonlyProps> = [\n  \"allowPicking\",\n  \"asynchronous\",\n  \"compressVertices\",\n  \"geometryInstances\",\n  \"interleave\",\n  \"releaseGeometryInstances\",\n  \"vertexCacheOptimize\",\n];\n\nconst Primitive = createCesiumComponent<Cesium.Primitive, PrimitiveProps, PrimitiveContext>({\n  name: \"Primitive\",\n  create(cprops, props) {\n    const primitive = new Cesium.Primitive(cprops);\n    if (props.onReady) {\n      primitive.readyPromise.then(props.onReady);\n    }\n    return primitive;\n  },\n  mount(element, context, props) {\n    if (context.__RESIUM_EVENT_MANAGER) {\n      context.__RESIUM_EVENT_MANAGER.setEvents(element, props);\n    }\n    if (context.primitiveCollection) {\n      context.primitiveCollection.add(element);\n    }\n  },\n  update(element, props, prevProps, context) {\n    if (context.__RESIUM_EVENT_MANAGER) {\n      context.__RESIUM_EVENT_MANAGER.setEvents(element, props);\n    }\n  },\n  unmount(element, context) {\n    if (context.__RESIUM_EVENT_MANAGER) {\n      context.__RESIUM_EVENT_MANAGER.clearEvents(element);\n    }\n    if (context.primitiveCollection && !context.primitiveCollection.isDestroyed()) {\n      context.primitiveCollection.remove(element);\n    }\n    if (!element.isDestroyed()) {\n      element.destroy();\n    }\n  },\n  cesiumProps,\n  cesiumReadonlyProps,\n});\n\nexport default Primitive;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`RectangleGraphics` is a rectangle visualization for the entity.\n*/\n\n/*\n@scope\nRectangleGraphics is only inside [Entity](/components/Entity) components,\nand can not be used more than once for each entity.\n*/\n\nexport interface RectangleGraphicsCesiumProps {\n  coordinates?: Cesium.Property | Cesium.Rectangle;\n  height?: Cesium.Property | number;\n  heightReference?: Cesium.Property | Cesium.HeightReference;\n  extrudedHeight?: Cesium.Property | number;\n  extrudedHeightReference?: Cesium.Property | Cesium.HeightReference;\n  show?: Cesium.Property | boolean;\n  fill?: Cesium.Property | boolean;\n  material?: Cesium.MaterialProperty | Cesium.Color | string;\n  outline?: Cesium.Property | boolean;\n  outlineColor?: Cesium.Property | Cesium.Color;\n  outlineWidth?: Cesium.Property | number;\n  rotation?: Cesium.Property | number;\n  stRotation?: Cesium.Property | number;\n  granularity?: Cesium.Property | number;\n  shadows?: Cesium.Property | Cesium.ShadowMode;\n  distanceDisplayCondition?: Cesium.Property | Cesium.DistanceDisplayCondition;\n  zIndex?: Cesium.Property | number;\n  // @type Cesium.Property | Cesium.ClassificationType\n  classificationType?: Cesium.Property | any;\n}\n\nexport interface RectangleGraphicsCesiumEvents {\n  onDefinitionChange?: () => void;\n}\n\nexport interface RectangleGraphicsProps\n  extends RectangleGraphicsCesiumProps,\n    RectangleGraphicsCesiumEvents {}\n\nexport interface RectangleGraphicsContext {\n  entity?: Cesium.Entity;\n}\n\nconst cesiumProps: Array<keyof RectangleGraphicsCesiumProps> = [\n  \"coordinates\",\n  \"height\",\n  \"heightReference\",\n  \"extrudedHeight\",\n  \"extrudedHeightReference\",\n  \"show\",\n  \"fill\",\n  \"material\",\n  \"outline\",\n  \"outlineColor\",\n  \"outlineWidth\",\n  \"rotation\",\n  \"stRotation\",\n  \"granularity\",\n  \"shadows\",\n  \"distanceDisplayCondition\",\n  \"zIndex\",\n];\n\nconst cesiumEventProps: EventkeyMap<\n  Cesium.RectangleGraphics,\n  keyof RectangleGraphicsCesiumEvents\n> = {\n  definitionChanged: \"onDefinitionChange\",\n};\n\nconst RectangleGraphics = createCesiumComponent<\n  Cesium.RectangleGraphics,\n  RectangleGraphicsProps,\n  RectangleGraphicsContext\n>({\n  name: \"RectangleGraphics\",\n  create(cprops) {\n    return new Cesium.RectangleGraphics(cprops as any);\n  },\n  mount(element, context) {\n    if (context.entity) {\n      context.entity.rectangle = element;\n    }\n  },\n  unmount(element, context) {\n    if (context.entity) {\n      context.entity.rectangle = undefined as any;\n    }\n  },\n  cesiumProps,\n  cesiumEventProps,\n});\n\nexport default RectangleGraphics;\n","import Cesium, { Scene as CesiumScene, SceneMode } from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`Scene` can operate the scene of the Viewer or CesiumWidget.\nAll properties are applied to single scene of them.\n*/\n\n/*\n@scope\nScene is available inside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) components.\nIt can not be used more than once for each Viewer or CesiumWidget.\n*/\n\nexport interface SceneCesiumProps {\n  backgroundColor?: Cesium.Color;\n  completeMorphOnUserInput?: boolean;\n  debugCommandFilter?: (command: any) => boolean;\n  debugShowCommands?: boolean;\n  debugShowDepthFrustum?: number;\n  debugShowFramesPerSecond?: boolean;\n  debugShowFrustumPlanes?: boolean;\n  debugShowFrustums?: boolean;\n  debugShowGlobeDepth?: boolean;\n  eyeSeparation?: number;\n  farToNearRatio?: number;\n  focalLength?: number;\n  fog?: Cesium.Fog;\n  fxaa?: boolean;\n  globe?: Cesium.Globe;\n  highDynamicRange?: boolean;\n  imagerySplitPosition?: number;\n  invertClassification?: boolean;\n  invertClassificationColor?: Cesium.Color;\n  logarithmicDepthBuffer?: number;\n  logarithmicDepthFarToNearRatio?: number;\n  mapMode2D?: boolean;\n  maximumRenderTimeChange?: number;\n  minimumDisableDepthTestDistance?: number;\n  mode?: Cesium.SceneMode;\n  moon?: Cesium.Moon;\n  morphTime?: number;\n  nearToFarDistance2D?: number;\n  pickTranslucentDepth?: boolean;\n  requestRenderMode?: boolean;\n  rethrowRenderErrors?: boolean;\n  shadowMap?: Cesium.ShadowMap;\n  skyAtmosphere?: Cesium.SkyAtmosphere;\n  skyBox?: Cesium.SkyBox;\n  specularEnvironmentMaps?: string;\n  sphericalHarmonicCoefficients?: Cesium.Cartesian3[];\n  sun?: Cesium.Sun;\n  sunBloom?: boolean;\n  terrainExaggeration?: number;\n  terrainProvider?: Cesium.TerrainProvider;\n  useDepthPicking?: boolean;\n  useWebVR?: boolean;\n}\n\nexport interface SceneCesiumEvents {\n  onMorphComplete?: () => void;\n  onMorphStart?: () => void;\n  onPostRender?: () => void;\n  onPreRender?: () => void;\n  onPreUpdate?: () => void;\n  onRenderError?: () => void;\n  onTerrainProviderChange?: () => void;\n}\n\nexport interface SceneProps extends SceneCesiumProps, SceneCesiumEvents {\n  children?: React.ReactNode;\n  // If this prop is set and when `mode` prop is changed, the scene morphs with this duration (seconds).\n  morphDuration?: number;\n}\n\nconst cesiumProps: Array<keyof SceneCesiumProps> = [\n  \"backgroundColor\",\n  \"completeMorphOnUserInput\",\n  \"debugCommandFilter\",\n  \"debugShowCommands\",\n  \"debugShowDepthFrustum\",\n  \"debugShowFramesPerSecond\",\n  \"debugShowFrustumPlanes\",\n  \"debugShowFrustums\",\n  \"debugShowGlobeDepth\",\n  \"eyeSeparation\",\n  \"farToNearRatio\",\n  \"focalLength\",\n  \"fog\",\n  \"fxaa\",\n  \"globe\",\n  \"highDynamicRange\",\n  \"imagerySplitPosition\",\n  \"invertClassification\",\n  \"invertClassificationColor\",\n  \"logarithmicDepthBuffer\",\n  \"logarithmicDepthFarToNearRatio\",\n  \"mapMode2D\",\n  \"maximumRenderTimeChange\",\n  \"minimumDisableDepthTestDistance\",\n  // \"mode\", // enable morph with animation\n  \"moon\",\n  \"morphTime\",\n  \"nearToFarDistance2D\",\n  \"pickTranslucentDepth\",\n  \"requestRenderMode\",\n  \"rethrowRenderErrors\",\n  \"shadowMap\",\n  \"skyAtmosphere\",\n  \"skyBox\",\n  \"specularEnvironmentMaps\",\n  \"sphericalHarmonicCoefficients\",\n  \"sun\",\n  \"sunBloom\",\n  \"terrainExaggeration\",\n  \"terrainProvider\",\n  \"useDepthPicking\",\n  \"useWebVR\",\n];\n\nconst cesiumEventProps: EventkeyMap<CesiumScene, keyof SceneCesiumEvents> = {\n  morphComplete: \"onMorphComplete\",\n  morphStart: \"onMorphStart\",\n  postRender: \"onPostRender\",\n  preRender: \"onPreRender\",\n  preUpdate: \"onPreUpdate\",\n  renderError: \"onRenderError\",\n  terrainProviderChanged: \"onTerrainProviderChange\",\n};\n\nexport interface SceneContext {\n  scene: CesiumScene;\n}\n\nconst morph = (scene: CesiumScene, mode: SceneMode, morphTime?: number) => {\n  switch (mode) {\n    case SceneMode.SCENE2D:\n      scene.morphTo2D(morphTime);\n      break;\n\n    case SceneMode.COLUMBUS_VIEW:\n      scene.morphToColumbusView(morphTime);\n      break;\n\n    case SceneMode.SCENE3D:\n      scene.morphTo3D(morphTime);\n      break;\n  }\n};\n\nconst Scene = createCesiumComponent<CesiumScene, SceneProps, SceneContext>({\n  name: \"Scene\",\n  create(cprops, props, context) {\n    const scene = context.scene;\n    if (props.mode) {\n      morph(scene, props.mode, props.morphDuration);\n    }\n    return scene;\n  },\n  update(scene, props, prevProps) {\n    if (props.mode !== prevProps.mode && props.mode) {\n      morph(scene, props.mode, props.morphDuration);\n    }\n  },\n  cesiumProps,\n  cesiumEventProps,\n  setCesiumPropsAfterCreate: true,\n});\n\nexport default Scene;\n","import createCesiumComponent from \"./core/CesiumComponent\";\n\n/*\n@summary\n`ScreenSpaceCameraController` can change how to operate the camera of the scene.\nAll properties are applied to single ScreenSpaceCameraController in the scene.\n*/\n\n/*\n@scope\nScreenSpaceCameraController is available inside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) components.\nIt can not be used more than once for each Viewer or CesiumWidget.\n*/\n\nexport interface ScreenSpaceCameraControllerCesiumProps {\n  bounceAnimationTime?: number;\n  enableCollisionDetection?: boolean;\n  enableInputs?: boolean;\n  enableLook?: boolean;\n  enableRotate?: boolean;\n  enableTilt?: boolean;\n  enableTranslate?: boolean;\n  enableZoom?: boolean;\n  inertiaSpin?: number;\n  inertiaTranslate?: number;\n  inertiaZoom?: number;\n  lookEventTypes?:\n    | Cesium.CameraEventType\n    | Cesium.CameraEventType[]\n    | { eventType: Cesium.CameraEventType; modifier: Cesium.KeyboardEventModifier }\n    | Array<{ eventType: Cesium.CameraEventType; modifier: Cesium.KeyboardEventModifier }>;\n  maximumMovementRatio?: number;\n  maximumZoomDistance?: number;\n  minimumCollisionTerrainHeight?: number;\n  minimumPickingTerrainHeight?: number;\n  minimumTrackBallHeight?: number;\n  minimumZoomDistance?: number;\n  rotateEventTypes?:\n    | Cesium.CameraEventType\n    | Cesium.CameraEventType[]\n    | { eventType: Cesium.CameraEventType; modifier: Cesium.KeyboardEventModifier }\n    | Array<{ eventType: Cesium.CameraEventType; modifier: Cesium.KeyboardEventModifier }>;\n  tiltEventTypes?:\n    | Cesium.CameraEventType\n    | Cesium.CameraEventType[]\n    | { eventType: Cesium.CameraEventType; modifier: Cesium.KeyboardEventModifier }\n    | Array<{ eventType: Cesium.CameraEventType; modifier: Cesium.KeyboardEventModifier }>;\n  translateEventTypes?:\n    | Cesium.CameraEventType\n    | Cesium.CameraEventType[]\n    | { eventType: Cesium.CameraEventType; modifier: Cesium.KeyboardEventModifier }\n    | Array<{ eventType: Cesium.CameraEventType; modifier: Cesium.KeyboardEventModifier }>;\n  zoomEventTypes?:\n    | Cesium.CameraEventType\n    | Cesium.CameraEventType[]\n    | { eventType: Cesium.CameraEventType; modifier: Cesium.KeyboardEventModifier }\n    | Array<{ eventType: Cesium.CameraEventType; modifier: Cesium.KeyboardEventModifier }>;\n}\n\nexport interface ScreenSpaceCameraControllerContext {\n  scene: Cesium.Scene;\n}\n\nconst cesiumProps: Array<keyof ScreenSpaceCameraControllerCesiumProps> = [\n  \"bounceAnimationTime\",\n  \"enableCollisionDetection\",\n  \"enableInputs\",\n  \"enableLook\",\n  \"enableRotate\",\n  \"enableTilt\",\n  \"enableTranslate\",\n  \"enableZoom\",\n  \"inertiaSpin\",\n  \"inertiaTranslate\",\n  \"inertiaZoom\",\n  \"lookEventTypes\",\n  \"maximumMovementRatio\",\n  \"maximumZoomDistance\",\n  \"minimumCollisionTerrainHeight\",\n  \"minimumPickingTerrainHeight\",\n  \"minimumTrackBallHeight\",\n  \"minimumZoomDistance\",\n  \"rotateEventTypes\",\n  \"tiltEventTypes\",\n  \"translateEventTypes\",\n  \"zoomEventTypes\",\n];\n\nconst ScreenSpaceCameraController = createCesiumComponent<\n  Cesium.ScreenSpaceCameraController,\n  ScreenSpaceCameraControllerCesiumProps,\n  ScreenSpaceCameraControllerContext\n>({\n  name: \"ScreenSpaceCameraController\",\n  create(cprops, props, context) {\n    return context.scene.screenSpaceCameraController;\n  },\n  cesiumProps,\n  setCesiumPropsAfterCreate: true,\n});\n\nexport default ScreenSpaceCameraController;\n","import React from \"react\";\nimport Cesium from \"cesium\";\n\nimport { withCesium } from \"./core/context\";\n\n// @noCesiumElement\n\n/*\n@summary\n`ScreenSpaceEvent` is an event callback for mouse or touch interactions.\n\nSee also: [ScreenSpaceEventHandler#setInputAction](https://cesiumjs.org/Cesium/Build/Documentation/ScreenSpaceEventHandler.html?classFilter=screenspa#setInputAction)\n*/\n\n/*\n@scope\nOnly inside [ScreenSpaceEventHandler](/components/ScreenSpaceEventHandler).\n*/\n\nexport interface ScreenSpaceEventProps {\n  // If empty, the event will be removed even if there is the default event.\n  action?: (e: { position: Cesium.Cartesian2 }) => void;\n  // @type Cesium.KeyboardEventModifier\n  modifier?: number;\n  // @type Cesium.ScreenSpaceEventType\n  type: number;\n}\n\ninterface ScreenSpaceEventContext {\n  screenSpaceEventHandler?: Cesium.ScreenSpaceEventHandler;\n}\n\nclass ScreenSpaceEvent extends React.PureComponent<\n  ScreenSpaceEventProps & { cesium: ScreenSpaceEventContext }\n> {\n  public componentDidMount() {\n    this.setEvent();\n  }\n\n  public componentDidUpdate(prevProps: ScreenSpaceEventProps) {\n    if (\n      prevProps.type !== this.props.type ||\n      prevProps.modifier !== this.props.modifier ||\n      prevProps.action !== this.props.action\n    ) {\n      const { screenSpaceEventHandler } = this.props.cesium;\n      if (screenSpaceEventHandler) {\n        screenSpaceEventHandler.removeInputAction(prevProps.type, prevProps.modifier);\n      }\n      this.setEvent();\n    }\n  }\n\n  public componentWillUnmount() {\n    const {\n      action,\n      cesium: { screenSpaceEventHandler },\n      modifier,\n      type,\n    } = this.props;\n    if (screenSpaceEventHandler && !screenSpaceEventHandler.isDestroyed() && action) {\n      screenSpaceEventHandler.removeInputAction(type, modifier);\n    }\n  }\n\n  public render() {\n    return null;\n  }\n\n  private setEvent() {\n    const {\n      action,\n      cesium: { screenSpaceEventHandler },\n      modifier,\n      type,\n    } = this.props;\n    if (!screenSpaceEventHandler) {\n      return;\n    }\n    if (action) {\n      screenSpaceEventHandler.setInputAction(action as () => void, type, modifier);\n    } else {\n      // just remove default events\n      screenSpaceEventHandler.removeInputAction(type, modifier);\n    }\n  }\n}\n\nexport default withCesium<ScreenSpaceEventProps, ScreenSpaceEventContext>(ScreenSpaceEvent);\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent from \"./core/CesiumComponent\";\n\n/*\n@summary\n`ScreenSpaceEventHandler` can change event callbacks for mouse or touch interactions on the Viewer or CesiumWidget.\n`ScreenSpaceEvent` components can be its children.\n*/\n\n/*\n@scope\nScreenSpaceEventHandler is available inside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) components.\nScreenSpaceEventHandler components with useDefault prop can not be used more than once for each Viewer or CesiumWidget.\n*/\n\nexport interface ScreenSpaceEventHandlerProps {\n  // If true, use the default ScreenSpaceEventHandler of the CesiumWidget instead of creating a new ScreenSpaceEventHandler object. This property cannot be changed after mounting.\n  useDefault?: boolean;\n  children?: React.ReactNode;\n}\n\nexport interface ScreenSpaceEventHandlerContext {\n  scene: Cesium.Scene;\n  cesiumWidget: Cesium.CesiumWidget;\n}\n\nconst ScreenSpaceEventHandler = createCesiumComponent<\n  Cesium.ScreenSpaceEventHandler,\n  ScreenSpaceEventHandlerProps,\n  ScreenSpaceEventHandlerContext\n>({\n  name: \"ScreenSpaceEventHandler\",\n  create(cprops, props, context) {\n    return props.useDefault\n      ? context.cesiumWidget.screenSpaceEventHandler\n      : new Cesium.ScreenSpaceEventHandler(context.scene.canvas as HTMLCanvasElement);\n  },\n  unmount(element) {\n    if (!element.isDestroyed()) {\n      element.destroy();\n    }\n  },\n  provide(element) {\n    return {\n      screenSpaceEventHandler: element,\n    };\n  },\n});\n\nexport default ScreenSpaceEventHandler;\n","import Cesium from \"cesium\";\nimport createCesiumComponent from \"./core/CesiumComponent\";\n\n/*\n@summary\n`Sun` can operate the sun in the scene.\nAll properties are applied to single sun in the scene.\n*/\n\n/*\n@scope\nSun is available inside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) components.\nIt can not be used more than once for each Viewer or CesiumWidget.\n*/\n\nexport interface SunCesiumProps {\n  glowFactor?: number;\n  show?: boolean;\n}\n\n/* tslint:disable-next-line no-empty-interface */\nexport interface SunProps extends SunCesiumProps {}\n\nexport interface SunContext {\n  scene?: Cesium.Scene;\n}\n\nconst cesiumProps: Array<keyof SunCesiumProps> = [\"glowFactor\", \"show\"];\n\nconst Sun = createCesiumComponent<Cesium.Sun, SunProps, SunContext>({\n  name: \"sun\",\n  create() {\n    return new Cesium.Sun();\n  },\n  mount(element, context) {\n    if (context.scene) {\n      context.scene.sun = element;\n    }\n  },\n  unmount(element, context) {\n    if (context.scene && !context.scene.isDestroyed()) {\n      context.scene.sun = new Cesium.Sun();\n    }\n    // if (!element.isDestroyed()) {\n    //   element.destroy();\n    // }\n  },\n  cesiumProps,\n  setCesiumPropsAfterCreate: true,\n});\n\nexport default Sun;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`TimeDynamicPointCloud` is a point cloud with dynamic changes with time.\n*/\n\n/*\n@scope\nInside [Viewer](/components/Viewer) or [CesiumWidget](/components/CesiumWidget) component.\nA TimeDynamicPointCloud object will be attached to the PrimitiveCollection of the Viewer or CesiumWidget.\n*/\n\nexport interface TimeDynamicPointCloudCesiumProps {\n  clock?: Cesium.Clock;\n  intervals: Cesium.TimeIntervalCollection;\n  show?: boolean;\n  modelMatrix?: Cesium.Matrix4;\n  shadows?: Cesium.ShadowMode;\n  maximumMemoryUsage?: number;\n  style?: any /* Cesium.Cesium3DTileStyle */;\n  clippingPlanes?: any /* Cesium.ClippingPlaneCollection */;\n}\n\nexport interface TimeDynamicPointCloudCesiumReadonlyProps {\n  shading?: {\n    attenuation?: boolean;\n    geometricErrorScale?: number;\n    maximumAttenuation?: number;\n    baseResolution?: number;\n    eyeDomeLighting?: boolean;\n    eyeDomeLightingStrength?: number;\n    eyeDomeLightingRadius?: number;\n  };\n}\n\nexport interface TimeDynamicPointCloudCesiumEvents {\n  onFrameChange?: (pointCloud: any /* Cesium.TimeDynamicPointCloud */) => void;\n}\n\nexport interface TimeDynamicPointCloudProps\n  extends TimeDynamicPointCloudCesiumProps,\n    TimeDynamicPointCloudCesiumReadonlyProps,\n    TimeDynamicPointCloudCesiumEvents {\n  // Calls when the point cloud is completely loaded.\n  onReady?: (pointCloud: any /* Cesium.TimeDynamicPointCloud */) => void;\n}\n\nexport interface TimeDynamicPointCloudContext {\n  primitiveCollection?: Cesium.PrimitiveCollection;\n  cesiumWidget?: Cesium.CesiumWidget;\n}\n\nconst cesiumProps: Array<keyof TimeDynamicPointCloudCesiumProps> = [\n  \"clippingPlanes\",\n  \"clock\",\n  \"intervals\",\n  \"maximumMemoryUsage\",\n  \"modelMatrix\",\n  \"shadows\",\n  \"show\",\n  \"style\",\n];\n\nconst cesiumReadonlyProps: Array<keyof TimeDynamicPointCloudCesiumReadonlyProps> = [\"shading\"];\n\nconst cesiumEventProps: EventkeyMap<any, keyof TimeDynamicPointCloudCesiumEvents> = {\n  frameChanged: \"onFrameChange\",\n};\n\nconst TimeDynamicPointCloud = createCesiumComponent<\n  any /* Cesium.TimeDynamicPointCloud */,\n  TimeDynamicPointCloudProps,\n  TimeDynamicPointCloudContext\n>({\n  name: \"TimeDynamicPointCloud\",\n  create(cprops, props, context) {\n    const tdpc = new (Cesium as any).TimeDynamicPointCloud({\n      ...cprops,\n      clock: cprops.clock || (context.cesiumWidget && context.cesiumWidget.clock),\n    });\n    if (props.onReady) {\n      tdpc.readyPromise.then(props.onReady);\n    }\n    return tdpc;\n  },\n  mount(element, context) {\n    if (context.primitiveCollection) {\n      context.primitiveCollection.add(element);\n    }\n  },\n  unmount(element, context) {\n    if (context.primitiveCollection && !context.primitiveCollection.isDestroyed()) {\n      context.primitiveCollection.remove(element);\n    }\n    if (!element.isDestroyed()) {\n      element.destroy();\n    }\n  },\n  cesiumProps,\n  cesiumReadonlyProps,\n  cesiumEventProps,\n});\n\nexport default TimeDynamicPointCloud;\n","import React from \"react\";\nimport Cesium, { Viewer as CesiumViewer } from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\nimport EventManager from \"./core/EventManager\";\n\n/*\n@summary\n`Viewer` is a root component of resium same as `CesiumWidget`. All components of resium except the root components have to be mounted inside it.\n*/\n\n/*\n@example\n<Viewer full animation={false} timeline={false} />\n*/\n\n/*\n@scope\nEverywhere. `Viewer` is a root component. \n*/\n\nexport interface ViewerCesiumProps {\n  terrainProvider?: Cesium.TerrainProvider;\n  terrainShadows?: Cesium.ShadowMode;\n  clockTrackedDataSource?: Cesium.DataSource;\n  targetFrameRate?: number;\n  useDefaultRenderLoop?: boolean;\n  resolutionScale?: number;\n  allowDataSourcesToSuspendAnimation?: boolean;\n  trackedEntity?: Cesium.Entity;\n  selectedEntity?: Cesium.Entity;\n  shadows?: boolean;\n}\n\nexport interface ViewerCesiumReadonlyProps {\n  animation?: boolean;\n  baseLayerPicker?: boolean;\n  fullscreenButton?: boolean;\n  vrButton?: boolean;\n  geocoder?: boolean;\n  homeButton?: boolean;\n  infoBox?: boolean;\n  sceneModePicker?: boolean;\n  selectionIndicator?: boolean;\n  timeline?: boolean;\n  navigationHelpButton?: boolean;\n  navigationInstructionsInitiallyVisible?: boolean;\n  scene3DOnly?: boolean;\n  shouldAnimate?: boolean;\n  clockViewModel?: Cesium.ClockViewModel;\n  selectedImageryProviderViewModel?: Cesium.ProviderViewModel;\n  imageryProviderViewModels?: Cesium.ProviderViewModel[];\n  selectedTerrainProviderViewModel?: Cesium.ProviderViewModel;\n  terrainProviderViewModels?: Cesium.ProviderViewModel[];\n  // If false, the default imagery layer will be removed.\n  imageryProvider?: Cesium.ImageryProvider | false;\n  skyBox?: Cesium.SkyBox;\n  skyAtmosphere?: Cesium.SkyAtmosphere;\n  fullscreenElement?: Element | string;\n  showRenderLoopErrors?: boolean;\n  automaticallyTrackDataSourceClocks?: boolean;\n  contextOptions?: any;\n  sceneMode?: Cesium.SceneMode;\n  mapProjection?: Cesium.MapProjection;\n  globe?: Cesium.Globe;\n  orderIndependentTranslucency?: boolean;\n  creditContainer?: Element | string;\n  creditViewport?: Element | string;\n  dataSources?: Cesium.DataSourceCollection;\n  terrainExaggeration?: number;\n  mapMode2D?: Cesium.MapMode2D;\n  projectionPicker?: boolean;\n  requestRenderMode?: boolean;\n  maximumRenderTimeChange?: number;\n}\n\nexport interface ViewerCesiumEvents {\n  onSelectedEntityChange?: () => void;\n  onTrackedEntityChange?: () => void;\n}\n\nconst cesiumProps: Array<keyof ViewerCesiumProps> = [\n  \"terrainProvider\",\n  \"terrainShadows\",\n  \"clockTrackedDataSource\",\n  \"targetFrameRate\",\n  \"useDefaultRenderLoop\",\n  \"resolutionScale\",\n  \"allowDataSourcesToSuspendAnimation\",\n  \"trackedEntity\",\n  \"selectedEntity\",\n  \"shadows\",\n];\n\nconst cesiumReadonlyProps: Array<keyof ViewerCesiumReadonlyProps> = [\n  \"animation\",\n  \"baseLayerPicker\",\n  \"fullscreenButton\",\n  \"vrButton\",\n  \"geocoder\",\n  \"homeButton\",\n  \"infoBox\",\n  \"sceneModePicker\",\n  \"selectionIndicator\",\n  \"timeline\",\n  \"navigationHelpButton\",\n  \"navigationInstructionsInitiallyVisible\",\n  \"scene3DOnly\",\n  \"shouldAnimate\",\n  \"clockViewModel\",\n  \"selectedImageryProviderViewModel\",\n  \"imageryProviderViewModels\",\n  \"selectedTerrainProviderViewModel\",\n  \"terrainProviderViewModels\",\n  \"imageryProvider\",\n  \"skyBox\",\n  \"skyAtmosphere\",\n  \"fullscreenElement\",\n  \"showRenderLoopErrors\",\n  \"automaticallyTrackDataSourceClocks\",\n  \"contextOptions\",\n  \"sceneMode\",\n  \"mapProjection\",\n  \"globe\",\n  \"orderIndependentTranslucency\",\n  \"creditContainer\",\n  \"creditViewport\",\n  \"dataSources\",\n  \"terrainExaggeration\",\n  \"mapMode2D\",\n  \"projectionPicker\",\n  \"requestRenderMode\",\n  \"maximumRenderTimeChange\",\n];\n\nconst cesiumEventProps: EventkeyMap<CesiumViewer, keyof ViewerCesiumEvents> = {\n  selectedEntityChanged: \"onSelectedEntityChange\",\n  trackedEntityChanged: \"onTrackedEntityChange\",\n};\n\nexport interface ViewerProps\n  extends ViewerCesiumProps,\n    ViewerCesiumReadonlyProps,\n    ViewerCesiumEvents {\n  // Applied to outer `div` element\n  className?: string;\n  // Applied to outer `div` element\n  id?: string;\n  // Applied to outer `div` element\n  style?: React.CSSProperties;\n  // Same as `style={{ position: \"absolute\", top: 0, left: 0, right: 0, bottom: 0 }}` if it is true.\n  full?: boolean;\n  // All props applied to outer `div` element\n  containerProps?: any;\n  // It is applied in order from the top to Viewer as `viewer.extend(XXX);` after the viewer is mounted. Nothing happens even it is updated by itself.\n  extend?: CesiumViewer.ViewerMixin[] | CesiumViewer.ViewerMixin;\n  children?: React.ReactNode;\n}\n\nexport interface ViewerContext {\n  viewer: CesiumViewer;\n  cesiumWidget: Cesium.CesiumWidget;\n  dataSourceCollection: Cesium.DataSourceCollection;\n  entityCollection: Cesium.EntityCollection;\n  scene: Cesium.Scene;\n  globe: Cesium.Globe;\n  camera: Cesium.Camera;\n}\n\nconst Viewer = createCesiumComponent<\n  CesiumViewer,\n  ViewerProps,\n  {},\n  ViewerContext | {},\n  HTMLDivElement\n>({\n  name: \"Viewer\",\n  createRef: true,\n  create(cprops, props, context, ref) {\n    // ref is not always undefined\n    const v = new CesiumViewer(\n      (ref as React.RefObject<HTMLDivElement>).current as any,\n      cprops as any,\n    );\n\n    if (cprops.imageryProvider === false) {\n      v.imageryLayers.removeAll();\n    }\n\n    if (v && props.extend) {\n      if (Array.isArray(props.extend)) {\n        props.extend.forEach(e => {\n          v.extend(e, {});\n        });\n      } else {\n        v.extend(props.extend, {});\n      }\n    }\n\n    // common event manager for managing events of Entity and Primitives\n    let state: any;\n    if (v) {\n      state = new EventManager(v.scene, v.canvas);\n    }\n\n    return [v, state];\n  },\n  render(element, props, mounted, ref) {\n    return (\n      <div\n        className={props.className}\n        id={props.id}\n        ref={ref}\n        style={{\n          ...(props.full\n            ? {\n                position: \"absolute\",\n                bottom: \"0\",\n                left: \"0\",\n                right: \"0\",\n                top: \"0\",\n              }\n            : {}),\n          ...props.style,\n        }}\n        {...props.containerProps}>\n        {element ? props.children : null}\n      </div>\n    );\n  },\n  unmount(element, cprops, props, ref, state) {\n    if (element && state) {\n      const em = state as EventManager;\n      if (!em.isDestroyed()) {\n        em.destroy();\n      }\n    }\n    if (element && !element.isDestroyed()) {\n      element.destroy();\n    }\n  },\n  provide(element, props, state) {\n    if (!element) {\n      return {};\n    }\n    return {\n      viewer: element,\n      cesiumWidget: element.cesiumWidget,\n      dataSourceCollection: element.dataSources,\n      entityCollection: element.entities,\n      scene: element.scene,\n      camera: element.scene.camera,\n      imageryLayerCollection: element.scene.globe.imageryLayers,\n      primitiveCollection: element.scene.primitives,\n      globe: element.scene.globe,\n      __RESIUM_EVENT_MANAGER: state, // EventManager\n    };\n  },\n  cesiumProps,\n  cesiumReadonlyProps,\n  cesiumEventProps,\n});\n\nexport default Viewer;\n","import Cesium from \"cesium\";\n\nimport createCesiumComponent, { EventkeyMap } from \"./core/CesiumComponent\";\n\n/*\n@summary\n`WallGraphics` is a wall visualization for the entity.\n*/\n\n/*\n@scope\nWallGraphics is only inside [Entity](/components/Entity) components,\nand can not be used more than once for each entity.\n*/\n\nexport interface WallGraphicsCesiumProps {\n  positions?: Cesium.Property | Cesium.Cartesian3[];\n  maximumHeights?: Cesium.Property | number[];\n  minimumHeights?: Cesium.Property | number[];\n  show?: Cesium.Property | boolean;\n  fill?: Cesium.Property | boolean;\n  material?: Cesium.MaterialProperty | Cesium.Color | string;\n  outline?: Cesium.Property | boolean;\n  outlineColor?: Cesium.Property | Cesium.Color;\n  outlineWidth?: Cesium.Property | number;\n  granularity?: Cesium.Property | number;\n  shadows?: Cesium.Property | Cesium.ShadowMode;\n  distanceDisplayCondition?: Cesium.Property | Cesium.DistanceDisplayCondition;\n}\n\nexport interface WallGraphicsCesiumEvents {\n  onDefinitionChange?: () => void;\n}\n\nexport interface WallGraphicsProps extends WallGraphicsCesiumProps, WallGraphicsCesiumEvents {}\n\nexport interface WallGraphicsContext {\n  entity?: Cesium.Entity;\n}\n\nconst cesiumProps: Array<keyof WallGraphicsCesiumProps> = [\n  \"positions\",\n  \"maximumHeights\",\n  \"minimumHeights\",\n  \"show\",\n  \"fill\",\n  \"material\",\n  \"outline\",\n  \"outlineColor\",\n  \"outlineWidth\",\n  \"granularity\",\n  \"shadows\",\n  \"distanceDisplayCondition\",\n];\n\nconst cesiumEventProps: EventkeyMap<Cesium.WallGraphics, keyof WallGraphicsCesiumEvents> = {\n  definitionChanged: \"onDefinitionChange\",\n};\n\nconst WallGraphics = createCesiumComponent<\n  Cesium.WallGraphics,\n  WallGraphicsProps,\n  WallGraphicsContext\n>({\n  name: \"WallGraphics\",\n  create(cprops) {\n    return new Cesium.WallGraphics(cprops as any);\n  },\n  mount(element, context) {\n    if (context.entity) {\n      context.entity.wall = element;\n    }\n  },\n  unmount(element, context) {\n    if (context.entity) {\n      context.entity.wall = undefined as any;\n    }\n  },\n  cesiumProps,\n  cesiumEventProps,\n});\n\nexport default WallGraphics;\n"],"names":["INFINITY","MAX_SAFE_INTEGER","argsTag","funcTag","genTag","symbolTag","freeGlobal","global","Object","freeSelf","self","root","Function","arrayPush","array","values","index","length","offset","objectProto","prototype","hasOwnProperty","objectToString","toString","Symbol","propertyIsEnumerable","spreadableSymbol","isConcatSpreadable","undefined","nativeMax","Math","max","isFlattenable","value","isArray","isObjectLike","isLength","tag","type","isObject","call","isFunction","isArrayLike","isArrayLikeObject","isArguments","toKey","isSymbol","result","Array","func","start","object","props","predicate","key","basePickBy","basePick","iteratee","arrayMap","baseFlatten","depth","isStrict","args","arguments","otherArgs","thisArg","apply","this","Provider","Consumer","withCesium","Component","React","forwardRef","ref","assign","cesium","attachEvents","target","events","entries","forEach","_a","k","v","ev","Event","addEventListener","detachEvents","removeEventListener","updateEvents","prevEvents","newEvents","pek","keys","nek","re","map","reduce","e","indexOf","ne","createCesiumComponent","opts","_super","_this","createRef","create","tslib_1.__extends","CesiumComponent","cesiumEventProps","a","cesiumEventName","eventProp","pick","cesiumProps","cesiumReadonlyProps","b","filter","_ce","noRender","render","mounted","children","updateProvided","provide","_provided","mount","forceUpdate","prevProps","shouldUpdate","getCesiumReadOnlyProps","unmount","update","element","_state","setCesiumPropsAfterCreate","getCesiumProps","getCesiumEventMap","_i","name","defaultProps","PureComponent","createCameraOperation","CameraOperation","camera","cameraOperationStart","cancelFlight","cancelCameraFlight","pickedObjectEquals","picked","id","primitive","equals","Polyline","show","width","loop","material","positions","DistanceDisplayCondition","distanceDisplayCondition","eventNames","scene","canvas","onClick","Map","onDoubleClick","onMouseDown","onMouseUp","onMiddleClick","onMiddleDown","onMiddleUp","onMouseMove","onPinchEnd","onPinchMove","onPinchStart","onRightClick","onRightDown","onRightUp","onWheel","onMouseEnter","onMouseLeave","endPosition","changed","clear","hovered","h","p","set","cb","get","et","position","sshe","ScreenSpaceEventHandler","EventManager","isDestroyed","destroy","delete","includes","on","off","commit","destroyed","elements","Set","elements2","size","removeInputAction","ScreenSpaceEventType","MOUSE_MOVE","getInputAction","setInputAction","m","eventType","has","add","cesiumEventType","eventTypeMap","eventCallback","pos","Cesium","Entity","LEFT_CLICK","LEFT_DOUBLE_CLICK","LEFT_DOWN","LEFT_UP","MIDDLE_CLICK","MIDDLE_DOWN","MIDDLE_UP","PINCH_END","PINCH_MOVE","PINCH_START","RIGHT_CLICK","RIGHT_DOWN","RIGHT_UP","WHEEL","Billboard","cprops","context","billboardCollection","__RESIUM_EVENT_MANAGER","clearEvents","remove","setEvents","BillboardCollection","modelMatrix","debugShowBoundingVolume","blendOption","primitiveCollection","BillboardGraphics","entity","billboard","definitionChanged","BoxGraphics","box","Camera","moveEnd","moveStart","CameraFlyHome","flyHome","duration","CameraFlyTo","destination","orientation","onComplete","onCancel","endTransform","maximumHeight","pitchAdjustHeight","flyOverLongitude","flyOverLongitudeWeight","easingFunction","flyTo","complete","cancel","CameraFlyToBoundingSphere","boundingSphere","flyToBoundingSphere","Cesium3DTileset","c3ts","colorBlendAmount","colorBlendMode","onReady","readyPromise","then","allTilesLoaded","initialTilesLoaded","loadProgress","tileFailed","tileLoad","tileUnload","tileVisible","CesiumWidget","state","CesiumCesiumWidget","current","resolutionScale","className","style","full","bottom","left","right","top","containerProps","cesiumWidget","imageryLayerCollection","globe","imageryLayers","primitives","__RESIUM_SSEH","Clock","clock","onStop","onTick","CorridorGraphics","cg","classificationType","corridor","CustomDataSource","ds","clustering","dataSourceCollection","entityCollection","entities","dataSource","changedEvent","errorEvent","loadingEvent","CylinderGraphics","cylinder","load","data","onLoad","sourceUri","CzmlDataSource","dataSources","EllipseGraphics","eg","ellipse","EllipsoidGraphics","ellipsoid","CesiumEntity","viewer","selected","selectedEntity","tracked","trackedEntity","renderToStaticMarkup","EntityDescription","description","ConstantProperty","Fog","fog","clampToGround","markerSize","markerSymbol","markerColor","stroke","strokeWidth","fill","describe","GeoJsonDataSource","Globe","imageryLayersUpdatedEvent","terrainProviderChanged","tileLoadedEvent","tileLoadProgressEvent","ImageryLayer","imageryProvider","rectangle","alpha","brightness","contrast","hue","saturation","gamma","splitDirection","minificationFilter","magnificationFilter","maximumAnisotropy","minimumTerrainLevel","maximumTerrainLevel","cutoutRectangle","console","log","ImageryLayerCollection","layerAdded","layerMoved","layerRemoved","layerShownOrHidden","KmlDataSource","refreshEvent","unsupportedNodeEvent","Label","labelCollection","LabelCollection","LabelGraphics","label","Model","createCesiumElement","model","url","fromGltf","ModelGraphics","Moon","moon","ParticleSystem","updateCallback","onUpdate","PathGraphics","path","PlaneGraphics","plane","PointGraphics","point","PointPrimitive","pointPrimitiveCollection","PointPrimitiveCollection","PolygonGraphics","pg","polygon","polylineCollection","PolylineCollection","PolylineGraphics","polyline","PolylineVolumeGraphics","polylineVolume","createPostProcessStage","ps","postProcessStages","enabled","readonlyProps","uniforms","noMount","PostProcessStage","BlackAndWhiteStage","PostProcessStageLibrary","createBlackAndWhiteStage","BrightnessStage","createBrightnessStage","LensFlareStage","createLensFlareStage","NightVisionStage","createNightVisionStage","Fxaa","collection","fxaa","PostProcessStageComposite","AmbientOcclusion","ambientOcclusion","Bloom","bloom","BlurStage","createBlurStage","DepthOfFieldStage","createDepthOfFieldStage","EdgeDetectionStage","createEdgeDetectionStage","SilhouetteStage","createSilhouetteStage","Primitive","RectangleGraphics","morph","mode","morphTime","SceneMode","SCENE2D","morphTo2D","COLUMBUS_VIEW","morphToColumbusView","SCENE3D","morphTo3D","Scene","morphDuration","morphComplete","morphStart","postRender","preRender","preUpdate","renderError","ScreenSpaceCameraController","screenSpaceCameraController","ScreenSpaceEvent","setEvent","modifier","action","screenSpaceEventHandler","useDefault","Sun","sun","TimeDynamicPointCloud","tdpc","frameChanged","Viewer","CesiumViewer","removeAll","extend","em","selectedEntityChanged","trackedEntityChanged","WallGraphics","wall","toUpperCase","slice","replace"],"mappings":"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"}